{"ast":null,"code":"import { memo as e, useMemo as r, useState as i, useCallback as n, createElement as t, Fragment as o, forwardRef as a, useRef as s, useEffect as l } from \"react\";\nimport { useTheme as u, lineCurvePropType as d, blendModePropType as c, motionPropTypes as f, defsPropTypes as p, curveFromProp as h, useValueFormatter as y, useMotionConfig as b, useAnimatedPath as g, getLabelGenerator as m, DotsItem as v, withContainer as x, useDimensions as R, CartesianMarkers as q, bindDefs as O, SvgWrapper as S, ResponsiveWrapper as C, getRelativeCursor as T, isCursorInRect as M } from \"@nivo/core\";\nimport { ordinalColorsPropType as w, useOrdinalColorScale as B, useInheritedColor as k } from \"@nivo/colors\";\nimport { axisPropType as W, Grid as G, Axes as L, renderGridLinesToCanvas as P, renderAxesToCanvas as j } from \"@nivo/axes\";\nimport { LegendPropShape as F, BoxLegendSvg as V, renderLegendToCanvas as E } from \"@nivo/legends\";\nimport { BasicTooltip as Y, TableTooltip as D, Chip as X, useTooltip as z, Crosshair as A } from \"@nivo/tooltip\";\nimport { line as H, area as I } from \"d3-shape\";\nimport { computeXYScalesForSeries as J } from \"@nivo/scales\";\nimport K from \"prop-types\";\nimport { jsx as N, jsxs as Q } from \"react/jsx-runtime\";\nimport { useSpring as U, animated as Z } from \"@react-spring/web\";\nimport { Mesh as $, useVoronoiMesh as _, renderVoronoiToCanvas as ee, renderVoronoiCellToCanvas as re } from \"@nivo/voronoi\";\n\nfunction ie() {\n  return ie = Object.assign || function (e) {\n    for (var r = 1; r < arguments.length; r++) {\n      var i = arguments[r];\n\n      for (var n in i) Object.prototype.hasOwnProperty.call(i, n) && (e[n] = i[n]);\n    }\n\n    return e;\n  }, ie.apply(this, arguments);\n}\n\nvar ne = function (e) {\n  var r = e.point;\n  return N(Y, {\n    id: Q(\"span\", {\n      children: [\"x: \", N(\"strong\", {\n        children: r.data.xFormatted\n      }), \", y:\", \" \", N(\"strong\", {\n        children: r.data.yFormatted\n      })]\n    }),\n    enableChip: !0,\n    color: r.serieColor\n  });\n};\n\nne.propTypes = {\n  point: K.object.isRequired\n};\n\nvar te = e(ne),\n    oe = function (e) {\n  var r = e.slice,\n      i = e.axis,\n      n = u(),\n      t = \"x\" === i ? \"y\" : \"x\";\n  return N(D, {\n    rows: r.points.map(function (e) {\n      return [N(X, {\n        color: e.serieColor,\n        style: n.tooltip.chip\n      }, \"chip\"), e.serieId, N(\"span\", {\n        style: n.tooltip.tableCellValue,\n        children: e.data[t + \"Formatted\"]\n      }, \"value\")];\n    })\n  });\n};\n\noe.propTypes = {\n  slice: K.object.isRequired,\n  axis: K.oneOf([\"x\", \"y\"]).isRequired\n};\n\nvar ae = e(oe),\n    se = {\n  data: K.arrayOf(K.shape({\n    id: K.oneOfType([K.string, K.number]).isRequired,\n    data: K.arrayOf(K.shape({\n      x: K.oneOfType([K.number, K.string, K.instanceOf(Date)]),\n      y: K.oneOfType([K.number, K.string, K.instanceOf(Date)])\n    })).isRequired\n  })).isRequired,\n  xScale: K.object.isRequired,\n  xFormat: K.oneOfType([K.func, K.string]),\n  yScale: K.object.isRequired,\n  yFormat: K.oneOfType([K.func, K.string]),\n  layers: K.arrayOf(K.oneOfType([K.oneOf([\"grid\", \"markers\", \"axes\", \"areas\", \"crosshair\", \"lines\", \"slices\", \"points\", \"mesh\", \"legends\"]), K.func])).isRequired,\n  curve: d.isRequired,\n  axisTop: W,\n  axisRight: W,\n  axisBottom: W,\n  axisLeft: W,\n  enableGridX: K.bool.isRequired,\n  enableGridY: K.bool.isRequired,\n  gridXValues: K.oneOfType([K.number, K.arrayOf(K.oneOfType([K.number, K.string, K.instanceOf(Date)]))]),\n  gridYValues: K.oneOfType([K.number, K.arrayOf(K.oneOfType([K.number, K.string, K.instanceOf(Date)]))]),\n  enablePoints: K.bool.isRequired,\n  pointSymbol: K.func,\n  pointSize: K.number.isRequired,\n  pointColor: K.any.isRequired,\n  pointBorderWidth: K.number.isRequired,\n  pointBorderColor: K.any.isRequired,\n  enablePointLabel: K.bool.isRequired,\n  pointLabel: K.oneOfType([K.string, K.func]).isRequired,\n  markers: K.arrayOf(K.shape({\n    axis: K.oneOf([\"x\", \"y\"]).isRequired,\n    value: K.oneOfType([K.number, K.string, K.instanceOf(Date)]).isRequired,\n    style: K.object\n  })),\n  colors: w.isRequired,\n  enableArea: K.bool.isRequired,\n  areaOpacity: K.number.isRequired,\n  areaBlendMode: c.isRequired,\n  areaBaselineValue: K.oneOfType([K.number, K.string, K.instanceOf(Date)]).isRequired,\n  lineWidth: K.number.isRequired,\n  legends: K.arrayOf(K.shape(F)).isRequired,\n  isInteractive: K.bool.isRequired,\n  debugMesh: K.bool.isRequired,\n  tooltip: K.oneOfType([K.func, K.object]).isRequired,\n  enableSlices: K.oneOf([\"x\", \"y\", !1]).isRequired,\n  debugSlices: K.bool.isRequired,\n  sliceTooltip: K.oneOfType([K.func, K.object]).isRequired,\n  enableCrosshair: K.bool.isRequired,\n  crosshairType: K.string.isRequired\n},\n    le = ie({}, se, {\n  enablePointLabel: K.bool.isRequired,\n  role: K.string.isRequired,\n  useMesh: K.bool.isRequired\n}, f, p),\n    ue = ie({\n  pixelRatio: K.number.isRequired\n}, se),\n    de = {\n  curve: \"linear\",\n  xScale: {\n    type: \"point\"\n  },\n  yScale: {\n    type: \"linear\",\n    min: 0,\n    max: \"auto\"\n  },\n  layers: [\"grid\", \"markers\", \"axes\", \"areas\", \"crosshair\", \"lines\", \"points\", \"slices\", \"mesh\", \"legends\"],\n  axisBottom: {},\n  axisLeft: {},\n  enableGridX: !0,\n  enableGridY: !0,\n  enablePoints: !0,\n  pointSize: 6,\n  pointColor: {\n    from: \"color\"\n  },\n  pointBorderWidth: 0,\n  pointBorderColor: {\n    theme: \"background\"\n  },\n  enablePointLabel: !1,\n  pointLabel: \"yFormatted\",\n  colors: {\n    scheme: \"nivo\"\n  },\n  enableArea: !1,\n  areaBaselineValue: 0,\n  areaOpacity: .2,\n  areaBlendMode: \"normal\",\n  lineWidth: 2,\n  legends: [],\n  isInteractive: !0,\n  tooltip: te,\n  enableSlices: !1,\n  debugSlices: !1,\n  sliceTooltip: ae,\n  debugMesh: !1,\n  enableCrosshair: !0,\n  crosshairType: \"bottom-left\"\n},\n    ce = ie({}, de, {\n  enablePointLabel: !1,\n  useMesh: !1,\n  animate: !0,\n  motionConfig: \"gentle\",\n  defs: [],\n  fill: [],\n  role: \"img\"\n}),\n    fe = ie({}, de, {\n  pixelRatio: \"undefined\" != typeof window && window.devicePixelRatio || 1\n}),\n    pe = function (e) {\n  var i = e.curve;\n  return r(function () {\n    return H().defined(function (e) {\n      return null !== e.x && null !== e.y;\n    }).x(function (e) {\n      return e.x;\n    }).y(function (e) {\n      return e.y;\n    }).curve(h(i));\n  }, [i]);\n},\n    he = function (e) {\n  var i = e.curve,\n      n = e.yScale,\n      t = e.areaBaselineValue;\n  return r(function () {\n    return I().defined(function (e) {\n      return null !== e.x && null !== e.y;\n    }).x(function (e) {\n      return e.x;\n    }).y1(function (e) {\n      return e.y;\n    }).curve(h(i)).y0(n(t));\n  }, [i, n, t]);\n},\n    ye = function (e) {\n  var i = e.enableSlices,\n      n = e.points,\n      t = e.width,\n      o = e.height;\n  return r(function () {\n    if (!1 === i) return [];\n\n    if (\"x\" === i) {\n      var e = new Map();\n      return n.forEach(function (r) {\n        null !== r.data.x && null !== r.data.y && (e.has(r.x) ? e.get(r.x).push(r) : e.set(r.x, [r]));\n      }), Array.from(e.entries()).sort(function (e, r) {\n        return e[0] - r[0];\n      }).map(function (e, r, i) {\n        var n,\n            a = e[0],\n            s = e[1],\n            l = i[r - 1],\n            u = i[r + 1];\n        return {\n          id: a,\n          x0: n = l ? a - (a - l[0]) / 2 : a,\n          x: a,\n          y0: 0,\n          y: 0,\n          width: u ? a - n + (u[0] - a) / 2 : t - n,\n          height: o,\n          points: s.reverse()\n        };\n      });\n    }\n\n    if (\"y\" === i) {\n      var r = new Map();\n      return n.forEach(function (e) {\n        null !== e.data.x && null !== e.data.y && (r.has(e.y) ? r.get(e.y).push(e) : r.set(e.y, [e]));\n      }), Array.from(r.entries()).sort(function (e, r) {\n        return e[0] - r[0];\n      }).map(function (e, r, i) {\n        var n,\n            a,\n            s = e[0],\n            l = e[1],\n            u = i[r - 1],\n            d = i[r + 1];\n        return n = u ? s - (s - u[0]) / 2 : s, a = d ? s - n + (d[0] - s) / 2 : o - n, {\n          id: s,\n          x0: 0,\n          x: 0,\n          y0: n,\n          y: s,\n          width: t,\n          height: a,\n          points: l.reverse()\n        };\n      });\n    }\n  }, [i, n]);\n},\n    be = function (e) {\n  var t = e.data,\n      o = e.xScale,\n      a = void 0 === o ? ce.xScale : o,\n      s = e.xFormat,\n      l = e.yScale,\n      d = void 0 === l ? ce.yScale : l,\n      c = e.yFormat,\n      f = e.width,\n      p = e.height,\n      h = e.colors,\n      b = void 0 === h ? ce.colors : h,\n      g = e.curve,\n      m = void 0 === g ? ce.curve : g,\n      v = e.areaBaselineValue,\n      x = void 0 === v ? ce.areaBaselineValue : v,\n      R = e.pointColor,\n      q = void 0 === R ? ce.pointColor : R,\n      O = e.pointBorderColor,\n      S = void 0 === O ? ce.pointBorderColor : O,\n      C = e.enableSlices,\n      T = void 0 === C ? ce.enableSlicesTooltip : C,\n      M = y(s),\n      w = y(c),\n      W = B(b, \"id\"),\n      G = u(),\n      L = k(q, G),\n      P = k(S, G),\n      j = i([]),\n      F = j[0],\n      V = j[1],\n      E = r(function () {\n    return J(t.filter(function (e) {\n      return -1 === F.indexOf(e.id);\n    }), a, d, f, p);\n  }, [t, F, a, d, f, p]),\n      Y = E.xScale,\n      D = E.yScale,\n      X = E.series,\n      z = r(function () {\n    var e = t.map(function (e) {\n      return {\n        id: e.id,\n        label: e.id,\n        color: W(e)\n      };\n    }),\n        r = e.map(function (e) {\n      return ie({}, X.find(function (r) {\n        return r.id === e.id;\n      }), {\n        color: e.color\n      });\n    }).filter(function (e) {\n      return Boolean(e.id);\n    });\n    return {\n      legendData: e.map(function (e) {\n        return ie({}, e, {\n          hidden: !r.find(function (r) {\n            return r.id === e.id;\n          })\n        });\n      }).reverse(),\n      series: r\n    };\n  }, [t, X, W]),\n      A = z.legendData,\n      H = z.series,\n      I = n(function (e) {\n    V(function (r) {\n      return r.indexOf(e) > -1 ? r.filter(function (r) {\n        return r !== e;\n      }) : [].concat(r, [e]);\n    });\n  }, []),\n      K = function (e) {\n    var i = e.series,\n        n = e.getPointColor,\n        t = e.getPointBorderColor,\n        o = e.formatX,\n        a = e.formatY;\n    return r(function () {\n      return i.reduce(function (e, r) {\n        return [].concat(e, r.data.filter(function (e) {\n          return null !== e.position.x && null !== e.position.y;\n        }).map(function (i, s) {\n          var l = {\n            id: r.id + \".\" + s,\n            index: e.length + s,\n            serieId: r.id,\n            serieColor: r.color,\n            x: i.position.x,\n            y: i.position.y\n          };\n          return l.color = n(r), l.borderColor = t(l), l.data = ie({}, i.data, {\n            xFormatted: o(i.data.x),\n            yFormatted: a(i.data.y)\n          }), l;\n        }));\n      }, []);\n    }, [i, n, t, o, a]);\n  }({\n    series: H,\n    getPointColor: L,\n    getPointBorderColor: P,\n    formatX: M,\n    formatY: w\n  }),\n      N = ye({\n    enableSlices: T,\n    points: K,\n    width: f,\n    height: p\n  });\n\n  return {\n    legendData: A,\n    toggleSerie: I,\n    lineGenerator: pe({\n      curve: m\n    }),\n    areaGenerator: he({\n      curve: m,\n      yScale: D,\n      areaBaselineValue: x\n    }),\n    getColor: W,\n    series: H,\n    xScale: Y,\n    yScale: D,\n    slices: N,\n    points: K\n  };\n},\n    ge = function (e) {\n  var r = e.areaBlendMode,\n      i = e.areaOpacity,\n      n = e.color,\n      t = e.fill,\n      o = e.path,\n      a = b(),\n      s = a.animate,\n      l = a.config,\n      u = g(o),\n      d = U({\n    color: n,\n    config: l,\n    immediate: !s\n  });\n  return N(Z.path, {\n    d: u,\n    fill: t || d.color,\n    fillOpacity: i,\n    strokeWidth: 0,\n    style: {\n      mixBlendMode: r\n    }\n  });\n};\n\nge.propTypes = {\n  areaBlendMode: c.isRequired,\n  areaOpacity: K.number.isRequired,\n  color: K.string,\n  fill: K.string,\n  path: K.string.isRequired\n};\n\nvar me = function (e) {\n  var r = e.areaGenerator,\n      i = e.areaOpacity,\n      n = e.areaBlendMode,\n      t = e.lines.slice(0).reverse();\n  return N(\"g\", {\n    children: t.map(function (e) {\n      return N(ge, ie({\n        path: r(e.data.map(function (e) {\n          return e.position;\n        }))\n      }, ie({\n        areaOpacity: i,\n        areaBlendMode: n\n      }, e)), e.id);\n    })\n  });\n};\n\nme.propTypes = {\n  areaGenerator: K.func.isRequired,\n  areaOpacity: K.number.isRequired,\n  areaBlendMode: c.isRequired,\n  lines: K.arrayOf(K.object).isRequired\n};\n\nvar ve = e(me),\n    xe = function (e) {\n  var i = e.lineGenerator,\n      n = e.points,\n      t = e.color,\n      o = e.thickness,\n      a = r(function () {\n    return i(n);\n  }, [i, n]),\n      s = g(a);\n  return N(Z.path, {\n    d: s,\n    fill: \"none\",\n    strokeWidth: o,\n    stroke: t\n  });\n};\n\nxe.propTypes = {\n  points: K.arrayOf(K.shape({\n    x: K.oneOfType([K.string, K.number]),\n    y: K.oneOfType([K.string, K.number])\n  })),\n  lineGenerator: K.func.isRequired,\n  color: K.string.isRequired,\n  thickness: K.number.isRequired\n};\n\nvar Re = e(xe),\n    qe = function (e) {\n  var r = e.lines,\n      i = e.lineGenerator,\n      n = e.lineWidth;\n  return r.slice(0).reverse().map(function (e) {\n    var r = e.id,\n        t = e.data,\n        o = e.color;\n    return N(Re, {\n      id: r,\n      points: t.map(function (e) {\n        return e.position;\n      }),\n      lineGenerator: i,\n      color: o,\n      thickness: n\n    }, r);\n  });\n};\n\nqe.propTypes = {\n  lines: K.arrayOf(K.shape({\n    id: K.oneOfType([K.string, K.number]).isRequired,\n    color: K.string.isRequired,\n    data: K.arrayOf(K.shape({\n      data: K.shape({\n        x: K.oneOfType([K.string, K.number, K.instanceOf(Date)]),\n        y: K.oneOfType([K.string, K.number, K.instanceOf(Date)])\n      }).isRequired,\n      position: K.shape({\n        x: K.number,\n        y: K.number\n      }).isRequired\n    })).isRequired\n  })).isRequired,\n  lineWidth: K.number.isRequired,\n  lineGenerator: K.func.isRequired\n};\n\nvar Oe = e(qe),\n    Se = function (e) {\n  var r = e.slice,\n      i = e.axis,\n      o = e.debug,\n      a = e.tooltip,\n      s = e.isCurrent,\n      l = e.setCurrent,\n      u = z(),\n      d = u.showTooltipFromEvent,\n      c = u.hideTooltip,\n      f = n(function (e) {\n    d(t(a, {\n      slice: r,\n      axis: i\n    }), e, \"right\"), l(r);\n  }, [d, a, r]),\n      p = n(function (e) {\n    d(t(a, {\n      slice: r,\n      axis: i\n    }), e, \"right\");\n  }, [d, a, r]),\n      h = n(function () {\n    c(), l(null);\n  }, [c]);\n  return N(\"rect\", {\n    x: r.x0,\n    y: r.y0,\n    width: r.width,\n    height: r.height,\n    stroke: \"red\",\n    strokeWidth: o ? 1 : 0,\n    strokeOpacity: .75,\n    fill: \"red\",\n    fillOpacity: s && o ? .35 : 0,\n    onMouseEnter: f,\n    onMouseMove: p,\n    onMouseLeave: h\n  });\n};\n\nSe.propTypes = {\n  slice: K.object.isRequired,\n  axis: K.oneOf([\"x\", \"y\"]).isRequired,\n  debug: K.bool.isRequired,\n  height: K.number.isRequired,\n  tooltip: K.oneOfType([K.func, K.object]),\n  isCurrent: K.bool.isRequired,\n  setCurrent: K.func.isRequired\n};\n\nvar Ce = e(Se),\n    Te = function (e) {\n  var r = e.slices,\n      i = e.axis,\n      n = e.debug,\n      t = e.height,\n      o = e.tooltip,\n      a = e.current,\n      s = e.setCurrent;\n  return r.map(function (e) {\n    return N(Ce, {\n      slice: e,\n      axis: i,\n      debug: n,\n      height: t,\n      tooltip: o,\n      setCurrent: s,\n      isCurrent: null !== a && a.id === e.id\n    }, e.id);\n  });\n};\n\nTe.propTypes = {\n  slices: K.arrayOf(K.shape({\n    id: K.oneOfType([K.number, K.string, K.instanceOf(Date)]).isRequired,\n    x: K.number.isRequired,\n    y: K.number.isRequired,\n    points: K.arrayOf(K.object).isRequired\n  })).isRequired,\n  axis: K.oneOf([\"x\", \"y\"]).isRequired,\n  debug: K.bool.isRequired,\n  height: K.number.isRequired,\n  tooltip: K.oneOfType([K.func, K.object]).isRequired,\n  current: K.object,\n  setCurrent: K.func.isRequired\n};\n\nvar Me = e(Te),\n    we = function (e) {\n  var r = e.points,\n      i = e.symbol,\n      n = e.size,\n      t = e.borderWidth,\n      o = e.enableLabel,\n      a = e.label,\n      s = e.labelYOffset,\n      l = u(),\n      d = m(a),\n      c = r.reverse().map(function (e) {\n    return {\n      id: e.id,\n      x: e.x,\n      y: e.y,\n      datum: e.data,\n      fill: e.color,\n      stroke: e.borderColor,\n      label: o ? d(e.data) : null\n    };\n  });\n  return N(\"g\", {\n    children: c.map(function (e) {\n      return N(v, {\n        x: e.x,\n        y: e.y,\n        datum: e.datum,\n        symbol: i,\n        size: n,\n        color: e.fill,\n        borderWidth: t,\n        borderColor: e.stroke,\n        label: e.label,\n        labelYOffset: s,\n        theme: l\n      }, e.id);\n    })\n  });\n};\n\nwe.propTypes = {\n  points: K.arrayOf(K.object),\n  symbol: K.func,\n  size: K.number.isRequired,\n  color: K.func.isRequired,\n  borderWidth: K.number.isRequired,\n  borderColor: K.func.isRequired,\n  enableLabel: K.bool.isRequired,\n  label: K.oneOfType([K.string, K.func]).isRequired,\n  labelYOffset: K.number\n};\n\nvar Be = e(we),\n    ke = function (e) {\n  var r = e.points,\n      i = e.width,\n      o = e.height,\n      a = e.margin,\n      s = e.setCurrent,\n      l = e.onMouseEnter,\n      u = e.onMouseMove,\n      d = e.onMouseLeave,\n      c = e.onClick,\n      f = e.tooltip,\n      p = e.debug,\n      h = z(),\n      y = h.showTooltipAt,\n      b = h.hideTooltip,\n      g = n(function (e, r) {\n    y(t(f, {\n      point: e\n    }), [e.x + a.left, e.y + a.top], \"top\"), s(e), l && l(e, r);\n  }, [s, y, f, l, a]),\n      m = n(function (e, r) {\n    y(t(f, {\n      point: e\n    }), [e.x + a.left, e.y + a.top], \"top\"), s(e), u && u(e, r);\n  }, [s, y, f, u]),\n      v = n(function (e, r) {\n    b(), s(null), d && d(e, r);\n  }, [b, s, d]),\n      x = n(function (e, r) {\n    c && c(e, r);\n  }, [c]);\n  return N($, {\n    nodes: r,\n    width: i,\n    height: o,\n    onMouseEnter: g,\n    onMouseMove: m,\n    onMouseLeave: v,\n    onClick: x,\n    debug: p\n  });\n};\n\nke.propTypes = {\n  points: K.arrayOf(K.object).isRequired,\n  width: K.number.isRequired,\n  height: K.number.isRequired,\n  margin: K.object.isRequired,\n  setCurrent: K.func.isRequired,\n  onMouseEnter: K.func,\n  onMouseMove: K.func,\n  onMouseLeave: K.func,\n  onClick: K.func,\n  tooltip: K.oneOfType([K.func, K.object]).isRequired,\n  debug: K.bool.isRequired\n};\n\nvar We = e(ke),\n    Ge = function (e) {\n  var r = e.data,\n      n = e.xScale,\n      t = e.xFormat,\n      a = e.yScale,\n      s = e.yFormat,\n      l = e.layers,\n      d = e.curve,\n      c = e.areaBaselineValue,\n      f = e.colors,\n      p = e.margin,\n      h = e.width,\n      y = e.height,\n      b = e.axisTop,\n      g = e.axisRight,\n      m = e.axisBottom,\n      v = e.axisLeft,\n      x = e.enableGridX,\n      C = e.enableGridY,\n      T = e.gridXValues,\n      M = e.gridYValues,\n      w = e.lineWidth,\n      B = e.enableArea,\n      W = e.areaOpacity,\n      P = e.areaBlendMode,\n      j = e.enablePoints,\n      F = e.pointSymbol,\n      E = e.pointSize,\n      Y = e.pointColor,\n      D = e.pointBorderWidth,\n      X = e.pointBorderColor,\n      z = e.enablePointLabel,\n      H = e.pointLabel,\n      I = e.pointLabelYOffset,\n      J = e.defs,\n      K = e.fill,\n      Q = e.markers,\n      U = e.legends,\n      Z = e.isInteractive,\n      $ = e.useMesh,\n      _ = e.debugMesh,\n      ee = e.onMouseEnter,\n      re = e.onMouseMove,\n      ne = e.onMouseLeave,\n      te = e.onClick,\n      oe = e.tooltip,\n      ae = e.enableSlices,\n      se = e.debugSlices,\n      le = e.sliceTooltip,\n      ue = e.enableCrosshair,\n      de = e.crosshairType,\n      ce = e.role,\n      fe = R(h, y, p),\n      pe = fe.margin,\n      he = fe.innerWidth,\n      ye = fe.innerHeight,\n      ge = fe.outerWidth,\n      me = fe.outerHeight,\n      xe = be({\n    data: r,\n    xScale: n,\n    xFormat: t,\n    yScale: a,\n    yFormat: s,\n    width: he,\n    height: ye,\n    colors: f,\n    curve: d,\n    areaBaselineValue: c,\n    pointColor: Y,\n    pointBorderColor: X,\n    enableSlices: ae\n  }),\n      Re = xe.legendData,\n      qe = xe.toggleSerie,\n      Se = xe.lineGenerator,\n      Ce = xe.areaGenerator,\n      Te = xe.series,\n      we = xe.xScale,\n      ke = xe.yScale,\n      Ge = xe.slices,\n      Le = xe.points,\n      Pe = u(),\n      je = k(Y, Pe),\n      Fe = k(X, Pe),\n      Ve = i(null),\n      Ee = Ve[0],\n      Ye = Ve[1],\n      De = i(null),\n      Xe = De[0],\n      ze = De[1],\n      Ae = {\n    grid: N(G, {\n      theme: Pe,\n      width: he,\n      height: ye,\n      xScale: x ? we : null,\n      yScale: C ? ke : null,\n      xValues: T,\n      yValues: M\n    }, \"grid\"),\n    markers: N(q, {\n      markers: Q,\n      width: he,\n      height: ye,\n      xScale: we,\n      yScale: ke,\n      theme: Pe\n    }, \"markers\"),\n    axes: N(L, {\n      xScale: we,\n      yScale: ke,\n      width: he,\n      height: ye,\n      theme: Pe,\n      top: b,\n      right: g,\n      bottom: m,\n      left: v\n    }, \"axes\"),\n    areas: null,\n    lines: N(Oe, {\n      lines: Te,\n      lineGenerator: Se,\n      lineWidth: w\n    }, \"lines\"),\n    slices: null,\n    points: null,\n    crosshair: null,\n    mesh: null,\n    legends: U.map(function (e, r) {\n      return N(V, ie({}, e, {\n        containerWidth: he,\n        containerHeight: ye,\n        data: e.data || Re,\n        theme: Pe,\n        toggleSerie: e.toggleSerie ? qe : void 0\n      }), \"legend.\" + r);\n    })\n  },\n      He = O(J, Te, K);\n  return B && (Ae.areas = N(ve, {\n    areaGenerator: Ce,\n    areaOpacity: W,\n    areaBlendMode: P,\n    lines: Te\n  }, \"areas\")), Z && !1 !== ae && (Ae.slices = N(Me, {\n    slices: Ge,\n    axis: ae,\n    debug: se,\n    height: ye,\n    tooltip: le,\n    current: Xe,\n    setCurrent: ze\n  }, \"slices\")), j && (Ae.points = N(Be, {\n    points: Le,\n    symbol: F,\n    size: E,\n    color: je,\n    borderWidth: D,\n    borderColor: Fe,\n    enableLabel: z,\n    label: H,\n    labelYOffset: I\n  }, \"points\")), Z && ue && (null !== Ee && (Ae.crosshair = N(A, {\n    width: he,\n    height: ye,\n    x: Ee.x,\n    y: Ee.y,\n    type: de\n  }, \"crosshair\")), null !== Xe && (Ae.crosshair = N(A, {\n    width: he,\n    height: ye,\n    x: Xe.x,\n    y: Xe.y,\n    type: ae\n  }, \"crosshair\"))), Z && $ && !1 === ae && (Ae.mesh = N(We, {\n    points: Le,\n    width: he,\n    height: ye,\n    margin: pe,\n    current: Ee,\n    setCurrent: Ye,\n    onMouseEnter: ee,\n    onMouseMove: re,\n    onMouseLeave: ne,\n    onClick: te,\n    tooltip: oe,\n    debug: _\n  }, \"mesh\")), N(S, {\n    defs: He,\n    width: ge,\n    height: me,\n    margin: pe,\n    role: ce,\n    children: l.map(function (r, i) {\n      return \"function\" == typeof r ? N(o, {\n        children: r(ie({}, e, {\n          innerWidth: he,\n          innerHeight: ye,\n          series: Te,\n          slices: Ge,\n          points: Le,\n          xScale: we,\n          yScale: ke,\n          lineGenerator: Se,\n          areaGenerator: Ce,\n          currentPoint: Ee,\n          setCurrentPoint: Ye,\n          currentSlice: Xe,\n          setCurrentSlice: ze\n        }))\n      }, i) : Ae[r];\n    })\n  });\n};\n\nGe.propTypes = le, Ge.defaultProps = ce;\n\nvar Le = x(Ge),\n    Pe = function (e) {\n  return N(C, {\n    children: function (r) {\n      var i = r.width,\n          n = r.height;\n      return N(Le, ie({\n        width: i,\n        height: n\n      }, e));\n    }\n  });\n},\n    je = function (e) {\n  var r = e.width,\n      o = e.height,\n      a = e.margin,\n      d = e.pixelRatio,\n      c = e.data,\n      f = e.xScale,\n      p = e.xFormat,\n      h = e.yScale,\n      y = e.yFormat,\n      b = e.curve,\n      g = e.layers,\n      m = e.colors,\n      v = e.lineWidth,\n      x = e.enableArea,\n      q = e.areaBaselineValue,\n      O = e.areaOpacity,\n      S = e.enablePoints,\n      C = e.pointSize,\n      w = e.pointColor,\n      B = e.pointBorderWidth,\n      k = e.pointBorderColor,\n      W = e.enableGridX,\n      G = e.gridXValues,\n      L = e.enableGridY,\n      F = e.gridYValues,\n      V = e.axisTop,\n      Y = e.axisRight,\n      D = e.axisBottom,\n      X = e.axisLeft,\n      A = e.legends,\n      H = e.isInteractive,\n      I = e.debugMesh,\n      J = e.onMouseLeave,\n      K = e.onClick,\n      Q = e.tooltip,\n      U = e.canvasRef,\n      Z = s(null),\n      $ = R(r, o, a),\n      ne = $.margin,\n      te = $.innerWidth,\n      oe = $.innerHeight,\n      ae = $.outerWidth,\n      se = $.outerHeight,\n      le = u(),\n      ue = i(null),\n      de = ue[0],\n      ce = ue[1],\n      fe = be({\n    data: c,\n    xScale: f,\n    xFormat: p,\n    yScale: h,\n    yFormat: y,\n    width: te,\n    height: oe,\n    colors: m,\n    curve: b,\n    areaBaselineValue: q,\n    pointColor: w,\n    pointBorderColor: k\n  }),\n      pe = fe.lineGenerator,\n      he = fe.areaGenerator,\n      ye = fe.series,\n      ge = fe.xScale,\n      me = fe.yScale,\n      ve = fe.points,\n      xe = _({\n    points: ve,\n    width: te,\n    height: oe,\n    debug: I\n  }),\n      Re = xe.delaunay,\n      qe = xe.voronoi;\n\n  l(function () {\n    U && (U.current = Z.current), Z.current.width = ae * d, Z.current.height = se * d;\n    var e = Z.current.getContext(\"2d\");\n    e.scale(d, d), e.fillStyle = le.background, e.fillRect(0, 0, ae, se), e.translate(ne.left, ne.top), g.forEach(function (r) {\n      if (\"function\" == typeof r && r({\n        ctx: e,\n        innerWidth: te,\n        innerHeight: oe,\n        series: ye,\n        points: ve,\n        xScale: ge,\n        yScale: me,\n        lineWidth: v,\n        lineGenerator: pe,\n        areaGenerator: he,\n        currentPoint: de,\n        setCurrentPoint: ce\n      }), \"grid\" === r && le.grid.line.strokeWidth > 0 && (e.lineWidth = le.grid.line.strokeWidth, e.strokeStyle = le.grid.line.stroke, W && P(e, {\n        width: te,\n        height: oe,\n        scale: ge,\n        axis: \"x\",\n        values: G\n      }), L && P(e, {\n        width: te,\n        height: oe,\n        scale: me,\n        axis: \"y\",\n        values: F\n      })), \"axes\" === r && j(e, {\n        xScale: ge,\n        yScale: me,\n        width: te,\n        height: oe,\n        top: V,\n        right: Y,\n        bottom: D,\n        left: X,\n        theme: le\n      }), \"areas\" === r && !0 === x && (e.save(), e.globalAlpha = O, he.context(e), ye.forEach(function (r) {\n        e.fillStyle = r.color, e.beginPath(), he(r.data.map(function (e) {\n          return e.position;\n        })), e.fill();\n      }), e.restore()), \"lines\" === r && (pe.context(e), ye.forEach(function (r) {\n        e.strokeStyle = r.color, e.lineWidth = v, e.beginPath(), pe(r.data.map(function (e) {\n          return e.position;\n        })), e.stroke();\n      })), \"points\" === r && !0 === S && C > 0 && ve.forEach(function (r) {\n        e.fillStyle = r.color, e.beginPath(), e.arc(r.x, r.y, C / 2, 0, 2 * Math.PI), e.fill(), B > 0 && (e.strokeStyle = r.borderColor, e.lineWidth = B, e.stroke());\n      }), \"mesh\" === r && !0 === I && (ee(e, qe), de && re(e, qe, de.index)), \"legends\" === r) {\n        var i = ye.map(function (e) {\n          return {\n            id: e.id,\n            label: e.id,\n            color: e.color\n          };\n        }).reverse();\n        A.forEach(function (r) {\n          E(e, ie({}, r, {\n            data: r.data || i,\n            containerWidth: te,\n            containerHeight: oe,\n            theme: le\n          }));\n        });\n      }\n    });\n  }, [Z, ae, se, g, le, pe, ye, ge, me, W, G, L, F, V, Y, D, X, A, ve, S, C, de]);\n  var Oe = n(function (e) {\n    var r = T(Z.current, e),\n        i = r[0],\n        n = r[1];\n    if (!M(ne.left, ne.top, te, oe, i, n)) return null;\n    var t = Re.find(i - ne.left, n - ne.top);\n    return ve[t];\n  }, [Z, ne, te, oe, Re]),\n      Se = z(),\n      Ce = Se.showTooltipFromEvent,\n      Te = Se.hideTooltip,\n      Me = n(function (e) {\n    var r = Oe(e);\n    ce(r), r ? Ce(t(Q, {\n      point: r\n    }), e) : Te();\n  }, [Oe, ce, Ce, Te, Q]),\n      we = n(function (e) {\n    Te(), ce(null), de && J && J(de, e);\n  }, [Te, ce, J]),\n      Be = n(function (e) {\n    if (K) {\n      var r = Oe(e);\n      r && K(r, e);\n    }\n  }, [Oe, K]);\n  return N(\"canvas\", {\n    ref: Z,\n    width: ae * d,\n    height: se * d,\n    style: {\n      width: ae,\n      height: se,\n      cursor: H ? \"auto\" : \"normal\"\n    },\n    onMouseEnter: H ? Me : void 0,\n    onMouseMove: H ? Me : void 0,\n    onMouseLeave: H ? we : void 0,\n    onClick: H ? Be : void 0\n  });\n};\n\nje.propTypes = ue, je.defaultProps = fe;\nvar Fe = x(je),\n    Ve = a(function (e, r) {\n  return N(Fe, ie({}, e, {\n    canvasRef: r\n  }));\n}),\n    Ee = a(function (e, r) {\n  return N(C, {\n    children: function (i) {\n      var n = i.width,\n          t = i.height;\n      return N(Ve, ie({\n        width: n,\n        height: t\n      }, e, {\n        ref: r\n      }));\n    }\n  });\n});\nexport { Le as Line, Ve as LineCanvas, fe as LineCanvasDefaultProps, ue as LineCanvasPropTypes, ce as LineDefaultProps, le as LinePropTypes, Pe as ResponsiveLine, Ee as ResponsiveLineCanvas, he as useAreaGenerator, be as useLine, pe as useLineGenerator, ye as useSlices };","map":{"version":3,"mappings":"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","names":["LinePointTooltip","point","_jsx","BasicTooltip","id","_jsxs","data","xFormatted","yFormatted","enableChip","color","serieColor","propTypes","PropTypes","object","isRequired","memo","SliceTooltip","slice","axis","theme","useTheme","otherAxis","TableTooltip","rows","points","map","Chip","style","tooltip","chip","serieId","tableCellValue","oneOf","commonPropTypes","arrayOf","shape","oneOfType","string","number","x","instanceOf","Date","y","xScale","xFormat","func","yScale","yFormat","layers","curve","lineCurvePropType","axisTop","axisPropType","axisRight","axisBottom","axisLeft","enableGridX","bool","enableGridY","gridXValues","gridYValues","enablePoints","pointSymbol","pointSize","pointColor","any","pointBorderWidth","pointBorderColor","enablePointLabel","pointLabel","markers","value","colors","ordinalColorsPropType","enableArea","areaOpacity","areaBlendMode","blendModePropType","areaBaselineValue","lineWidth","legends","LegendPropShape","isInteractive","debugMesh","enableSlices","debugSlices","sliceTooltip","enableCrosshair","crosshairType","LinePropTypes","role","useMesh","motionPropTypes","defsPropTypes","LineCanvasPropTypes","pixelRatio","commonDefaultProps","type","min","max","from","scheme","PointTooltip","LineDefaultProps","animate","motionConfig","defs","fill","LineCanvasDefaultProps","window","devicePixelRatio","useLineGenerator","useMemo","line","defined","d","curveFromProp","useAreaGenerator","area","y1","y0","useSlices","width","height","Map","forEach","has","get","push","set","Array","entries","sort","a","b","i","slices","x0","slicePoints","prevSlice","nextSlice","reverse","sliceHeight","useLine","xScaleSpec","yScaleSpec","enableSlicesTooltip","formatX","useValueFormatter","formatY","getColor","useOrdinalColorScale","getPointColor","useInheritedColor","getPointBorderColor","useState","hiddenIds","setHiddenIds","computeXYScalesForSeries","filter","item","indexOf","rawSeries","series","dataWithColor","label","datum","find","serie","Boolean","legendData","hidden","toggleSerie","useCallback","state","reduce","acc","position","index","length","borderColor","usePoints","lineGenerator","areaGenerator","AreaPath","path","useMotionConfig","springConfig","config","animatedPath","useAnimatedPath","animatedProps","useSpring","immediate","animated","fillOpacity","strokeWidth","mixBlendMode","Areas","computedLines","lines","LinesItem","thickness","stroke","Lines","SlicesItem","debug","isCurrent","setCurrent","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseEnter","createElement","event","handleMouseMove","handleMouseLeave","strokeOpacity","onMouseEnter","onMouseMove","onMouseLeave","Slices","current","Points","symbol","size","borderWidth","enableLabel","labelYOffset","getLabel","getLabelGenerator","mappedPoints","DotsItem","Mesh","margin","onClick","showTooltipAt","left","top","handleClick","BaseMesh","nodes","Line","props","partialMargin","pointLabelYOffset","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","currentPoint","setCurrentPoint","currentSlice","setCurrentSlice","layerById","grid","Grid","xValues","yValues","CartesianMarkers","axes","Axes","right","bottom","areas","crosshair","mesh","legend","BoxLegendSvg","containerWidth","containerHeight","undefined","boundDefs","bindDefs","Crosshair","SvgWrapper","layer","Fragment","defaultProps","withContainer","ResponsiveLine","ResponsiveWrapper","LineCanvas","canvasRef","canvasEl","useRef","$","useVoronoiMesh","delaunay","voronoi","useEffect","ctx","getContext","scale","fillStyle","background","fillRect","translate","strokeStyle","renderGridLinesToCanvas","values","renderAxesToCanvas","save","globalAlpha","context","beginPath","restore","arc","Math","PI","renderVoronoiToCanvas","renderVoronoiCellToCanvas","renderLegendToCanvas","getPointFromMouseEvent","getRelativeCursor","isCursorInRect","pointIndex","handleMouseHover","ref","cursor","LineCanvasWithContainer","forwardRef"],"sources":["/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/line/src/PointTooltip.js","/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/line/src/SliceTooltip.js","/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/line/src/props.js","/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/line/src/hooks.js","/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/line/src/Areas.js","/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/line/src/LinesItem.js","/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/line/src/Lines.js","/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/line/src/SlicesItem.js","/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/line/src/Slices.js","/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/line/src/Points.js","/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/line/src/Mesh.js","/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/line/src/Line.js","/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/line/src/ResponsiveLine.js","/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/line/src/LineCanvas.js","/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/line/src/ResponsiveLineCanvas.js"],"sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst LinePointTooltip = ({ point }) => {\n    return (\n        <BasicTooltip\n            id={\n                <span>\n                    x: <strong>{point.data.xFormatted}</strong>, y:{' '}\n                    <strong>{point.data.yFormatted}</strong>\n                </span>\n            }\n            enableChip={true}\n            color={point.serieColor}\n        />\n    )\n}\n\nLinePointTooltip.propTypes = {\n    point: PropTypes.object.isRequired,\n}\n\nexport default memo(LinePointTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@nivo/core'\nimport { Chip, TableTooltip } from '@nivo/tooltip'\n\nconst SliceTooltip = ({ slice, axis }) => {\n    const theme = useTheme()\n    const otherAxis = axis === 'x' ? 'y' : 'x'\n\n    return (\n        <TableTooltip\n            rows={slice.points.map(point => [\n                <Chip key=\"chip\" color={point.serieColor} style={theme.tooltip.chip} />,\n                point.serieId,\n                <span key=\"value\" style={theme.tooltip.tableCellValue}>\n                    {point.data[`${otherAxis}Formatted`]}\n                </span>,\n            ])}\n        />\n    )\n}\n\nSliceTooltip.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n}\n\nexport default memo(SliceTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { lineCurvePropType, blendModePropType, motionPropTypes, defsPropTypes } from '@nivo/core'\nimport { ordinalColorsPropType } from '@nivo/colors'\nimport { axisPropType } from '@nivo/axes'\nimport { LegendPropShape } from '@nivo/legends'\nimport PointTooltip from './PointTooltip'\nimport SliceTooltip from './SliceTooltip'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                    y: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    xScale: PropTypes.object.isRequired,\n    xFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    yScale: PropTypes.object.isRequired,\n    yFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf([\n                'grid',\n                'markers',\n                'axes',\n                'areas',\n                'crosshair',\n                'lines',\n                'slices',\n                'points',\n                'mesh',\n                'legends',\n            ]),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    curve: lineCurvePropType.isRequired,\n\n    axisTop: axisPropType,\n    axisRight: axisPropType,\n    axisBottom: axisPropType,\n    axisLeft: axisPropType,\n\n    enableGridX: PropTypes.bool.isRequired,\n    enableGridY: PropTypes.bool.isRequired,\n    gridXValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n    gridYValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n\n    enablePoints: PropTypes.bool.isRequired,\n    pointSymbol: PropTypes.func,\n    pointSize: PropTypes.number.isRequired,\n    pointColor: PropTypes.any.isRequired,\n    pointBorderWidth: PropTypes.number.isRequired,\n    pointBorderColor: PropTypes.any.isRequired,\n    enablePointLabel: PropTypes.bool.isRequired,\n    pointLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n\n    markers: PropTypes.arrayOf(\n        PropTypes.shape({\n            axis: PropTypes.oneOf(['x', 'y']).isRequired,\n            value: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            style: PropTypes.object,\n        })\n    ),\n\n    colors: ordinalColorsPropType.isRequired,\n\n    enableArea: PropTypes.bool.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    areaBaselineValue: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.instanceOf(Date),\n    ]).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    debugMesh: PropTypes.bool.isRequired,\n\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableSlices: PropTypes.oneOf(['x', 'y', false]).isRequired,\n    debugSlices: PropTypes.bool.isRequired,\n    sliceTooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableCrosshair: PropTypes.bool.isRequired,\n    crosshairType: PropTypes.string.isRequired,\n}\n\nexport const LinePropTypes = {\n    ...commonPropTypes,\n    enablePointLabel: PropTypes.bool.isRequired,\n    role: PropTypes.string.isRequired,\n    useMesh: PropTypes.bool.isRequired,\n    ...motionPropTypes,\n    ...defsPropTypes,\n}\n\nexport const LineCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    curve: 'linear',\n\n    xScale: {\n        type: 'point',\n    },\n    yScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    },\n\n    layers: [\n        'grid',\n        'markers',\n        'axes',\n        'areas',\n        'crosshair',\n        'lines',\n        'points',\n        'slices',\n        'mesh',\n        'legends',\n    ],\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: true,\n    enableGridY: true,\n\n    enablePoints: true,\n    pointSize: 6,\n    pointColor: { from: 'color' },\n    pointBorderWidth: 0,\n    pointBorderColor: { theme: 'background' },\n    enablePointLabel: false,\n    pointLabel: 'yFormatted',\n\n    colors: { scheme: 'nivo' },\n    enableArea: false,\n    areaBaselineValue: 0,\n    areaOpacity: 0.2,\n    areaBlendMode: 'normal',\n    lineWidth: 2,\n\n    legends: [],\n\n    isInteractive: true,\n    tooltip: PointTooltip,\n    enableSlices: false,\n    debugSlices: false,\n    sliceTooltip: SliceTooltip,\n    debugMesh: false,\n    enableCrosshair: true,\n    crosshairType: 'bottom-left',\n}\n\nexport const LineDefaultProps = {\n    ...commonDefaultProps,\n    enablePointLabel: false,\n    useMesh: false,\n    animate: true,\n    motionConfig: 'gentle',\n    defs: [],\n    fill: [],\n    role: 'img',\n}\n\nexport const LineCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useCallback, useMemo, useState } from 'react'\nimport { area, line } from 'd3-shape'\nimport { curveFromProp, useTheme, useValueFormatter } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { computeXYScalesForSeries } from '@nivo/scales'\nimport { LineDefaultProps } from './props'\n\nexport const useLineGenerator = ({ curve }) => {\n    return useMemo(\n        () =>\n            line()\n                .defined(d => d.x !== null && d.y !== null)\n                .x(d => d.x)\n                .y(d => d.y)\n                .curve(curveFromProp(curve)),\n        [curve]\n    )\n}\n\nexport const useAreaGenerator = ({ curve, yScale, areaBaselineValue }) => {\n    return useMemo(() => {\n        return area()\n            .defined(d => d.x !== null && d.y !== null)\n            .x(d => d.x)\n            .y1(d => d.y)\n            .curve(curveFromProp(curve))\n            .y0(yScale(areaBaselineValue))\n    }, [curve, yScale, areaBaselineValue])\n}\n\nconst usePoints = ({ series, getPointColor, getPointBorderColor, formatX, formatY }) => {\n    return useMemo(() => {\n        return series.reduce((acc, serie) => {\n            return [\n                ...acc,\n                ...serie.data\n                    .filter(datum => datum.position.x !== null && datum.position.y !== null)\n                    .map((datum, i) => {\n                        const point = {\n                            id: `${serie.id}.${i}`,\n                            index: acc.length + i,\n                            serieId: serie.id,\n                            serieColor: serie.color,\n                            x: datum.position.x,\n                            y: datum.position.y,\n                        }\n                        point.color = getPointColor(serie)\n                        point.borderColor = getPointBorderColor(point)\n                        point.data = {\n                            ...datum.data,\n                            xFormatted: formatX(datum.data.x),\n                            yFormatted: formatY(datum.data.y),\n                        }\n\n                        return point\n                    }),\n            ]\n        }, [])\n    }, [series, getPointColor, getPointBorderColor, formatX, formatY])\n}\n\nexport const useSlices = ({ enableSlices, points, width, height }) => {\n    return useMemo(() => {\n        if (enableSlices === false) return []\n\n        if (enableSlices === 'x') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.x)) map.set(point.x, [point])\n                else map.get(point.x).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([x, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let x0\n                    if (!prevSlice) x0 = x\n                    else x0 = x - (x - prevSlice[0]) / 2\n\n                    let sliceWidth\n                    if (!nextSlice) sliceWidth = width - x0\n                    else sliceWidth = x - x0 + (nextSlice[0] - x) / 2\n\n                    return {\n                        id: x,\n                        x0,\n                        x,\n                        y0: 0,\n                        y: 0,\n                        width: sliceWidth,\n                        height,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        } else if (enableSlices === 'y') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.y)) map.set(point.y, [point])\n                else map.get(point.y).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([y, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let y0\n                    if (!prevSlice) y0 = y\n                    else y0 = y - (y - prevSlice[0]) / 2\n\n                    let sliceHeight\n                    if (!nextSlice) sliceHeight = height - y0\n                    else sliceHeight = y - y0 + (nextSlice[0] - y) / 2\n\n                    return {\n                        id: y,\n                        x0: 0,\n                        x: 0,\n                        y0,\n                        y,\n                        width,\n                        height: sliceHeight,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        }\n    }, [enableSlices, points])\n}\n\nexport const useLine = ({\n    data,\n    xScale: xScaleSpec = LineDefaultProps.xScale,\n    xFormat,\n    yScale: yScaleSpec = LineDefaultProps.yScale,\n    yFormat,\n    width,\n    height,\n    colors = LineDefaultProps.colors,\n    curve = LineDefaultProps.curve,\n    areaBaselineValue = LineDefaultProps.areaBaselineValue,\n    pointColor = LineDefaultProps.pointColor,\n    pointBorderColor = LineDefaultProps.pointBorderColor,\n    enableSlices = LineDefaultProps.enableSlicesTooltip,\n}) => {\n    const formatX = useValueFormatter(xFormat)\n    const formatY = useValueFormatter(yFormat)\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n    const [hiddenIds, setHiddenIds] = useState([])\n\n    const {\n        xScale,\n        yScale,\n        series: rawSeries,\n    } = useMemo(\n        () =>\n            computeXYScalesForSeries(\n                data.filter(item => hiddenIds.indexOf(item.id) === -1),\n                xScaleSpec,\n                yScaleSpec,\n                width,\n                height\n            ),\n        [data, hiddenIds, xScaleSpec, yScaleSpec, width, height]\n    )\n\n    const { legendData, series } = useMemo(() => {\n        const dataWithColor = data.map(line => ({\n            id: line.id,\n            label: line.id,\n            color: getColor(line),\n        }))\n        const series = dataWithColor\n            .map(datum => ({\n                ...rawSeries.find(serie => serie.id === datum.id),\n                color: datum.color,\n            }))\n            .filter(item => Boolean(item.id))\n        const legendData = dataWithColor\n            .map(item => ({ ...item, hidden: !series.find(serie => serie.id === item.id) }))\n            .reverse()\n\n        return { legendData, series }\n    }, [data, rawSeries, getColor])\n\n    const toggleSerie = useCallback(id => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const points = usePoints({\n        series,\n        getPointColor,\n        getPointBorderColor,\n        formatX,\n        formatY,\n    })\n\n    const slices = useSlices({\n        enableSlices,\n        points,\n        width,\n        height,\n    })\n\n    const lineGenerator = useLineGenerator({ curve })\n    const areaGenerator = useAreaGenerator({\n        curve,\n        yScale,\n        areaBaselineValue,\n    })\n\n    return {\n        legendData,\n        toggleSerie,\n        lineGenerator,\n        areaGenerator,\n        getColor,\n        series,\n        xScale,\n        yScale,\n        slices,\n        points,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig, blendModePropType } from '@nivo/core'\n\nconst AreaPath = ({ areaBlendMode, areaOpacity, color, fill, path }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedPath = useAnimatedPath(path)\n    const animatedProps = useSpring({\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={fill ? fill : animatedProps.color}\n            fillOpacity={areaOpacity}\n            strokeWidth={0}\n            style={{\n                mixBlendMode: areaBlendMode,\n            }}\n        />\n    )\n}\n\nAreaPath.propTypes = {\n    areaBlendMode: blendModePropType.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    color: PropTypes.string,\n    fill: PropTypes.string,\n    path: PropTypes.string.isRequired,\n}\n\nconst Areas = ({ areaGenerator, areaOpacity, areaBlendMode, lines }) => {\n    const computedLines = lines.slice(0).reverse()\n\n    return (\n        <g>\n            {computedLines.map(line => (\n                <AreaPath\n                    key={line.id}\n                    path={areaGenerator(line.data.map(d => d.position))}\n                    {...{ areaOpacity, areaBlendMode, ...line }}\n                />\n            ))}\n        </g>\n    )\n}\n\nAreas.propTypes = {\n    areaGenerator: PropTypes.func.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    lines: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default memo(Areas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath } from '@nivo/core'\n\nconst LinesItem = ({ lineGenerator, points, color, thickness }) => {\n    const path = useMemo(() => lineGenerator(points), [lineGenerator, points])\n    const animatedPath = useAnimatedPath(path)\n\n    return <animated.path d={animatedPath} fill=\"none\" strokeWidth={thickness} stroke={color} />\n}\n\nLinesItem.propTypes = {\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            x: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            y: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        })\n    ),\n    lineGenerator: PropTypes.func.isRequired,\n    color: PropTypes.string.isRequired,\n    thickness: PropTypes.number.isRequired,\n}\n\nexport default memo(LinesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport LinesItem from './LinesItem'\n\nconst Lines = ({ lines, lineGenerator, lineWidth }) => {\n    return lines\n        .slice(0)\n        .reverse()\n        .map(({ id, data, color }) => (\n            <LinesItem\n                key={id}\n                id={id}\n                points={data.map(d => d.position)}\n                lineGenerator={lineGenerator}\n                color={color}\n                thickness={lineWidth}\n            />\n        ))\n}\n\nLines.propTypes = {\n    lines: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    data: PropTypes.shape({\n                        x: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                        y: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                    }).isRequired,\n                    position: PropTypes.shape({\n                        x: PropTypes.number,\n                        y: PropTypes.number,\n                    }).isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n}\n\nexport default memo(Lines)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\n\nconst SlicesItem = ({ slice, axis, debug, tooltip, isCurrent, setCurrent }) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n            setCurrent(slice)\n        },\n        [showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n        },\n        [showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        hideTooltip()\n        setCurrent(null)\n    }, [hideTooltip])\n\n    return (\n        <rect\n            x={slice.x0}\n            y={slice.y0}\n            width={slice.width}\n            height={slice.height}\n            stroke=\"red\"\n            strokeWidth={debug ? 1 : 0}\n            strokeOpacity={0.75}\n            fill=\"red\"\n            fillOpacity={isCurrent && debug ? 0.35 : 0}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n\nSlicesItem.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    isCurrent: PropTypes.bool.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n}\n\nexport default memo(SlicesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport SlicesItem from './SlicesItem'\n\nconst Slices = ({ slices, axis, debug, height, tooltip, current, setCurrent }) => {\n    return slices.map(slice => (\n        <SlicesItem\n            key={slice.id}\n            slice={slice}\n            axis={axis}\n            debug={debug}\n            height={height}\n            tooltip={tooltip}\n            setCurrent={setCurrent}\n            isCurrent={current !== null && current.id === slice.id}\n        />\n    ))\n}\n\nSlices.propTypes = {\n    slices: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            points: PropTypes.arrayOf(PropTypes.object).isRequired,\n        })\n    ).isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    current: PropTypes.object,\n    setCurrent: PropTypes.func.isRequired,\n}\n\nexport default memo(Slices)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { getLabelGenerator, DotsItem, useTheme } from '@nivo/core'\n\nconst Points = ({ points, symbol, size, borderWidth, enableLabel, label, labelYOffset }) => {\n    const theme = useTheme()\n    const getLabel = getLabelGenerator(label)\n\n    /**\n     * We reverse the `points` array so that points from the lower lines in stacked lines\n     * graph are drawn on top. See https://github.com/plouc/nivo/issues/1051.\n     */\n    const mappedPoints = points.reverse().map(point => {\n        const mappedPoint = {\n            id: point.id,\n            x: point.x,\n            y: point.y,\n            datum: point.data,\n            fill: point.color,\n            stroke: point.borderColor,\n            label: enableLabel ? getLabel(point.data) : null,\n        }\n\n        return mappedPoint\n    })\n\n    return (\n        <g>\n            {mappedPoints.map(point => (\n                <DotsItem\n                    key={point.id}\n                    x={point.x}\n                    y={point.y}\n                    datum={point.datum}\n                    symbol={symbol}\n                    size={size}\n                    color={point.fill}\n                    borderWidth={borderWidth}\n                    borderColor={point.stroke}\n                    label={point.label}\n                    labelYOffset={labelYOffset}\n                    theme={theme}\n                />\n            ))}\n        </g>\n    )\n}\n\nPoints.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object),\n    symbol: PropTypes.func,\n    size: PropTypes.number.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelYOffset: PropTypes.number,\n}\n\nexport default memo(Points)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\nimport { Mesh as BaseMesh } from '@nivo/voronoi'\n\nconst Mesh = ({\n    points,\n    width,\n    height,\n    margin,\n    setCurrent,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    debug,\n}) => {\n    const { showTooltipAt, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseEnter && onMouseEnter(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseEnter, margin]\n    )\n\n    const handleMouseMove = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseMove && onMouseMove(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (point, event) => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(point, event)\n        },\n        [hideTooltip, setCurrent, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        (point, event) => {\n            onClick && onClick(point, event)\n        },\n        [onClick]\n    )\n\n    return (\n        <BaseMesh\n            nodes={points}\n            width={width}\n            height={height}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n            debug={debug}\n        />\n    )\n}\n\nMesh.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    margin: PropTypes.object.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    debug: PropTypes.bool.isRequired,\n}\n\nexport default memo(Mesh)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { Fragment, useState } from 'react'\nimport {\n    bindDefs,\n    withContainer,\n    useDimensions,\n    useTheme,\n    SvgWrapper,\n    CartesianMarkers,\n} from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { Crosshair } from '@nivo/tooltip'\nimport { useLine } from './hooks'\nimport { LinePropTypes, LineDefaultProps } from './props'\nimport Areas from './Areas'\nimport Lines from './Lines'\nimport Slices from './Slices'\nimport Points from './Points'\nimport Mesh from './Mesh'\n\nconst Line = props => {\n    const {\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        layers,\n        curve,\n        areaBaselineValue,\n\n        colors,\n\n        margin: partialMargin,\n        width,\n        height,\n\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        enableGridX,\n        enableGridY,\n        gridXValues,\n        gridYValues,\n\n        lineWidth,\n        enableArea,\n        areaOpacity,\n        areaBlendMode,\n\n        enablePoints,\n        pointSymbol,\n        pointSize,\n        pointColor,\n        pointBorderWidth,\n        pointBorderColor,\n        enablePointLabel,\n        pointLabel,\n        pointLabelYOffset,\n\n        defs,\n        fill,\n\n        markers,\n\n        legends,\n\n        isInteractive,\n\n        useMesh,\n        debugMesh,\n\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n\n        tooltip,\n\n        enableSlices,\n        debugSlices,\n        sliceTooltip,\n\n        enableCrosshair,\n        crosshairType,\n\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        legendData,\n        toggleSerie,\n        lineGenerator,\n        areaGenerator,\n        series,\n        xScale,\n        yScale,\n        slices,\n        points,\n    } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n        enableSlices,\n    })\n\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n\n    const [currentPoint, setCurrentPoint] = useState(null)\n    const [currentSlice, setCurrentSlice] = useState(null)\n\n    const layerById = {\n        grid: (\n            <Grid\n                key=\"grid\"\n                theme={theme}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        ),\n        markers: (\n            <CartesianMarkers\n                key=\"markers\"\n                markers={markers}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale}\n                yScale={yScale}\n                theme={theme}\n            />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                theme={theme}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        ),\n        areas: null,\n        lines: (\n            <Lines key=\"lines\" lines={series} lineGenerator={lineGenerator} lineWidth={lineWidth} />\n        ),\n        slices: null,\n        points: null,\n        crosshair: null,\n        mesh: null,\n        legends: legends.map((legend, i) => (\n            <BoxLegendSvg\n                key={`legend.${i}`}\n                {...legend}\n                containerWidth={innerWidth}\n                containerHeight={innerHeight}\n                data={legend.data || legendData}\n                theme={theme}\n                toggleSerie={legend.toggleSerie ? toggleSerie : undefined}\n            />\n        )),\n    }\n\n    const boundDefs = bindDefs(defs, series, fill)\n\n    if (enableArea) {\n        layerById.areas = (\n            <Areas\n                key=\"areas\"\n                areaGenerator={areaGenerator}\n                areaOpacity={areaOpacity}\n                areaBlendMode={areaBlendMode}\n                lines={series}\n            />\n        )\n    }\n\n    if (isInteractive && enableSlices !== false) {\n        layerById.slices = (\n            <Slices\n                key=\"slices\"\n                slices={slices}\n                axis={enableSlices}\n                debug={debugSlices}\n                height={innerHeight}\n                tooltip={sliceTooltip}\n                current={currentSlice}\n                setCurrent={setCurrentSlice}\n            />\n        )\n    }\n\n    if (enablePoints) {\n        layerById.points = (\n            <Points\n                key=\"points\"\n                points={points}\n                symbol={pointSymbol}\n                size={pointSize}\n                color={getPointColor}\n                borderWidth={pointBorderWidth}\n                borderColor={getPointBorderColor}\n                enableLabel={enablePointLabel}\n                label={pointLabel}\n                labelYOffset={pointLabelYOffset}\n            />\n        )\n    }\n\n    if (isInteractive && enableCrosshair) {\n        if (currentPoint !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentPoint.x}\n                    y={currentPoint.y}\n                    type={crosshairType}\n                />\n            )\n        }\n        if (currentSlice !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentSlice.x}\n                    y={currentSlice.y}\n                    type={enableSlices}\n                />\n            )\n        }\n    }\n\n    if (isInteractive && useMesh && enableSlices === false) {\n        layerById.mesh = (\n            <Mesh\n                key=\"mesh\"\n                points={points}\n                width={innerWidth}\n                height={innerHeight}\n                margin={margin}\n                current={currentPoint}\n                setCurrent={setCurrentPoint}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                tooltip={tooltip}\n                debug={debugMesh}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper\n            defs={boundDefs}\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                series,\n                                slices,\n                                points,\n                                xScale,\n                                yScale,\n                                lineGenerator,\n                                areaGenerator,\n                                currentPoint,\n                                setCurrentPoint,\n                                currentSlice,\n                                setCurrentSlice,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nLine.propTypes = LinePropTypes\nLine.defaultProps = LineDefaultProps\n\nexport default withContainer(Line)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Line from './Line'\n\nconst ResponsiveLine = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Line width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveLine\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, useRef, useEffect, useState, useCallback, forwardRef } from 'react'\nimport {\n    withContainer,\n    useDimensions,\n    useTheme,\n    getRelativeCursor,\n    isCursorInRect,\n} from '@nivo/core'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useVoronoiMesh, renderVoronoiToCanvas, renderVoronoiCellToCanvas } from '@nivo/voronoi'\nimport { LineCanvasPropTypes, LineCanvasDefaultProps } from './props'\nimport { useLine } from './hooks'\n\nconst LineCanvas = ({\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio,\n\n    data,\n    xScale: xScaleSpec,\n    xFormat,\n    yScale: yScaleSpec,\n    yFormat,\n    curve,\n\n    layers,\n\n    colors,\n    lineWidth,\n\n    enableArea,\n    areaBaselineValue,\n    areaOpacity,\n\n    enablePoints,\n    pointSize,\n    pointColor,\n    pointBorderWidth,\n    pointBorderColor,\n\n    enableGridX,\n    gridXValues,\n    enableGridY,\n    gridYValues,\n    axisTop,\n    axisRight,\n    axisBottom,\n    axisLeft,\n\n    legends,\n\n    isInteractive,\n    debugMesh,\n    //onMouseEnter,\n    //onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n\n    canvasRef,\n}) => {\n    const canvasEl = useRef(null)\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n    const theme = useTheme()\n    const [currentPoint, setCurrentPoint] = useState(null)\n\n    const { lineGenerator, areaGenerator, series, xScale, yScale, points } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n    })\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points,\n        width: innerWidth,\n        height: innerHeight,\n        debug: debugMesh,\n    })\n\n    useEffect(() => {\n        if (canvasRef) {\n            canvasRef.current = canvasEl.current\n        }\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (typeof layer === 'function') {\n                layer({\n                    ctx,\n                    innerWidth,\n                    innerHeight,\n                    series,\n                    points,\n                    xScale,\n                    yScale,\n                    lineWidth,\n                    lineGenerator,\n                    areaGenerator,\n                    currentPoint,\n                    setCurrentPoint,\n                })\n            }\n\n            if (layer === 'grid' && theme.grid.line.strokeWidth > 0) {\n                ctx.lineWidth = theme.grid.line.strokeWidth\n                ctx.strokeStyle = theme.grid.line.stroke\n\n                enableGridX &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: xScale,\n                        axis: 'x',\n                        values: gridXValues,\n                    })\n\n                enableGridY &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: yScale,\n                        axis: 'y',\n                        values: gridYValues,\n                    })\n            }\n\n            if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale,\n                    yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            }\n\n            if (layer === 'areas' && enableArea === true) {\n                ctx.save()\n                ctx.globalAlpha = areaOpacity\n\n                areaGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.fillStyle = serie.color\n                    ctx.beginPath()\n                    areaGenerator(serie.data.map(d => d.position))\n                    ctx.fill()\n                })\n\n                ctx.restore()\n            }\n\n            if (layer === 'lines') {\n                lineGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.strokeStyle = serie.color\n                    ctx.lineWidth = lineWidth\n                    ctx.beginPath()\n                    lineGenerator(serie.data.map(d => d.position))\n                    ctx.stroke()\n                })\n            }\n\n            if (layer === 'points' && enablePoints === true && pointSize > 0) {\n                points.forEach(point => {\n                    ctx.fillStyle = point.color\n                    ctx.beginPath()\n                    ctx.arc(point.x, point.y, pointSize / 2, 0, 2 * Math.PI)\n                    ctx.fill()\n\n                    if (pointBorderWidth > 0) {\n                        ctx.strokeStyle = point.borderColor\n                        ctx.lineWidth = pointBorderWidth\n                        ctx.stroke()\n                    }\n                })\n            }\n\n            if (layer === 'mesh' && debugMesh === true) {\n                renderVoronoiToCanvas(ctx, voronoi)\n                if (currentPoint) {\n                    renderVoronoiCellToCanvas(ctx, voronoi, currentPoint.index)\n                }\n            }\n\n            if (layer === 'legends') {\n                const legendData = series\n                    .map(serie => ({\n                        id: serie.id,\n                        label: serie.id,\n                        color: serie.color,\n                    }))\n                    .reverse()\n\n                legends.forEach(legend => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data: legend.data || legendData,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        layers,\n        theme,\n        lineGenerator,\n        series,\n        xScale,\n        yScale,\n        enableGridX,\n        gridXValues,\n        enableGridY,\n        gridYValues,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        legends,\n        points,\n        enablePoints,\n        pointSize,\n        currentPoint,\n    ])\n\n    const getPointFromMouseEvent = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            if (!isCursorInRect(margin.left, margin.top, innerWidth, innerHeight, x, y)) return null\n\n            const pointIndex = delaunay.find(x - margin.left, y - margin.top)\n            return points[pointIndex]\n        },\n        [canvasEl, margin, innerWidth, innerHeight, delaunay]\n    )\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            const point = getPointFromMouseEvent(event)\n            setCurrentPoint(point)\n\n            if (point) {\n                showTooltipFromEvent(createElement(tooltip, { point }), event)\n            } else {\n                hideTooltip()\n            }\n        },\n        [getPointFromMouseEvent, setCurrentPoint, showTooltipFromEvent, hideTooltip, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrentPoint(null)\n            currentPoint && onMouseLeave && onMouseLeave(currentPoint, event)\n        },\n        [hideTooltip, setCurrentPoint, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            if (onClick) {\n                const point = getPointFromMouseEvent(event)\n                point && onClick(point, event)\n            }\n        },\n        [getPointFromMouseEvent, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nLineCanvas.propTypes = LineCanvasPropTypes\nLineCanvas.defaultProps = LineCanvasDefaultProps\n\nconst LineCanvasWithContainer = withContainer(LineCanvas)\n\nexport default forwardRef((props, ref) => <LineCanvasWithContainer {...props} canvasRef={ref} />)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport LineCanvas from './LineCanvas'\n\nconst ResponsiveLineCanvas = (props, ref) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <LineCanvas width={width} height={height} {...props} ref={ref} />}\n    </ResponsiveWrapper>\n)\n\nexport default forwardRef(ResponsiveLineCanvas)\n"]},"metadata":{},"sourceType":"module"}