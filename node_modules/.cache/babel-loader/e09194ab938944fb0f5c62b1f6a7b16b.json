{"ast":null,"code":"var _jsxFileName = \"/Users/jstanton/Coding/FieldDock/FieldDockMain/src/components/Mission Planner/latLongTable.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useMemo, useRef, useEffect } from \"react\";\nimport { useTable, useRowSelect } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LatLongTable = () => {\n  _s2();\n  // ------------------------------Define the structure of your table----------------------------------- //\n  const columns = useMemo(() => {\n    var _s = $RefreshSig$();\n    return [{\n      Header: () => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 23\n      }, this),\n      accessor: \"id\"\n    }, {\n      Header: \"Command\",\n      accessor: \"command\",\n      Cell: _ref => {\n        let {\n          row,\n          updateMyData\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"200px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            id: `row-${row.values.id}`,\n            value: row.values.command,\n            onChange: e => updateMyData(row.index, \"command\", e.target.value),\n            style: {\n              width: \"100%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"WAYPOINT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Maybe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"So\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this);\n      }\n    }, {\n      Header: \"P1\",\n      accessor: \"P1\",\n      Cell: _ref2 => {\n        let {\n          row,\n          updateMyData\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: row.values.P1,\n            onChange: e => updateMyData(row.index, \"P1\", e.target.value),\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this);\n      }\n    }, {\n      Header: \"P2\",\n      accessor: \"P2\",\n      Cell: _ref3 => {\n        let {\n          row,\n          updateMyData\n        } = _ref3;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: row.values.P2,\n            onChange: e => updateMyData(row.index, \"P2\", e.target.value),\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this);\n      }\n    }, {\n      Header: \"P3\",\n      accessor: \"P3\",\n      Cell: _ref4 => {\n        let {\n          row,\n          updateMyData\n        } = _ref4;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: row.values.P3,\n            onChange: e => updateMyData(row.index, \"P3\", e.target.value),\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this);\n      }\n    }, {\n      Header: \"P4\",\n      accessor: \"P4\",\n      Cell: _ref5 => {\n        let {\n          row,\n          updateMyData\n        } = _ref5;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: row.values.P4,\n            onChange: e => updateMyData(row.index, \"P4\", e.target.value),\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this);\n      }\n    }, {\n      Header: \"Latitude\",\n      accessor: \"Latitude\",\n      Cell: _ref6 => {\n        let {\n          row,\n          updateMyData\n        } = _ref6;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: row.values.Latitude,\n            onChange: e => updateMyData(row.index, \"Latitude\", e.target.value),\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this);\n      }\n    }, {\n      Header: \"Longitude\",\n      accessor: \"Longitude\",\n      Cell: _ref7 => {\n        let {\n          row,\n          updateMyData\n        } = _ref7;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: row.values.Longitude,\n            onChange: e => updateMyData(row.index, \"Longitude\", e.target.value),\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this);\n      }\n    }, {\n      Header: \"Alt\",\n      accessor: \"Alt\",\n      Cell: _ref8 => {\n        let {\n          row,\n          updateMyData\n        } = _ref8;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: row.values.Alt,\n            onChange: e => updateMyData(row.index, \"Alt\", e.target.value),\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this);\n      }\n    }, {\n      Header: \"Frame\",\n      accessor: \"Frame\",\n      Cell: _ref9 => {\n        let {\n          row,\n          updateMyData\n        } = _ref9;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: row.values.Frame,\n            onChange: e => updateMyData(row.index, \"Frame\", e.target.value),\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this);\n      }\n    }, {\n      Header: \"Grad\",\n      accessor: \"Grad\",\n      Cell: _ref10 => {\n        let {\n          row,\n          updateMyData\n        } = _ref10;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: row.values.Grad,\n            onChange: e => updateMyData(row.index, \"Grad\", e.target.value),\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this);\n      }\n    }, {\n      Header: \"Angle\",\n      accessor: \"Angle\",\n      Cell: _ref11 => {\n        let {\n          row,\n          updateMyData\n        } = _ref11;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: row.values.Angle,\n            onChange: e => updateMyData(row.index, \"Angle\", e.target.value),\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this);\n      }\n    }, {\n      Header: \"Dist\",\n      accessor: \"Dist\",\n      Cell: _ref12 => {\n        let {\n          row,\n          updateMyData\n        } = _ref12;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: row.values.Dist,\n            onChange: e => updateMyData(row.index, \"Dist\", e.target.value),\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this);\n      }\n    }, {\n      Header: \"AZ\",\n      accessor: \"AZ\",\n      Cell: _s(_ref13 => {\n        _s();\n        let {\n          row,\n          updateMyData\n        } = _ref13;\n        const inputRef = useRef(null);\n        useEffect(() => {\n          if (row.index === data.length - 1) {\n            inputRef.current.focus();\n          }\n        }, [data]);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: inputRef,\n            value: row.values.AZ,\n            onChange: e => updateMyData(row.index, \"AZ\", e.target.value),\n            style: {\n              width: \"100%\"\n            },\n            onKeyDown: e => {\n              if ((e.key === \"Enter\" || e.key === \"Tab\") && row.index === data.length - 1) {\n                e.preventDefault();\n                // Add a new row here only if this is the last row\n                setData([...data, createNewRow(data.length + 1)]);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this);\n      }, \"cBQ6FQ+sf5H+lvNONLKqtm4aeQ8=\")\n    }];\n  }, []);\n  // ------------------------------Define the structure of your table----------------------------------- //\n  //\n  //\n  //\n  //\n  // ------------------------------Create a state for your table data----------------------------------- //\n  //\n  //initializes your data state with a single row, which is empty of values except for the id field.\n  //In this line, data is initialized as an array with a single object representing the first row.\n  //The id field is set to 1, and the command field is set to an empty string. You can add more fields to this row as per your requirements.\n  const [data, setData] = useState([{\n    id: 1,\n    command: \"\",\n    p1: \"\",\n    p2: \"\",\n    p3: \"\",\n    p4: \"\",\n    latitude: \"\",\n    longitude: \"\",\n    alt: \"\",\n    frame: \"\",\n    grad: \"\",\n    angle: \"\",\n    dist: \"\",\n    az: \"\"\n  }]);\n\n  // ------------------------------Create a function to handle changes in your table-------------------- //\n  //\n  //The updateMyData function is designed to be reusable for all the columns. It takes three parameters: rowIndex, columnId, and value.\n  //The rowIndex and columnId identify the cell to be updated, and value is the new value for that cell.\n  //This is a common pattern in table components: a single function is used to update any cell, and it uses parameters to determine which cell to update.\n  const updateMyData = (rowIndex, columnId, value) => {\n    setData(old => old.map((row, index) => {\n      if (index === rowIndex) {\n        return {\n          ...old[rowIndex],\n          [columnId]: value\n        };\n      }\n      return row;\n    }));\n  };\n  // ------------------------------Create a function to handle changes in your table-------------------- //\n  //\n  //\n  //\n  //\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useRowSelect);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n          ...column.getHeaderProps(),\n          className: \"table-header\",\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      ...getTableBodyProps(),\n      children: rows.map((row, rowIndex) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...row.getRowProps(),\n          id: `row-${rowIndex}`,\n          children: row.cells.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            ...cell.getCellProps(),\n            id: `cell-${rowIndex}-${cellIndex}`,\n            children: cell.render(\"Cell\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n};\n// ------------------------------Check if the last row is complete, and if so, add a new row---------- //\n_s2(LatLongTable, \"KFWBgNIpy39FWBgegDvGE0jL8ZE=\", false, function () {\n  return [useTable];\n});\n_c = LatLongTable;\nexport default LatLongTable;\nvar _c;\n$RefreshReg$(_c, \"LatLongTable\");","map":{"version":3,"names":["React","useState","useMemo","useRef","useEffect","useTable","useRowSelect","jsxDEV","_jsxDEV","LatLongTable","_s2","columns","_s","$RefreshSig$","Header","style","width","fileName","_jsxFileName","lineNumber","columnNumber","accessor","Cell","_ref","row","updateMyData","children","id","values","value","command","onChange","e","index","target","_ref2","P1","_ref3","P2","_ref4","P3","_ref5","P4","_ref6","Latitude","_ref7","Longitude","_ref8","Alt","_ref9","Frame","_ref10","Grad","_ref11","Angle","_ref12","Dist","_ref13","inputRef","data","length","current","focus","ref","AZ","onKeyDown","key","preventDefault","setData","createNewRow","p1","p2","p3","p4","latitude","longitude","alt","frame","grad","angle","dist","az","rowIndex","columnId","old","map","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","className","render","getRowProps","cells","cell","cellIndex","getCellProps","_c","$RefreshReg$"],"sources":["/Users/jstanton/Coding/FieldDock/FieldDockMain/src/components/Mission Planner/latLongTable.jsx"],"sourcesContent":["import React, { useState, useMemo, useRef, useEffect } from \"react\";\nimport { useTable, useRowSelect } from \"react-table\";\n\nconst LatLongTable = () => {\n  // ------------------------------Define the structure of your table----------------------------------- //\n  const columns = useMemo(\n    () => [\n      {\n        Header: () => <div style={{ width: \"100%\" }}></div>,\n        accessor: \"id\",\n      },\n\n      {\n        Header: \"Command\",\n        accessor: \"command\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"200px\" }}>\n            <select\n              id={`row-${row.values.id}`}\n              value={row.values.command}\n              onChange={(e) =>\n                updateMyData(row.index, \"command\", e.target.value)\n              }\n              style={{ width: \"100%\" }}\n            >\n              <option>WAYPOINT</option>\n              <option>No</option>\n              <option>Maybe</option>\n              <option>So</option>\n            </select>\n          </div>\n        ),\n      },\n\n      {\n        Header: \"P1\",\n        accessor: \"P1\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"100%%\" }}>\n            <input\n              value={row.values.P1}\n              onChange={(e) => updateMyData(row.index, \"P1\", e.target.value)}\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        ),\n      },\n      {\n        Header: \"P2\",\n        accessor: \"P2\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"100%%\" }}>\n            <input\n              value={row.values.P2}\n              onChange={(e) => updateMyData(row.index, \"P2\", e.target.value)}\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        ),\n      },\n      {\n        Header: \"P3\",\n        accessor: \"P3\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"100%%\" }}>\n            <input\n              value={row.values.P3}\n              onChange={(e) => updateMyData(row.index, \"P3\", e.target.value)}\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        ),\n      },\n      {\n        Header: \"P4\",\n        accessor: \"P4\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"100%%\" }}>\n            <input\n              value={row.values.P4}\n              onChange={(e) => updateMyData(row.index, \"P4\", e.target.value)}\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        ),\n      },\n      {\n        Header: \"Latitude\",\n        accessor: \"Latitude\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"100%%\" }}>\n            <input\n              value={row.values.Latitude}\n              onChange={(e) =>\n                updateMyData(row.index, \"Latitude\", e.target.value)\n              }\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        ),\n      },\n      {\n        Header: \"Longitude\",\n        accessor: \"Longitude\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"100%%\" }}>\n            <input\n              value={row.values.Longitude}\n              onChange={(e) =>\n                updateMyData(row.index, \"Longitude\", e.target.value)\n              }\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        ),\n      },\n      {\n        Header: \"Alt\",\n        accessor: \"Alt\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"100%%\" }}>\n            <input\n              value={row.values.Alt}\n              onChange={(e) => updateMyData(row.index, \"Alt\", e.target.value)}\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        ),\n      },\n      {\n        Header: \"Frame\",\n        accessor: \"Frame\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"100%%\" }}>\n            <input\n              value={row.values.Frame}\n              onChange={(e) => updateMyData(row.index, \"Frame\", e.target.value)}\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        ),\n      },\n      {\n        Header: \"Grad\",\n        accessor: \"Grad\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"100%%\" }}>\n            <input\n              value={row.values.Grad}\n              onChange={(e) => updateMyData(row.index, \"Grad\", e.target.value)}\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        ),\n      },\n      {\n        Header: \"Angle\",\n        accessor: \"Angle\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"100%%\" }}>\n            <input\n              value={row.values.Angle}\n              onChange={(e) => updateMyData(row.index, \"Angle\", e.target.value)}\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        ),\n      },\n      {\n        Header: \"Dist\",\n        accessor: \"Dist\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"100%%\" }}>\n            <input\n              value={row.values.Dist}\n              onChange={(e) => updateMyData(row.index, \"Dist\", e.target.value)}\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        ),\n      },\n      {\n        Header: \"AZ\",\n        accessor: \"AZ\",\n        Cell: ({ row, updateMyData }) => {\n          const inputRef = useRef(null);\n          useEffect(() => {\n            if (row.index === data.length - 1) {\n              inputRef.current.focus();\n            }\n          }, [data]);\n\n          return (\n            <div style={{ width: \"100%\" }}>\n              <input\n                ref={inputRef}\n                value={row.values.AZ}\n                onChange={(e) => updateMyData(row.index, \"AZ\", e.target.value)}\n                style={{ width: \"100%\" }}\n                onKeyDown={(e) => {\n                  if (\n                    (e.key === \"Enter\" || e.key === \"Tab\") &&\n                    row.index === data.length - 1\n                  ) {\n                    e.preventDefault();\n                    // Add a new row here only if this is the last row\n                    setData([...data, createNewRow(data.length + 1)]);\n                  }\n                }}\n              />\n            </div>\n          );\n        },\n      },\n    ],\n    []\n  );\n  // ------------------------------Define the structure of your table----------------------------------- //\n  //\n  //\n  //\n  //\n  // ------------------------------Create a state for your table data----------------------------------- //\n  //\n  //initializes your data state with a single row, which is empty of values except for the id field.\n  //In this line, data is initialized as an array with a single object representing the first row.\n  //The id field is set to 1, and the command field is set to an empty string. You can add more fields to this row as per your requirements.\n  const [data, setData] = useState([\n    {\n      id: 1,\n      command: \"\",\n      p1: \"\",\n      p2: \"\",\n      p3: \"\",\n      p4: \"\",\n      latitude: \"\",\n      longitude: \"\",\n      alt: \"\",\n      frame: \"\",\n      grad: \"\",\n      angle: \"\",\n      dist: \"\",\n      az: \"\",\n    },\n  ]);\n\n  // ------------------------------Create a function to handle changes in your table-------------------- //\n  //\n  //The updateMyData function is designed to be reusable for all the columns. It takes three parameters: rowIndex, columnId, and value.\n  //The rowIndex and columnId identify the cell to be updated, and value is the new value for that cell.\n  //This is a common pattern in table components: a single function is used to update any cell, and it uses parameters to determine which cell to update.\n  const updateMyData = (rowIndex, columnId, value) => {\n    setData((old) =>\n      old.map((row, index) => {\n        if (index === rowIndex) {\n          return {\n            ...old[rowIndex],\n            [columnId]: value,\n          };\n        }\n        return row;\n      })\n    );\n  };\n  // ------------------------------Create a function to handle changes in your table-------------------- //\n  //\n  //\n  //\n  //\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable(\n      {\n        columns,\n        data,\n      },\n      useRowSelect\n    );\n\n  return (\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()} className=\"table-header\">\n                {column.render(\"Header\")}\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, rowIndex) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()} id={`row-${rowIndex}`}>\n              {row.cells.map((cell, cellIndex) => (\n                <td\n                  {...cell.getCellProps()}\n                  id={`cell-${rowIndex}-${cellIndex}`}\n                >\n                  {cell.render(\"Cell\")}\n                </td>\n              ))}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n// ------------------------------Check if the last row is complete, and if so, add a new row---------- //\n\nexport default LatLongTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}