{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst buffer_1 = require(\"buffer\");\nconst readable_stream_1 = require(\"readable-stream\");\nconst duplexify_1 = __importDefault(require(\"duplexify\"));\nlet socketTask;\nlet proxy;\nlet stream;\nfunction buildProxy() {\n  const _proxy = new readable_stream_1.Transform();\n  _proxy._write = (chunk, encoding, next) => {\n    socketTask.send({\n      data: chunk.buffer,\n      success() {\n        next();\n      },\n      fail(errMsg) {\n        next(new Error(errMsg));\n      }\n    });\n  };\n  _proxy._flush = done => {\n    socketTask.close({\n      success() {\n        done();\n      }\n    });\n  };\n  return _proxy;\n}\nfunction setDefaultOpts(opts) {\n  if (!opts.hostname) {\n    opts.hostname = 'localhost';\n  }\n  if (!opts.path) {\n    opts.path = '/';\n  }\n  if (!opts.wsOptions) {\n    opts.wsOptions = {};\n  }\n}\nfunction buildUrl(opts, client) {\n  const protocol = opts.protocol === 'wxs' ? 'wss' : 'ws';\n  let url = `${protocol}://${opts.hostname}${opts.path}`;\n  if (opts.port && opts.port !== 80 && opts.port !== 443) {\n    url = `${protocol}://${opts.hostname}:${opts.port}${opts.path}`;\n  }\n  if (typeof opts.transformWsUrl === 'function') {\n    url = opts.transformWsUrl(url, opts, client);\n  }\n  return url;\n}\nfunction bindEventHandler() {\n  socketTask.onOpen(() => {\n    stream.setReadable(proxy);\n    stream.setWritable(proxy);\n    stream.emit('connect');\n  });\n  socketTask.onMessage(res => {\n    let {\n      data\n    } = res;\n    if (data instanceof ArrayBuffer) data = buffer_1.Buffer.from(data);else data = buffer_1.Buffer.from(data, 'utf8');\n    proxy.push(data);\n  });\n  socketTask.onClose(() => {\n    stream.emit('close');\n    stream.end();\n    stream.destroy();\n  });\n  socketTask.onError(res => {\n    stream.destroy(new Error(res.errMsg));\n  });\n}\nconst buildStream = (client, opts) => {\n  opts.hostname = opts.hostname || opts.host;\n  if (!opts.hostname) {\n    throw new Error('Could not determine host. Specify host manually.');\n  }\n  const websocketSubProtocol = opts.protocolId === 'MQIsdp' && opts.protocolVersion === 3 ? 'mqttv3.1' : 'mqtt';\n  setDefaultOpts(opts);\n  const url = buildUrl(opts, client);\n  socketTask = wx.connectSocket({\n    url,\n    protocols: [websocketSubProtocol]\n  });\n  proxy = buildProxy();\n  stream = duplexify_1.default.obj();\n  stream._destroy = (err, cb) => {\n    socketTask.close({\n      success() {\n        if (cb) cb(err);\n      }\n    });\n  };\n  const destroyRef = stream.destroy;\n  stream.destroy = () => {\n    stream.destroy = destroyRef;\n    setTimeout(() => {\n      socketTask.close({\n        fail() {\n          stream._destroy(new Error());\n        }\n      });\n    }, 0);\n  };\n  bindEventHandler();\n  return stream;\n};\nexports.default = buildStream;","map":{"version":3,"names":["buffer_1","require","readable_stream_1","duplexify_1","__importDefault","socketTask","proxy","stream","buildProxy","_proxy","Transform","_write","chunk","encoding","next","send","data","buffer","success","fail","errMsg","Error","_flush","done","close","setDefaultOpts","opts","hostname","path","wsOptions","buildUrl","client","protocol","url","port","transformWsUrl","bindEventHandler","onOpen","setReadable","setWritable","emit","onMessage","res","ArrayBuffer","Buffer","from","push","onClose","end","destroy","onError","buildStream","host","websocketSubProtocol","protocolId","protocolVersion","wx","connectSocket","protocols","default","obj","_destroy","err","cb","destroyRef","setTimeout","exports"],"sources":["/Users/jstanton/Coding/FieldDock/FieldDockMain/node_modules/mqtt/src/lib/connect/wx.ts"],"sourcesContent":["import { StreamBuilder } from '../shared'\n\nimport { Buffer } from 'buffer'\nimport { Transform } from 'readable-stream'\nimport duplexify, { Duplexify } from 'duplexify'\nimport MqttClient, { IClientOptions } from '../client'\n\n/* global wx */\nlet socketTask: any\nlet proxy: Transform\nlet stream: Duplexify\n\nfunction buildProxy() {\n\tconst _proxy = new Transform()\n\t_proxy._write = (chunk, encoding, next) => {\n\t\tsocketTask.send({\n\t\t\tdata: chunk.buffer,\n\t\t\tsuccess() {\n\t\t\t\tnext()\n\t\t\t},\n\t\t\tfail(errMsg) {\n\t\t\t\tnext(new Error(errMsg))\n\t\t\t},\n\t\t})\n\t}\n\t_proxy._flush = (done) => {\n\t\tsocketTask.close({\n\t\t\tsuccess() {\n\t\t\t\tdone()\n\t\t\t},\n\t\t})\n\t}\n\n\treturn _proxy\n}\n\nfunction setDefaultOpts(opts) {\n\tif (!opts.hostname) {\n\t\topts.hostname = 'localhost'\n\t}\n\tif (!opts.path) {\n\t\topts.path = '/'\n\t}\n\n\tif (!opts.wsOptions) {\n\t\topts.wsOptions = {}\n\t}\n}\n\nfunction buildUrl(opts: IClientOptions, client: MqttClient) {\n\tconst protocol = opts.protocol === 'wxs' ? 'wss' : 'ws'\n\tlet url = `${protocol}://${opts.hostname}${opts.path}`\n\tif (opts.port && opts.port !== 80 && opts.port !== 443) {\n\t\turl = `${protocol}://${opts.hostname}:${opts.port}${opts.path}`\n\t}\n\tif (typeof opts.transformWsUrl === 'function') {\n\t\turl = opts.transformWsUrl(url, opts, client)\n\t}\n\treturn url\n}\n\nfunction bindEventHandler() {\n\tsocketTask.onOpen(() => {\n\t\tstream.setReadable(proxy)\n\t\tstream.setWritable(proxy)\n\t\tstream.emit('connect')\n\t})\n\n\tsocketTask.onMessage((res) => {\n\t\tlet { data } = res\n\n\t\tif (data instanceof ArrayBuffer) data = Buffer.from(data)\n\t\telse data = Buffer.from(data, 'utf8')\n\t\tproxy.push(data)\n\t})\n\n\tsocketTask.onClose(() => {\n\t\tstream.emit('close')\n\t\tstream.end()\n\t\tstream.destroy()\n\t})\n\n\tsocketTask.onError((res) => {\n\t\tstream.destroy(new Error(res.errMsg))\n\t})\n}\n\nconst buildStream: StreamBuilder = (client, opts) => {\n\topts.hostname = opts.hostname || opts.host\n\n\tif (!opts.hostname) {\n\t\tthrow new Error('Could not determine host. Specify host manually.')\n\t}\n\n\tconst websocketSubProtocol =\n\t\topts.protocolId === 'MQIsdp' && opts.protocolVersion === 3\n\t\t\t? 'mqttv3.1'\n\t\t\t: 'mqtt'\n\n\tsetDefaultOpts(opts)\n\n\tconst url = buildUrl(opts, client)\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\tsocketTask = wx.connectSocket({\n\t\turl,\n\t\tprotocols: [websocketSubProtocol],\n\t})\n\n\tproxy = buildProxy()\n\tstream = duplexify.obj()\n\tstream._destroy = (err, cb) => {\n\t\tsocketTask.close({\n\t\t\tsuccess() {\n\t\t\t\tif (cb) cb(err)\n\t\t\t},\n\t\t})\n\t}\n\n\tconst destroyRef = stream.destroy\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\tstream.destroy = () => {\n\t\tstream.destroy = destroyRef\n\n\t\tsetTimeout(() => {\n\t\t\tsocketTask.close({\n\t\t\t\tfail() {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tstream._destroy(new Error())\n\t\t\t\t},\n\t\t\t})\n\t\t}, 0)\n\t}\n\n\tbindEventHandler()\n\n\treturn stream\n}\n\nexport default buildStream\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}