{"ast":null,"code":"export function createMission(data) {\n  // Define the mappings\n  const frameMapping = {\n    Relative: 3,\n    Absolute: 0,\n    Terrain: 10\n  };\n  const commandMapping = {\n    \"Return to Launch\": 20,\n    Land: 21,\n    Waypoint: 16,\n    \"Take Off\": 22\n  };\n\n  // Create the output array\n  let output = [\"QGC WPL 110\"];\n\n  // Iterate over the data\n  data.forEach((item, index) => {\n    // Replace the placeholders with the values from the data\n    let line = `${index} 0 ${frameMapping[item.frame]} ${commandMapping[item.command]} ${item.p1} ${item.p2} ${item.p3} ${item.p4} ${item.latitude} ${item.longitude} ${item.alt} 1`;\n    // Add the line to the output\n    output.push(line);\n  });\n\n  // Join the elements of the output with newline characters\n  let outputString = output.join(\"\\n\");\n  return outputString;\n}","map":{"version":3,"names":["createMission","data","frameMapping","Relative","Absolute","Terrain","commandMapping","Land","Waypoint","output","forEach","item","index","line","frame","command","p1","p2","p3","p4","latitude","longitude","alt","push","outputString","join"],"sources":["/Users/jstanton/Coding/FieldDock/FieldDockMain/src/components/Mission Planner/launch.js"],"sourcesContent":["export function createMission(data) {\n  // Define the mappings\n  const frameMapping = {\n    Relative: 3,\n    Absolute: 0,\n    Terrain: 10,\n  };\n\n  const commandMapping = {\n    \"Return to Launch\": 20,\n    Land: 21,\n    Waypoint: 16,\n    \"Take Off\": 22,\n  };\n\n  // Create the output array\n  let output = [\"QGC WPL 110\"];\n\n  // Iterate over the data\n  data.forEach((item, index) => {\n    // Replace the placeholders with the values from the data\n    let line = `${index} 0 ${frameMapping[item.frame]} ${\n      commandMapping[item.command]\n    } ${item.p1} ${item.p2} ${item.p3} ${item.p4} ${item.latitude} ${\n      item.longitude\n    } ${item.alt} 1`;\n    // Add the line to the output\n    output.push(line);\n  });\n\n  // Join the elements of the output with newline characters\n  let outputString = output.join(\"\\n\");\n\n  return outputString;\n}\n"],"mappings":"AAAA,OAAO,SAASA,aAAaA,CAACC,IAAI,EAAE;EAClC;EACA,MAAMC,YAAY,GAAG;IACnBC,QAAQ,EAAE,CAAC;IACXC,QAAQ,EAAE,CAAC;IACXC,OAAO,EAAE;EACX,CAAC;EAED,MAAMC,cAAc,GAAG;IACrB,kBAAkB,EAAE,EAAE;IACtBC,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,EAAE;IACZ,UAAU,EAAE;EACd,CAAC;;EAED;EACA,IAAIC,MAAM,GAAG,CAAC,aAAa,CAAC;;EAE5B;EACAR,IAAI,CAACS,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IAC5B;IACA,IAAIC,IAAI,GAAI,GAAED,KAAM,MAAKV,YAAY,CAACS,IAAI,CAACG,KAAK,CAAE,IAChDR,cAAc,CAACK,IAAI,CAACI,OAAO,CAC5B,IAAGJ,IAAI,CAACK,EAAG,IAAGL,IAAI,CAACM,EAAG,IAAGN,IAAI,CAACO,EAAG,IAAGP,IAAI,CAACQ,EAAG,IAAGR,IAAI,CAACS,QAAS,IAC5DT,IAAI,CAACU,SACN,IAAGV,IAAI,CAACW,GAAI,IAAG;IAChB;IACAb,MAAM,CAACc,IAAI,CAACV,IAAI,CAAC;EACnB,CAAC,CAAC;;EAEF;EACA,IAAIW,YAAY,GAAGf,MAAM,CAACgB,IAAI,CAAC,IAAI,CAAC;EAEpC,OAAOD,YAAY;AACrB"},"metadata":{},"sourceType":"module"}