{"ast":null,"code":"var _jsxFileName = \"/Users/jstanton/Coding/FieldDock/FieldDockMain/src/components/Mission Planner/latLongTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useRef, useEffect, useLayoutEffect } from \"react\";\nimport { useTable, useRowSelect } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LatLongTable = () => {\n  _s();\n  const commandInputRef = useRef(null);\n  // ------------------------------Define the structure of your table----------------------------------- //\n\n  const columns = useMemo(() => [{\n    Header: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 23\n    }, this),\n    accessor: \"id\"\n  }, {\n    Header: \"Command\",\n    accessor: \"command\",\n    Cell: _ref => {\n      let {\n        row,\n        updateMyData\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"200px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          ref: row.values.focus ? commandInputRef : null,\n          id: `row-${row.values.id}`,\n          value: row.values.command,\n          onChange: e => updateMyData(row.index, \"command\", e.target.value),\n          style: {\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"WAYPOINT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Maybe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"So\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    Header: \"P1\",\n    accessor: \"P1\",\n    Cell: _ref2 => {\n      let {\n        row,\n        updateMyData\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: row.values.P1,\n          onChange: e => updateMyData(row.index, \"P1\", e.target.value),\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    Header: \"P2\",\n    accessor: \"P2\",\n    Cell: _ref3 => {\n      let {\n        row,\n        updateMyData\n      } = _ref3;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: row.values.P2,\n          onChange: e => updateMyData(row.index, \"P2\", e.target.value),\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    Header: \"P3\",\n    accessor: \"P3\",\n    Cell: _ref4 => {\n      let {\n        row,\n        updateMyData\n      } = _ref4;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: row.values.P3,\n          onChange: e => updateMyData(row.index, \"P3\", e.target.value),\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    Header: \"P4\",\n    accessor: \"P4\",\n    Cell: _ref5 => {\n      let {\n        row,\n        updateMyData\n      } = _ref5;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: row.values.P4,\n          onChange: e => updateMyData(row.index, \"P4\", e.target.value),\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    Header: \"Latitude\",\n    accessor: \"Latitude\",\n    Cell: _ref6 => {\n      let {\n        row,\n        updateMyData\n      } = _ref6;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: row.values.Latitude,\n          onChange: e => updateMyData(row.index, \"Latitude\", e.target.value),\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    Header: \"Longitude\",\n    accessor: \"Longitude\",\n    Cell: _ref7 => {\n      let {\n        row,\n        updateMyData\n      } = _ref7;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: row.values.Longitude,\n          onChange: e => updateMyData(row.index, \"Longitude\", e.target.value),\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    Header: \"Alt\",\n    accessor: \"Alt\",\n    Cell: _ref8 => {\n      let {\n        row,\n        updateMyData\n      } = _ref8;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: row.values.Alt,\n          onChange: e => updateMyData(row.index, \"Alt\", e.target.value),\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    Header: \"Frame\",\n    accessor: \"Frame\",\n    Cell: _ref9 => {\n      let {\n        row,\n        updateMyData\n      } = _ref9;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: row.values.Frame,\n          onChange: e => updateMyData(row.index, \"Frame\", e.target.value),\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    Header: \"Grad\",\n    accessor: \"Grad\",\n    Cell: _ref10 => {\n      let {\n        row,\n        updateMyData\n      } = _ref10;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: row.values.Grad,\n          onChange: e => updateMyData(row.index, \"Grad\", e.target.value),\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    Header: \"Angle\",\n    accessor: \"Angle\",\n    Cell: _ref11 => {\n      let {\n        row,\n        updateMyData\n      } = _ref11;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: row.values.Angle,\n          onChange: e => updateMyData(row.index, \"Angle\", e.target.value),\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    Header: \"Dist\",\n    accessor: \"Dist\",\n    Cell: _ref12 => {\n      let {\n        row,\n        updateMyData\n      } = _ref12;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: row.values.Dist,\n          onChange: e => updateMyData(row.index, \"Dist\", e.target.value),\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this);\n    }\n  },\n  // ...\n  // ...\n  // ...\n  {\n    Header: \"AZ\",\n    accessor: \"AZ\",\n    Cell: _ref13 => {\n      let {\n        row,\n        updateMyData\n      } = _ref13;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: row.values.AZ,\n          onChange: e => updateMyData(row.index, \"AZ\", e.target.value),\n          style: {\n            width: \"100%\"\n          },\n          onKeyDown: e => {\n            if (e.key === \"Tab\" && row.values.focus) {\n              e.preventDefault();\n              const newRowId = data.length + 1;\n              setData(currentData => currentData.map(item => item.id === row.values.id ? {\n                ...item,\n                focus: false\n              } : item).concat({\n                id: newRowId,\n                command: \"\",\n                p1: \"\",\n                p2: \"\",\n                p3: \"\",\n                p4: \"\",\n                latitude: \"\",\n                longitude: \"\",\n                alt: \"\",\n                frame: \"\",\n                grad: \"\",\n                angle: \"\",\n                dist: \"\",\n                az: \"\",\n                focus: true\n              }));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n  // ...\n\n  // ...\n\n  // ...\n  ], []);\n  // ------------------------------Define the structure of your table----------------------------------- //\n  //\n  //\n  //\n  //\n  // ------------------------------Create a state for your table data----------------------------------- //\n  //\n  //initializes your data state with a single row, which is empty of values except for the id field.\n  //In this line, data is initialized as an array with a single object representing the first row.\n  //The id field is set to 1, and the command field is set to an empty string. You can add more fields to this row as per your requirements.\n  const [data, setData] = useState([{\n    id: 1,\n    command: \"\",\n    p1: \"\",\n    p2: \"\",\n    p3: \"\",\n    p4: \"\",\n    latitude: \"\",\n    longitude: \"\",\n    alt: \"\",\n    frame: \"\",\n    grad: \"\",\n    angle: \"\",\n    dist: \"\",\n    az: \"\",\n    focus: true\n  }]);\n  useEffect(() => {\n    if (commandInputRef.current) {\n      commandInputRef.current.focus();\n    }\n  });\n  const newInputRef = useRef(null);\n\n  // ------------------------------Create a function to handle changes in your table-------------------- //\n  //\n  //The updateMyData function is designed to be reusable for all the columns. It takes three parameters: rowIndex, columnId, and value.\n  //The rowIndex and columnId identify the cell to be updated, and value is the new value for that cell.\n  //This is a common pattern in table components: a single function is used to update any cell, and it uses parameters to determine which cell to update.\n  const updateMyData = (rowIndex, columnId, value) => {\n    setData(old => old.map((row, index) => {\n      if (index === rowIndex) {\n        return {\n          ...old[rowIndex],\n          [columnId]: value\n        };\n      }\n      return row;\n    }));\n  };\n  // ------------------------------Create a function to handle changes in your table-------------------- //\n  //\n  //\n  //\n  //\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useRowSelect);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n          ...column.getHeaderProps(),\n          className: \"table-header\",\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...row.getRowProps(),\n          children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            ...cell.getCellProps(),\n            children: cell.render(\"Cell\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 5\n  }, this);\n};\n// ------------------------------Check if the last row is complete, and if so, add a new row---------- //\n_s(LatLongTable, \"X6ouWy9rzWH5zubnaJ83wdNU2H0=\", false, function () {\n  return [useTable];\n});\n_c = LatLongTable;\nexport default LatLongTable;\nvar _c;\n$RefreshReg$(_c, \"LatLongTable\");","map":{"version":3,"names":["React","useState","useMemo","useRef","useEffect","useLayoutEffect","useTable","useRowSelect","jsxDEV","_jsxDEV","LatLongTable","_s","commandInputRef","columns","Header","style","width","fileName","_jsxFileName","lineNumber","columnNumber","accessor","Cell","_ref","row","updateMyData","children","ref","values","focus","id","value","command","onChange","e","index","target","_ref2","P1","_ref3","P2","_ref4","P3","_ref5","P4","_ref6","Latitude","_ref7","Longitude","_ref8","Alt","_ref9","Frame","_ref10","Grad","_ref11","Angle","_ref12","Dist","_ref13","AZ","onKeyDown","key","preventDefault","newRowId","data","length","setData","currentData","map","item","concat","p1","p2","p3","p4","latitude","longitude","alt","frame","grad","angle","dist","az","current","newInputRef","rowIndex","columnId","old","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","className","render","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["/Users/jstanton/Coding/FieldDock/FieldDockMain/src/components/Mission Planner/latLongTable.jsx"],"sourcesContent":["import React, {\n  useState,\n  useMemo,\n  useRef,\n  useEffect,\n  useLayoutEffect,\n} from \"react\";\nimport { useTable, useRowSelect } from \"react-table\";\n\nconst LatLongTable = () => {\n  const commandInputRef = useRef(null);\n  // ------------------------------Define the structure of your table----------------------------------- //\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: () => <div style={{ width: \"100%\" }}></div>,\n        accessor: \"id\",\n      },\n\n      {\n        Header: \"Command\",\n        accessor: \"command\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"200px\" }}>\n            <select\n              ref={row.values.focus ? commandInputRef : null}\n              id={`row-${row.values.id}`}\n              value={row.values.command}\n              onChange={(e) =>\n                updateMyData(row.index, \"command\", e.target.value)\n              }\n              style={{ width: \"100%\" }}\n            >\n              <option>WAYPOINT</option>\n              <option>No</option>\n              <option>Maybe</option>\n              <option>So</option>\n            </select>\n          </div>\n        ),\n      },\n\n      {\n        Header: \"P1\",\n        accessor: \"P1\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"100%%\" }}>\n            <input\n              value={row.values.P1}\n              onChange={(e) => updateMyData(row.index, \"P1\", e.target.value)}\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        ),\n      },\n      {\n        Header: \"P2\",\n        accessor: \"P2\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"100%%\" }}>\n            <input\n              value={row.values.P2}\n              onChange={(e) => updateMyData(row.index, \"P2\", e.target.value)}\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        ),\n      },\n      {\n        Header: \"P3\",\n        accessor: \"P3\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"100%%\" }}>\n            <input\n              value={row.values.P3}\n              onChange={(e) => updateMyData(row.index, \"P3\", e.target.value)}\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        ),\n      },\n      {\n        Header: \"P4\",\n        accessor: \"P4\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"100%%\" }}>\n            <input\n              value={row.values.P4}\n              onChange={(e) => updateMyData(row.index, \"P4\", e.target.value)}\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        ),\n      },\n      {\n        Header: \"Latitude\",\n        accessor: \"Latitude\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"100%%\" }}>\n            <input\n              value={row.values.Latitude}\n              onChange={(e) =>\n                updateMyData(row.index, \"Latitude\", e.target.value)\n              }\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        ),\n      },\n      {\n        Header: \"Longitude\",\n        accessor: \"Longitude\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"100%%\" }}>\n            <input\n              value={row.values.Longitude}\n              onChange={(e) =>\n                updateMyData(row.index, \"Longitude\", e.target.value)\n              }\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        ),\n      },\n      {\n        Header: \"Alt\",\n        accessor: \"Alt\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"100%%\" }}>\n            <input\n              value={row.values.Alt}\n              onChange={(e) => updateMyData(row.index, \"Alt\", e.target.value)}\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        ),\n      },\n      {\n        Header: \"Frame\",\n        accessor: \"Frame\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"100%%\" }}>\n            <input\n              value={row.values.Frame}\n              onChange={(e) => updateMyData(row.index, \"Frame\", e.target.value)}\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        ),\n      },\n      {\n        Header: \"Grad\",\n        accessor: \"Grad\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"100%%\" }}>\n            <input\n              value={row.values.Grad}\n              onChange={(e) => updateMyData(row.index, \"Grad\", e.target.value)}\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        ),\n      },\n      {\n        Header: \"Angle\",\n        accessor: \"Angle\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"100%%\" }}>\n            <input\n              value={row.values.Angle}\n              onChange={(e) => updateMyData(row.index, \"Angle\", e.target.value)}\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        ),\n      },\n      {\n        Header: \"Dist\",\n        accessor: \"Dist\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"100%%\" }}>\n            <input\n              value={row.values.Dist}\n              onChange={(e) => updateMyData(row.index, \"Dist\", e.target.value)}\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        ),\n      },\n      // ...\n      // ...\n      // ...\n      {\n        Header: \"AZ\",\n        accessor: \"AZ\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"100%\" }}>\n            <input\n              value={row.values.AZ}\n              onChange={(e) => updateMyData(row.index, \"AZ\", e.target.value)}\n              style={{ width: \"100%\" }}\n              onKeyDown={(e) => {\n                if (e.key === \"Tab\" && row.values.focus) {\n                  e.preventDefault();\n                  const newRowId = data.length + 1;\n                  setData((currentData) =>\n                    currentData\n                      .map((item) =>\n                        item.id === row.values.id\n                          ? { ...item, focus: false }\n                          : item\n                      )\n                      .concat({\n                        id: newRowId,\n                        command: \"\",\n                        p1: \"\",\n                        p2: \"\",\n                        p3: \"\",\n                        p4: \"\",\n                        latitude: \"\",\n                        longitude: \"\",\n                        alt: \"\",\n                        frame: \"\",\n                        grad: \"\",\n                        angle: \"\",\n                        dist: \"\",\n                        az: \"\",\n                        focus: true,\n                      })\n                  );\n                }\n              }}\n            />\n          </div>\n        ),\n      },\n\n      // ...\n\n      // ...\n\n      // ...\n    ],\n    []\n  );\n  // ------------------------------Define the structure of your table----------------------------------- //\n  //\n  //\n  //\n  //\n  // ------------------------------Create a state for your table data----------------------------------- //\n  //\n  //initializes your data state with a single row, which is empty of values except for the id field.\n  //In this line, data is initialized as an array with a single object representing the first row.\n  //The id field is set to 1, and the command field is set to an empty string. You can add more fields to this row as per your requirements.\n  const [data, setData] = useState([\n    {\n      id: 1,\n      command: \"\",\n      p1: \"\",\n      p2: \"\",\n      p3: \"\",\n      p4: \"\",\n      latitude: \"\",\n      longitude: \"\",\n      alt: \"\",\n      frame: \"\",\n      grad: \"\",\n      angle: \"\",\n      dist: \"\",\n      az: \"\",\n      focus: true,\n    },\n  ]);\n\n  useEffect(() => {\n    if (commandInputRef.current) {\n      commandInputRef.current.focus();\n    }\n  });\n\n  const newInputRef = useRef(null);\n\n  // ------------------------------Create a function to handle changes in your table-------------------- //\n  //\n  //The updateMyData function is designed to be reusable for all the columns. It takes three parameters: rowIndex, columnId, and value.\n  //The rowIndex and columnId identify the cell to be updated, and value is the new value for that cell.\n  //This is a common pattern in table components: a single function is used to update any cell, and it uses parameters to determine which cell to update.\n  const updateMyData = (rowIndex, columnId, value) => {\n    setData((old) =>\n      old.map((row, index) => {\n        if (index === rowIndex) {\n          return {\n            ...old[rowIndex],\n            [columnId]: value,\n          };\n        }\n        return row;\n      })\n    );\n  };\n  // ------------------------------Create a function to handle changes in your table-------------------- //\n  //\n  //\n  //\n  //\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable(\n      {\n        columns,\n        data,\n      },\n      useRowSelect\n    );\n\n  return (\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()} className=\"table-header\">\n                {column.render(\"Header\")}\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => (\n                <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n              ))}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n// ------------------------------Check if the last row is complete, and if so, add a new row---------- //\n\nexport default LatLongTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}