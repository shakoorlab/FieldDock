{"ast":null,"code":"var _jsxFileName = \"/Users/jstanton/Coding/FieldDock/FieldDockMain/src/components/Tools/Breadcrumbs/missionBreadCrumbs.jsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Link from \"@mui/material/Link\";\nimport TaskAltIcon from \"@mui/icons-material/TaskAlt\";\nimport QueryStatsIcon from \"@mui/icons-material/QueryStats\";\nimport CloudIcon from \"@mui/icons-material/Cloud\";\nimport DescriptionIcon from \"@mui/icons-material/Description\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MissionBreadcrumbs() {\n  _s();\n  const [selected, setSelected] = React.useState(\"\"); // 1. Use useState\n\n  function handleClick(event, breadcrumbName) {\n    // 2. Update handleClick\n    event.preventDefault();\n    console.info(\"You clicked a breadcrumb: \" + breadcrumbName);\n    setSelected(breadcrumbName);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"presentation\",\n    children: /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      \"aria-label\": \"breadcrumb\",\n      children: [\"Status\", \"Metrics\", \"Environment\", \"Flight Logs\"].map((breadcrumb, index) => /*#__PURE__*/_jsxDEV(Link, {\n        underline: \"hover\",\n        sx: {\n          display: \"flex\",\n          alignItems: \"center\",\n          color: selected === breadcrumb ? \"#00e1b4\" : \"#797979\",\n          // 3. Conditionally apply color\n          fontSize: \"20px\",\n          \"&:hover\": {\n            color: \"#00e1b4\"\n          }\n        },\n        href: \"/\",\n        onClick: e => handleClick(e, breadcrumb) // attach click event to each breadcrumb\n        ,\n        children: [index === 0 && /*#__PURE__*/_jsxDEV(TaskAltIcon, {\n          sx: {\n            mr: 0.5\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 31\n        }, this), index === 1 && /*#__PURE__*/_jsxDEV(QueryStatsIcon, {\n          sx: {\n            mr: 0.5\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 31\n        }, this), index === 2 && /*#__PURE__*/_jsxDEV(CloudIcon, {\n          sx: {\n            mr: 0.5\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 31\n        }, this), index === 3 && /*#__PURE__*/_jsxDEV(DescriptionIcon, {\n          sx: {\n            mr: 0.5\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 31\n        }, this), breadcrumb]\n      }, breadcrumb, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(MissionBreadcrumbs, \"5JZuWEbSK7gWtQNUHwm+D/HbW5U=\");\n_c = MissionBreadcrumbs;\nvar _c;\n$RefreshReg$(_c, \"MissionBreadcrumbs\");","map":{"version":3,"names":["React","Typography","Breadcrumbs","Link","TaskAltIcon","QueryStatsIcon","CloudIcon","DescriptionIcon","jsxDEV","_jsxDEV","MissionBreadcrumbs","_s","selected","setSelected","useState","handleClick","event","breadcrumbName","preventDefault","console","info","role","children","map","breadcrumb","index","underline","sx","display","alignItems","color","fontSize","href","onClick","e","mr","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jstanton/Coding/FieldDock/FieldDockMain/src/components/Tools/Breadcrumbs/missionBreadCrumbs.jsx"],"sourcesContent":["import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Link from \"@mui/material/Link\";\nimport TaskAltIcon from \"@mui/icons-material/TaskAlt\";\nimport QueryStatsIcon from \"@mui/icons-material/QueryStats\";\nimport CloudIcon from \"@mui/icons-material/Cloud\";\nimport DescriptionIcon from \"@mui/icons-material/Description\";\n\nexport default function MissionBreadcrumbs() {\n  const [selected, setSelected] = React.useState(\"\"); // 1. Use useState\n\n  function handleClick(event, breadcrumbName) {\n    // 2. Update handleClick\n    event.preventDefault();\n    console.info(\"You clicked a breadcrumb: \" + breadcrumbName);\n    setSelected(breadcrumbName);\n  }\n\n  return (\n    <div role=\"presentation\">\n      <Breadcrumbs aria-label=\"breadcrumb\">\n        {[\"Status\", \"Metrics\", \"Environment\", \"Flight Logs\"].map(\n          (breadcrumb, index) => (\n            <Link\n              key={breadcrumb}\n              underline=\"hover\"\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                color: selected === breadcrumb ? \"#00e1b4\" : \"#797979\", // 3. Conditionally apply color\n                fontSize: \"20px\",\n                \"&:hover\": {\n                  color: \"#00e1b4\",\n                },\n              }}\n              href=\"/\"\n              onClick={(e) => handleClick(e, breadcrumb)} // attach click event to each breadcrumb\n            >\n              {index === 0 && <TaskAltIcon sx={{ mr: 0.5 }} />}\n              {index === 1 && <QueryStatsIcon sx={{ mr: 0.5 }} />}\n              {index === 2 && <CloudIcon sx={{ mr: 0.5 }} />}\n              {index === 3 && <DescriptionIcon sx={{ mr: 0.5 }} />}\n              {breadcrumb}\n            </Link>\n          )\n        )}\n      </Breadcrumbs>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,eAAe,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,eAAe,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC3C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,KAAK,CAACc,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEpD,SAASC,WAAWA,CAACC,KAAK,EAAEC,cAAc,EAAE;IAC1C;IACAD,KAAK,CAACE,cAAc,CAAC,CAAC;IACtBC,OAAO,CAACC,IAAI,CAAC,4BAA4B,GAAGH,cAAc,CAAC;IAC3DJ,WAAW,CAACI,cAAc,CAAC;EAC7B;EAEA,oBACER,OAAA;IAAKY,IAAI,EAAC,cAAc;IAAAC,QAAA,eACtBb,OAAA,CAACP,WAAW;MAAC,cAAW,YAAY;MAAAoB,QAAA,EACjC,CAAC,QAAQ,EAAE,SAAS,EAAE,aAAa,EAAE,aAAa,CAAC,CAACC,GAAG,CACtD,CAACC,UAAU,EAAEC,KAAK,kBAChBhB,OAAA,CAACN,IAAI;QAEHuB,SAAS,EAAC,OAAO;QACjBC,EAAE,EAAE;UACFC,OAAO,EAAE,MAAM;UACfC,UAAU,EAAE,QAAQ;UACpBC,KAAK,EAAElB,QAAQ,KAAKY,UAAU,GAAG,SAAS,GAAG,SAAS;UAAE;UACxDO,QAAQ,EAAE,MAAM;UAChB,SAAS,EAAE;YACTD,KAAK,EAAE;UACT;QACF,CAAE;QACFE,IAAI,EAAC,GAAG;QACRC,OAAO,EAAGC,CAAC,IAAKnB,WAAW,CAACmB,CAAC,EAAEV,UAAU,CAAE,CAAC;QAAA;QAAAF,QAAA,GAE3CG,KAAK,KAAK,CAAC,iBAAIhB,OAAA,CAACL,WAAW;UAACuB,EAAE,EAAE;YAAEQ,EAAE,EAAE;UAAI;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC/Cd,KAAK,KAAK,CAAC,iBAAIhB,OAAA,CAACJ,cAAc;UAACsB,EAAE,EAAE;YAAEQ,EAAE,EAAE;UAAI;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAClDd,KAAK,KAAK,CAAC,iBAAIhB,OAAA,CAACH,SAAS;UAACqB,EAAE,EAAE;YAAEQ,EAAE,EAAE;UAAI;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC7Cd,KAAK,KAAK,CAAC,iBAAIhB,OAAA,CAACF,eAAe;UAACoB,EAAE,EAAE;YAAEQ,EAAE,EAAE;UAAI;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACnDf,UAAU;MAAA,GAlBNA,UAAU;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAmBX,CAEV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV;AAAC5B,EAAA,CAzCuBD,kBAAkB;AAAA8B,EAAA,GAAlB9B,kBAAkB;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}