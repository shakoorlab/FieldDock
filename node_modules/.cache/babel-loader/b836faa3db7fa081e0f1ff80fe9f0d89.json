{"ast":null,"code":"let updateQueue = makeQueue();\n\nconst raf = fn => schedule(fn, updateQueue);\n\nlet writeQueue = makeQueue();\n\nraf.write = fn => schedule(fn, writeQueue);\n\nlet onStartQueue = makeQueue();\n\nraf.onStart = fn => schedule(fn, onStartQueue);\n\nlet onFrameQueue = makeQueue();\n\nraf.onFrame = fn => schedule(fn, onFrameQueue);\n\nlet onFinishQueue = makeQueue();\n\nraf.onFinish = fn => schedule(fn, onFinishQueue);\n\nlet timeouts = [];\n\nraf.setTimeout = (handler, ms) => {\n  let time = raf.now() + ms;\n\n  let cancel = () => {\n    let i = timeouts.findIndex(t => t.cancel == cancel);\n    if (~i) timeouts.splice(i, 1);\n    __raf.count -= ~i ? 1 : 0;\n  };\n\n  let timeout = {\n    time,\n    handler,\n    cancel\n  };\n  timeouts.splice(findTimeout(time), 0, timeout);\n  __raf.count += 1;\n  start();\n  return timeout;\n};\n\nlet findTimeout = time => ~(~timeouts.findIndex(t => t.time > time) || ~timeouts.length);\n\nraf.cancel = fn => {\n  updateQueue.delete(fn);\n  writeQueue.delete(fn);\n};\n\nraf.sync = fn => {\n  sync = true;\n  raf.batchedUpdates(fn);\n  sync = false;\n};\n\nraf.throttle = fn => {\n  let lastArgs;\n\n  function queuedFn() {\n    try {\n      fn(...lastArgs);\n    } finally {\n      lastArgs = null;\n    }\n  }\n\n  function throttled() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    lastArgs = args;\n    raf.onStart(queuedFn);\n  }\n\n  throttled.handler = fn;\n\n  throttled.cancel = () => {\n    onStartQueue.delete(queuedFn);\n    lastArgs = null;\n  };\n\n  return throttled;\n};\n\nlet nativeRaf = typeof window != 'undefined' ? window.requestAnimationFrame : () => {};\n\nraf.use = impl => nativeRaf = impl;\n\nraf.now = typeof performance != 'undefined' ? () => performance.now() : Date.now;\n\nraf.batchedUpdates = fn => fn();\n\nraf.catch = console.error;\nraf.frameLoop = 'always';\n\nraf.advance = () => {\n  if (raf.frameLoop !== 'demand') {\n    console.warn('Cannot call the manual advancement of rafz whilst frameLoop is not set as demand');\n  } else {\n    update();\n  }\n};\n\nlet ts = -1;\nlet sync = false;\n\nfunction schedule(fn, queue) {\n  if (sync) {\n    queue.delete(fn);\n    fn(0);\n  } else {\n    queue.add(fn);\n    start();\n  }\n}\n\nfunction start() {\n  if (ts < 0) {\n    ts = 0;\n\n    if (raf.frameLoop !== 'demand') {\n      nativeRaf(loop);\n    }\n  }\n}\n\nfunction loop() {\n  if (~ts) {\n    nativeRaf(loop);\n    raf.batchedUpdates(update);\n  }\n}\n\nfunction update() {\n  let prevTs = ts;\n  ts = raf.now();\n  let count = findTimeout(ts);\n\n  if (count) {\n    eachSafely(timeouts.splice(0, count), t => t.handler());\n    __raf.count -= count;\n  }\n\n  onStartQueue.flush();\n  updateQueue.flush(prevTs ? Math.min(64, ts - prevTs) : 16.667);\n  onFrameQueue.flush();\n  writeQueue.flush();\n  onFinishQueue.flush();\n}\n\nfunction makeQueue() {\n  let next = new Set();\n  let current = next;\n  return {\n    add(fn) {\n      __raf.count += current == next && !next.has(fn) ? 1 : 0;\n      next.add(fn);\n    },\n\n    delete(fn) {\n      __raf.count -= current == next && next.has(fn) ? 1 : 0;\n      return next.delete(fn);\n    },\n\n    flush(arg) {\n      if (current.size) {\n        next = new Set();\n        __raf.count -= current.size;\n        eachSafely(current, fn => fn(arg) && next.add(fn));\n        __raf.count += next.size;\n        current = next;\n      }\n    }\n\n  };\n}\n\nfunction eachSafely(values, each) {\n  values.forEach(value => {\n    try {\n      each(value);\n    } catch (e) {\n      raf.catch(e);\n    }\n  });\n}\n\nconst __raf = {\n  count: 0,\n\n  clear() {\n    ts = -1;\n    timeouts = [];\n    onStartQueue = makeQueue();\n    updateQueue = makeQueue();\n    onFrameQueue = makeQueue();\n    writeQueue = makeQueue();\n    onFinishQueue = makeQueue();\n    __raf.count = 0;\n  }\n\n};\nexport { __raf, raf };","map":{"version":3,"names":["updateQueue","makeQueue","raf","fn","schedule","writeQueue","write","onStartQueue","onStart","onFrameQueue","onFrame","onFinishQueue","onFinish","timeouts","setTimeout","handler","ms","time","now","cancel","i","findIndex","t","splice","__raf","count","timeout","findTimeout","start","length","delete","sync","batchedUpdates","throttle","lastArgs","queuedFn","throttled","args","nativeRaf","window","requestAnimationFrame","use","impl","performance","Date","catch","console","error","frameLoop","advance","warn","update","ts","queue","add","loop","prevTs","eachSafely","flush","Math","min","next","Set","current","has","arg","size","values","each","forEach","value","e","clear"],"sources":["/Users/jstanton/Desktop/Coding/react-admin-dashboard/node_modules/@react-spring/rafz/dist/react-spring-rafz.esm.js"],"sourcesContent":["let updateQueue = makeQueue();\nconst raf = fn => schedule(fn, updateQueue);\nlet writeQueue = makeQueue();\n\nraf.write = fn => schedule(fn, writeQueue);\n\nlet onStartQueue = makeQueue();\n\nraf.onStart = fn => schedule(fn, onStartQueue);\n\nlet onFrameQueue = makeQueue();\n\nraf.onFrame = fn => schedule(fn, onFrameQueue);\n\nlet onFinishQueue = makeQueue();\n\nraf.onFinish = fn => schedule(fn, onFinishQueue);\n\nlet timeouts = [];\n\nraf.setTimeout = (handler, ms) => {\n  let time = raf.now() + ms;\n\n  let cancel = () => {\n    let i = timeouts.findIndex(t => t.cancel == cancel);\n    if (~i) timeouts.splice(i, 1);\n    __raf.count -= ~i ? 1 : 0;\n  };\n\n  let timeout = {\n    time,\n    handler,\n    cancel\n  };\n  timeouts.splice(findTimeout(time), 0, timeout);\n  __raf.count += 1;\n  start();\n  return timeout;\n};\n\nlet findTimeout = time => ~(~timeouts.findIndex(t => t.time > time) || ~timeouts.length);\n\nraf.cancel = fn => {\n  updateQueue.delete(fn);\n  writeQueue.delete(fn);\n};\n\nraf.sync = fn => {\n  sync = true;\n  raf.batchedUpdates(fn);\n  sync = false;\n};\n\nraf.throttle = fn => {\n  let lastArgs;\n\n  function queuedFn() {\n    try {\n      fn(...lastArgs);\n    } finally {\n      lastArgs = null;\n    }\n  }\n\n  function throttled(...args) {\n    lastArgs = args;\n    raf.onStart(queuedFn);\n  }\n\n  throttled.handler = fn;\n\n  throttled.cancel = () => {\n    onStartQueue.delete(queuedFn);\n    lastArgs = null;\n  };\n\n  return throttled;\n};\n\nlet nativeRaf = typeof window != 'undefined' ? window.requestAnimationFrame : () => {};\n\nraf.use = impl => nativeRaf = impl;\n\nraf.now = typeof performance != 'undefined' ? () => performance.now() : Date.now;\n\nraf.batchedUpdates = fn => fn();\n\nraf.catch = console.error;\nraf.frameLoop = 'always';\n\nraf.advance = () => {\n  if (raf.frameLoop !== 'demand') {\n    console.warn('Cannot call the manual advancement of rafz whilst frameLoop is not set as demand');\n  } else {\n    update();\n  }\n};\n\nlet ts = -1;\nlet sync = false;\n\nfunction schedule(fn, queue) {\n  if (sync) {\n    queue.delete(fn);\n    fn(0);\n  } else {\n    queue.add(fn);\n    start();\n  }\n}\n\nfunction start() {\n  if (ts < 0) {\n    ts = 0;\n\n    if (raf.frameLoop !== 'demand') {\n      nativeRaf(loop);\n    }\n  }\n}\n\nfunction loop() {\n  if (~ts) {\n    nativeRaf(loop);\n    raf.batchedUpdates(update);\n  }\n}\n\nfunction update() {\n  let prevTs = ts;\n  ts = raf.now();\n  let count = findTimeout(ts);\n\n  if (count) {\n    eachSafely(timeouts.splice(0, count), t => t.handler());\n    __raf.count -= count;\n  }\n\n  onStartQueue.flush();\n  updateQueue.flush(prevTs ? Math.min(64, ts - prevTs) : 16.667);\n  onFrameQueue.flush();\n  writeQueue.flush();\n  onFinishQueue.flush();\n}\n\nfunction makeQueue() {\n  let next = new Set();\n  let current = next;\n  return {\n    add(fn) {\n      __raf.count += current == next && !next.has(fn) ? 1 : 0;\n      next.add(fn);\n    },\n\n    delete(fn) {\n      __raf.count -= current == next && next.has(fn) ? 1 : 0;\n      return next.delete(fn);\n    },\n\n    flush(arg) {\n      if (current.size) {\n        next = new Set();\n        __raf.count -= current.size;\n        eachSafely(current, fn => fn(arg) && next.add(fn));\n        __raf.count += next.size;\n        current = next;\n      }\n    }\n\n  };\n}\n\nfunction eachSafely(values, each) {\n  values.forEach(value => {\n    try {\n      each(value);\n    } catch (e) {\n      raf.catch(e);\n    }\n  });\n}\n\nconst __raf = {\n  count: 0,\n\n  clear() {\n    ts = -1;\n    timeouts = [];\n    onStartQueue = makeQueue();\n    updateQueue = makeQueue();\n    onFrameQueue = makeQueue();\n    writeQueue = makeQueue();\n    onFinishQueue = makeQueue();\n    __raf.count = 0;\n  }\n\n};\n\nexport { __raf, raf };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}