{"ast":null,"code":"var _jsxFileName = \"/Users/jstanton/Coding/FieldDock/FieldDockMain/src/scenes/dashboard/imager_settings.jsx\",\n    _s = $RefreshSig$();\n\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Box, ListItemIcon, Typography } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport { ExpandMore } from \"@mui/icons-material\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction imager_settings() {\n  _s();\n\n  //\n  //\n  //---------------------------select hanger system logic-----------------------\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [hangerAnchorEl, setHangerAnchorEl] = useState(null);\n  const [selectedHangerSystem, setSelectedHangerSystem] = useState(null);\n  const [hangerSystems, setHangerSystems] = useState([]);\n  useEffect(() => {\n    //logic for selecting which Fieldock system you want, would be the selection of the main system\n    fetch(\"http://3.145.131.67:8000/hanger/hanger-system/\").then(response => response.json()).then(data => setHangerSystems(data)).catch(error => console.log(error));\n  }, []);\n\n  const handleHangerOpen = event => {\n    setHangerAnchorEl(event.currentTarget);\n  };\n\n  const handleHangerClose = () => {\n    setHangerAnchorEl(null);\n  };\n\n  const handleHangerSelect = (event, selected) => {\n    setSelectedHangerSystem(selected);\n    handleHangerClose();\n  }; //---------------------------select hanger system logic END----------------------------------\n  //\n  //\n  //---------------------------logic for live date and time START------------------------------\n\n\n  function getCurrentDateTimeInCST() {\n    const daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    const date = new Date().toLocaleDateString(\"en-US\", {\n      timeZone: \"America/Chicago\"\n    });\n    const dayOfWeek = daysOfWeek[new Date().getDay()];\n    const time = new Date().toLocaleTimeString(\"en-US\", {\n      timeZone: \"America/Chicago\"\n    });\n    return `${dayOfWeek} | ${date} | ${time} CST`;\n  } //---------------------------logic for live date and time END------------------------------\n  //\n  //\n  //\n  //\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 1,\n        sm: 6,\n        md: 6,\n        lg: 6,\n        style: {\n          backgroundColor: \"#ccc\",\n          border: \"1px solid red\"\n        },\n        children: \"Box 1 alksdf;ajs;dlfj;asd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        style: {\n          backgroundColor: \"#ccc\",\n          border: \"1px solid green\"\n        },\n        children: \"Box hasflkjs;dlfjkasd2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        style: {\n          backgroundColor: \"#ccc\",\n          border: \"1px solid blue\"\n        },\n        children: \"Boxajsd;flajs;dljf;lasdj 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(imager_settings, \"lteI8R6BvoVABTpAZyRs32rm60g=\");\n\nexport default imager_settings;","map":{"version":3,"names":["Container","Row","Col","React","Link","Box","ListItemIcon","Typography","useState","useEffect","MenuItem","Menu","ExpandMore","axios","imager_settings","anchorEl","setAnchorEl","hangerAnchorEl","setHangerAnchorEl","selectedHangerSystem","setSelectedHangerSystem","hangerSystems","setHangerSystems","fetch","then","response","json","data","catch","error","console","log","handleHangerOpen","event","currentTarget","handleHangerClose","handleHangerSelect","selected","getCurrentDateTimeInCST","daysOfWeek","date","Date","toLocaleDateString","timeZone","dayOfWeek","getDay","time","toLocaleTimeString","backgroundColor","border"],"sources":["/Users/jstanton/Coding/FieldDock/FieldDockMain/src/scenes/dashboard/imager_settings.jsx"],"sourcesContent":["import { Container, Row, Col } from \"react-bootstrap\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Box, ListItemIcon, Typography } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport { ExpandMore } from \"@mui/icons-material\";\nimport axios from \"axios\";\n\nfunction imager_settings() {\n  //\n  //\n  //---------------------------select hanger system logic-----------------------\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [hangerAnchorEl, setHangerAnchorEl] = useState(null);\n  const [selectedHangerSystem, setSelectedHangerSystem] = useState(null);\n  const [hangerSystems, setHangerSystems] = useState([]);\n\n  useEffect(() => {\n    //logic for selecting which Fieldock system you want, would be the selection of the main system\n    fetch(\"http://3.145.131.67:8000/hanger/hanger-system/\")\n      .then((response) => response.json())\n      .then((data) => setHangerSystems(data))\n      .catch((error) => console.log(error));\n  }, []);\n  const handleHangerOpen = (event) => {\n    setHangerAnchorEl(event.currentTarget);\n  };\n\n  const handleHangerClose = () => {\n    setHangerAnchorEl(null);\n  };\n\n  const handleHangerSelect = (event, selected) => {\n    setSelectedHangerSystem(selected);\n    handleHangerClose();\n  };\n  //---------------------------select hanger system logic END----------------------------------\n  //\n  //\n  //---------------------------logic for live date and time START------------------------------\n  function getCurrentDateTimeInCST() {\n    const daysOfWeek = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n    const date = new Date().toLocaleDateString(\"en-US\", {\n      timeZone: \"America/Chicago\",\n    });\n    const dayOfWeek = daysOfWeek[new Date().getDay()];\n    const time = new Date().toLocaleTimeString(\"en-US\", {\n      timeZone: \"America/Chicago\",\n    });\n    return `${dayOfWeek} | ${date} | ${time} CST`;\n  }\n  //---------------------------logic for live date and time END------------------------------\n  //\n  //\n  //\n  //\n  return (\n    <Container>\n      <Row>\n        <Col\n          xs={1}\n          sm={6}\n          md={6}\n          lg={6}\n          style={{\n            backgroundColor: \"#ccc\",\n            border: \"1px solid red\",\n          }}\n        >\n          Box 1 alksdf;ajs;dlfj;asd\n        </Col>\n        <Col\n          style={{\n            backgroundColor: \"#ccc\",\n            border: \"1px solid green\",\n          }}\n        >\n          Box hasflkjs;dlfjkasd2\n        </Col>\n        <Col\n          style={{\n            backgroundColor: \"#ccc\",\n            border: \"1px solid blue\",\n          }}\n        >\n          Boxajsd;flajs;dljf;lasdj 3\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default imager_settings;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}