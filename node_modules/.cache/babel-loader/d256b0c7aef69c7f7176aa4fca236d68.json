{"ast":null,"code":"import { useMemo as e, memo as r, useCallback as o, Fragment as t, useRef as i, useEffect as n } from \"react\";\nimport { useTheme as a, guessQuantizeColorScale as u, quantizeColorScalePropType as l, useDimensions as c, SvgWrapper as d, withContainer as s, ResponsiveWrapper as f, getRelativeCursor as h, bindDefs as p } from \"@nivo/core\";\nimport { BasicTooltip as g, useTooltip as v } from \"@nivo/tooltip\";\nimport m from \"prop-types\";\nimport { useInheritedColor as C, inheritedColorPropType as b } from \"@nivo/colors\";\nimport y from \"lodash/get\";\nimport R from \"lodash/isFunction\";\nimport { format as j } from \"d3-format\";\nimport { geoAzimuthalEqualArea as q, geoAzimuthalEquidistant as T, geoGnomonic as M, geoOrthographic as W, geoStereographic as w, geoEqualEarth as k, geoEquirectangular as F, geoMercator as O, geoTransverseMercator as L, geoNaturalEarth1 as E, geoPath as S, geoGraticule as G, geoContains as x } from \"d3-geo\";\nimport { useQuantizeColorScaleLegendData as B, BoxLegendSvg as P, renderLegendToCanvas as N } from \"@nivo/legends\";\nimport { jsx as H } from \"react/jsx-runtime\";\n\nfunction I() {\n  return I = Object.assign || function (e) {\n    for (var r = 1; r < arguments.length; r++) {\n      var o = arguments[r];\n\n      for (var t in o) Object.prototype.hasOwnProperty.call(o, t) && (e[t] = o[t]);\n    }\n\n    return e;\n  }, I.apply(this, arguments);\n}\n\nvar D = {\n  azimuthalEqualArea: q,\n  azimuthalEquidistant: T,\n  gnomonic: M,\n  orthographic: W,\n  stereographic: w,\n  equalEarth: k,\n  equirectangular: F,\n  mercator: O,\n  transverseMercator: L,\n  naturalEarth1: E\n},\n    z = function (r) {\n  var o = r.width,\n      t = r.height,\n      i = r.projectionType,\n      n = r.projectionScale,\n      u = r.projectionTranslation,\n      l = r.projectionRotation,\n      c = r.fillColor,\n      d = r.borderWidth,\n      s = r.borderColor,\n      f = e(function () {\n    return D[i]().scale(n).translate([o * u[0], t * u[1]]).rotate(l);\n  }, [o, t, i, n, u[0], u[1], l[0], l[1], l[2]]),\n      h = e(function () {\n    return S(f);\n  }, [f]),\n      p = e(function () {\n    return G();\n  }),\n      g = a(),\n      v = e(function () {\n    return \"function\" == typeof d ? d : function () {\n      return d;\n    };\n  }, [d]),\n      m = C(s, g),\n      b = e(function () {\n    return \"function\" == typeof c ? c : function () {\n      return c;\n    };\n  }, [c]);\n  return {\n    projection: f,\n    path: h,\n    graticule: p,\n    getBorderWidth: v,\n    getBorderColor: m,\n    getFillColor: b\n  };\n},\n    K = function (r) {\n  var o = r.features,\n      t = r.data,\n      i = r.match,\n      n = r.label,\n      a = r.value,\n      l = r.valueFormat,\n      c = r.colors,\n      d = r.unknownColor,\n      s = r.domain,\n      f = e(function () {\n    return R(i) ? i : function (e, r) {\n      var o = y(e, i),\n          t = y(r, i);\n      return o && o === t;\n    };\n  }, [i]),\n      h = e(function () {\n    return R(n) ? n : function (e) {\n      return y(e, n);\n    };\n  }, [n]),\n      p = e(function () {\n    return R(a) ? a : function (e) {\n      return y(e, a);\n    };\n  }, [a]),\n      g = e(function () {\n    return void 0 === l ? function (e) {\n      return e;\n    } : R(l) ? l : j(l);\n  }, [l]),\n      v = e(function () {\n    return u(c).domain(s);\n  }, [c, s]),\n      m = e(function () {\n    return function (e) {\n      return void 0 === e.value ? d : v(e.value);\n    };\n  }, [v, d]),\n      C = e(function () {\n    return o.map(function (e) {\n      var r = t.find(function (r) {\n        return f(e, r);\n      }),\n          o = p(r);\n\n      if (r) {\n        var i = I({}, e, {\n          data: r,\n          value: o,\n          formattedValue: g(o)\n        });\n        return i.color = m(i), i.label = h(i), i;\n      }\n\n      return e;\n    });\n  }, [o, t, f, p, g, m]),\n      b = B({\n    scale: v,\n    valueFormat: g\n  });\n  return {\n    colorScale: v,\n    getFillColor: m,\n    boundFeatures: C,\n    valueFormatter: g,\n    legendData: b\n  };\n},\n    V = r(function (e) {\n  var r = e.feature;\n  return void 0 === r.data ? null : H(g, {\n    id: r.label,\n    color: r.color,\n    enableChip: !0,\n    value: r.formattedValue\n  });\n});\n\nV.propTypes = {\n  feature: m.object.isRequired\n}, V.displayName = \"ChoroplethTooltip\";\n\nvar A = {\n  features: m.arrayOf(m.shape({\n    id: m.string.isRequired,\n    type: m.oneOf([\"Feature\"]).isRequired,\n    properties: m.object,\n    geometry: m.object.isRequired\n  })).isRequired,\n  projectionType: m.oneOf(Object.keys(D)).isRequired,\n  projectionScale: m.number.isRequired,\n  projectionTranslation: m.arrayOf(m.number).isRequired,\n  projectionRotation: m.arrayOf(m.number).isRequired,\n  fillColor: m.oneOfType([m.string, m.func]).isRequired,\n  borderWidth: m.oneOfType([m.number, m.func]).isRequired,\n  borderColor: b.isRequired,\n  enableGraticule: m.bool.isRequired,\n  graticuleLineWidth: m.number.isRequired,\n  graticuleLineColor: m.string.isRequired,\n  isInteractive: m.bool.isRequired,\n  onMouseEnter: m.func.isRequired,\n  onMouseMove: m.func.isRequired,\n  onMouseLeave: m.func.isRequired,\n  onClick: m.func.isRequired,\n  tooltip: m.any,\n  layers: m.arrayOf(m.oneOfType([m.oneOf([\"graticule\", \"features\"]), m.func])).isRequired\n},\n    J = I({}, A, {\n  role: m.string.isRequired\n}),\n    Q = I({\n  pixelRatio: m.number.isRequired\n}, A),\n    U = {\n  data: m.arrayOf(m.object).isRequired,\n  match: m.oneOfType([m.string, m.func]).isRequired,\n  label: m.oneOfType([m.string, m.func]).isRequired,\n  value: m.oneOfType([m.string, m.func]).isRequired,\n  valueFormat: m.oneOfType([m.string, m.func]),\n  colors: l.isRequired,\n  domain: m.arrayOf(m.number).isRequired,\n  unknownColor: m.string.isRequired,\n  layers: m.arrayOf(m.oneOfType([m.oneOf([\"graticule\", \"features\", \"legends\"]), m.func])).isRequired\n},\n    X = I({}, J, U, {\n  role: m.string.isRequired\n}),\n    Y = I({}, Q, U),\n    Z = {\n  projectionType: \"mercator\",\n  projectionScale: 100,\n  projectionTranslation: [.5, .5],\n  projectionRotation: [0, 0, 0],\n  enableGraticule: !1,\n  graticuleLineWidth: .5,\n  graticuleLineColor: \"#999999\",\n  fillColor: \"#dddddd\",\n  borderWidth: 0,\n  borderColor: \"#000000\",\n  isInteractive: !0,\n  onMouseEnter: function () {},\n  onMouseLeave: function () {},\n  onMouseMove: function () {},\n  onClick: function () {},\n  layers: [\"graticule\", \"features\"],\n  legends: [],\n  fill: [],\n  defs: []\n},\n    $ = I({}, Z, {\n  role: \"img\"\n}),\n    _ = I({}, Z, {\n  pixelRatio: \"undefined\" != typeof window && window.devicePixelRatio || 1\n}),\n    ee = {\n  match: \"id\",\n  label: \"id\",\n  value: \"value\",\n  colors: \"PuBuGn\",\n  unknownColor: \"#999\",\n  tooltip: V,\n  layers: [\"graticule\", \"features\", \"legends\"]\n},\n    re = I({}, $, ee, {\n  role: \"img\"\n}),\n    oe = I({}, _, ee),\n    te = r(function (e) {\n  var r = e.path,\n      o = e.graticule,\n      t = e.lineWidth,\n      i = e.lineColor;\n  return H(\"path\", {\n    fill: \"none\",\n    strokeWidth: t,\n    stroke: i,\n    d: r(o())\n  });\n});\n\nte.propTypes = {\n  path: m.func.isRequired,\n  graticule: m.func.isRequired,\n  lineWidth: m.number.isRequired,\n  lineColor: m.string.isRequired\n}, te.displayName = \"GeoGraticule\";\nvar ie = r(function (e) {\n  var r,\n      o = e.feature,\n      t = e.path,\n      i = e.fillColor,\n      n = e.borderWidth,\n      a = e.borderColor,\n      u = e.onClick,\n      l = e.onMouseEnter,\n      c = e.onMouseMove,\n      d = e.onMouseLeave;\n  return H(\"path\", {\n    fill: null != (r = null == o ? void 0 : o.fill) ? r : i,\n    strokeWidth: n,\n    stroke: a,\n    strokeLinejoin: \"bevel\",\n    d: t(o),\n    onMouseEnter: function (e) {\n      return l(o, e);\n    },\n    onMouseMove: function (e) {\n      return c(o, e);\n    },\n    onMouseLeave: function (e) {\n      return d(o, e);\n    },\n    onClick: function (e) {\n      return u(o, e);\n    }\n  }, o.id);\n});\nie.propTypes = {\n  feature: m.shape({\n    id: m.string.isRequired,\n    type: m.oneOf([\"Feature\"]).isRequired,\n    properties: m.object,\n    geometry: m.object.isRequired\n  }).isRequired,\n  path: m.func.isRequired,\n  fillColor: m.string.isRequired,\n  borderWidth: m.number.isRequired,\n  borderColor: m.string.isRequired,\n  onMouseEnter: m.func.isRequired,\n  onMouseMove: m.func.isRequired,\n  onMouseLeave: m.func.isRequired,\n  onClick: m.func.isRequired\n}, ie.displayName = \"GeoMapFeature\";\nvar ne = r(function (e) {\n  var r = e.width,\n      i = e.height,\n      n = e.margin,\n      u = e.features,\n      l = e.layers,\n      s = e.projectionType,\n      f = e.projectionScale,\n      h = e.projectionTranslation,\n      p = e.projectionRotation,\n      g = e.fillColor,\n      m = e.borderWidth,\n      C = e.borderColor,\n      b = e.enableGraticule,\n      y = e.graticuleLineWidth,\n      R = e.graticuleLineColor,\n      j = e.isInteractive,\n      q = e.onClick,\n      T = e.tooltip,\n      M = e.role,\n      W = c(r, i, n),\n      w = W.margin,\n      k = W.outerWidth,\n      F = W.outerHeight,\n      O = z({\n    width: r,\n    height: i,\n    projectionType: s,\n    projectionScale: f,\n    projectionTranslation: h,\n    projectionRotation: p,\n    fillColor: g,\n    borderWidth: m,\n    borderColor: C\n  }),\n      L = O.graticule,\n      E = O.path,\n      S = O.getFillColor,\n      G = O.getBorderWidth,\n      x = O.getBorderColor,\n      B = a(),\n      P = v(),\n      N = P.showTooltipFromEvent,\n      I = P.hideTooltip,\n      D = o(function (e, r) {\n    return j && q && q(e, r);\n  }, [j, q]),\n      K = o(function (e, r) {\n    return j && T && N(H(T, {\n      feature: e\n    }), r);\n  }, [j, N, T]),\n      V = o(function (e, r) {\n    return j && T && N(H(T, {\n      feature: e\n    }), r);\n  }, [j, N, T]),\n      A = o(function () {\n    return j && I();\n  }, [j, I]);\n  return H(d, {\n    width: k,\n    height: F,\n    margin: w,\n    theme: B,\n    role: M,\n    children: l.map(function (r, o) {\n      return \"graticule\" === r ? !0 !== b ? null : H(te, {\n        path: E,\n        graticule: L,\n        lineWidth: y,\n        lineColor: R\n      }, \"graticule\") : \"features\" === r ? H(t, {\n        children: u.map(function (e) {\n          return H(ie, {\n            feature: e,\n            path: E,\n            fillColor: S(e),\n            borderWidth: G(e),\n            borderColor: x(e),\n            onMouseEnter: K,\n            onMouseMove: V,\n            onMouseLeave: A,\n            onClick: D\n          }, e.id);\n        })\n      }, \"features\") : H(t, {\n        children: r(e)\n      }, o);\n    })\n  });\n});\nne.displayName = \"GeoMap\", ne.propTypes = J, ne.defaultProps = $;\n\nvar ae = s(ne),\n    ue = function (e) {\n  return H(f, {\n    children: function (r) {\n      var o = r.width,\n          t = r.height;\n      return H(ae, I({\n        width: o,\n        height: t\n      }, e));\n    }\n  });\n},\n    le = function (e, r, o, t) {\n  var i = h(r, e),\n      n = i[0],\n      a = i[1];\n  return o.find(function (e) {\n    return x(e, t.invert([n, a]));\n  });\n},\n    ce = r(function (e) {\n  var r = e.width,\n      t = e.height,\n      u = e.margin,\n      l = e.pixelRatio,\n      d = e.features,\n      s = e.layers,\n      f = e.projectionType,\n      h = e.projectionScale,\n      p = e.projectionTranslation,\n      g = e.projectionRotation,\n      m = e.fillColor,\n      C = e.borderWidth,\n      b = e.borderColor,\n      y = e.enableGraticule,\n      R = e.graticuleLineWidth,\n      j = e.graticuleLineColor,\n      q = e.isInteractive,\n      T = e.onClick,\n      M = e.onMouseMove,\n      W = e.tooltip,\n      w = i(null),\n      k = a(),\n      F = c(r, t, u),\n      O = F.margin,\n      L = F.outerWidth,\n      E = F.outerHeight,\n      S = z({\n    width: r,\n    height: t,\n    projectionType: f,\n    projectionScale: h,\n    projectionTranslation: p,\n    projectionRotation: g,\n    fillColor: m,\n    borderWidth: C,\n    borderColor: b\n  }),\n      G = S.projection,\n      x = S.graticule,\n      B = S.path,\n      P = S.getFillColor,\n      N = S.getBorderWidth,\n      I = S.getBorderColor;\n  n(function () {\n    if (w) {\n      w.current.width = L * l, w.current.height = E * l;\n      var r = w.current.getContext(\"2d\");\n      r.scale(l, l), r.fillStyle = k.background, r.fillRect(0, 0, L, E), r.translate(O.left, O.top), B.context(r), s.forEach(function (o) {\n        \"graticule\" === o ? !0 === y && (r.lineWidth = R, r.strokeStyle = j, r.beginPath(), B(x()), r.stroke()) : \"features\" === o ? d.forEach(function (e) {\n          r.beginPath(), B(e), r.fillStyle = P(e), r.fill();\n          var o = N(e);\n          o > 0 && (r.strokeStyle = I(e), r.lineWidth = o, r.stroke());\n        }) : o(r, e);\n      });\n    }\n  }, [w, L, E, O, l, k, B, x, P, N, I, d, s]);\n  var D = v(),\n      K = D.showTooltipFromEvent,\n      V = D.hideTooltip,\n      A = o(function (e) {\n    if (q && W) {\n      var r = le(e, w.current, d, G);\n      r ? K(H(W, {\n        feature: r\n      }), e) : V(), M && M(r || null, e);\n    }\n  }, [K, V, q, W, w, d, G]),\n      J = o(function () {\n    return q && V();\n  }, [q, V]),\n      Q = o(function (e) {\n    if (q && T) {\n      var r = le(e, w.current, d, G);\n      r && T(r, e);\n    }\n  }, [q, w, d, G, T]);\n  return H(\"canvas\", {\n    ref: w,\n    width: L * l,\n    height: E * l,\n    style: {\n      width: L,\n      height: E,\n      cursor: q ? \"auto\" : \"normal\"\n    },\n    onMouseMove: A,\n    onMouseLeave: J,\n    onClick: Q\n  });\n});\n\nce.displatName = \"GeoMapCanvas\", ce.propTypes = Q, ce.defaultProps = _;\n\nvar de = s(ce),\n    se = function (e) {\n  return H(f, {\n    children: function (r) {\n      var o = r.width,\n          t = r.height;\n      return H(de, I({\n        width: o,\n        height: t\n      }, e));\n    }\n  });\n},\n    fe = r(function (e) {\n  var r = e.width,\n      i = e.height,\n      n = e.margin,\n      u = e.features,\n      l = e.data,\n      s = e.match,\n      f = e.label,\n      h = e.value,\n      g = e.valueFormat,\n      m = e.projectionType,\n      C = e.projectionScale,\n      b = e.projectionTranslation,\n      y = e.projectionRotation,\n      R = e.colors,\n      j = e.domain,\n      q = e.unknownColor,\n      T = e.borderWidth,\n      M = e.borderColor,\n      W = e.enableGraticule,\n      w = e.graticuleLineWidth,\n      k = e.graticuleLineColor,\n      F = e.layers,\n      O = e.legends,\n      L = e.isInteractive,\n      E = e.onClick,\n      S = e.tooltip,\n      G = e.role,\n      x = e.defs,\n      B = void 0 === x ? re.defs : x,\n      N = e.fill,\n      D = void 0 === N ? re.fill : N,\n      V = c(r, i, n),\n      A = V.margin,\n      J = V.outerWidth,\n      Q = V.outerHeight,\n      U = z({\n    width: r,\n    height: i,\n    projectionType: m,\n    projectionScale: C,\n    projectionTranslation: b,\n    projectionRotation: y,\n    fillColor: function () {},\n    borderWidth: T,\n    borderColor: M\n  }),\n      X = U.graticule,\n      Y = U.path,\n      Z = U.getBorderWidth,\n      $ = U.getBorderColor,\n      _ = K({\n    features: u,\n    data: l,\n    match: s,\n    label: f,\n    value: h,\n    valueFormat: g,\n    colors: R,\n    unknownColor: q,\n    domain: j\n  }),\n      ee = _.getFillColor,\n      oe = _.boundFeatures,\n      ne = _.legendData,\n      ae = a(),\n      ue = p(B, oe, D, {\n    dataKey: \"data\",\n    targetKey: \"fill\"\n  }),\n      le = v(),\n      ce = le.showTooltipFromEvent,\n      de = le.hideTooltip,\n      se = o(function (e, r) {\n    return L && E && E(e, r);\n  }, [L, E]),\n      fe = o(function (e, r) {\n    return L && S && ce(H(S, {\n      feature: e\n    }), r);\n  }, [L, ce, S]),\n      he = o(function (e, r) {\n    return L && S && ce(H(S, {\n      feature: e\n    }), r);\n  }, [L, ce, S]),\n      pe = o(function () {\n    return L && de();\n  }, [L, de]);\n\n  return H(d, {\n    width: J,\n    height: Q,\n    margin: A,\n    theme: ae,\n    defs: ue,\n    role: G,\n    children: F.map(function (e, o) {\n      return \"graticule\" === e ? !0 !== W ? null : H(te, {\n        path: Y,\n        graticule: X,\n        lineWidth: w,\n        lineColor: k\n      }, \"graticule\") : \"features\" === e ? H(t, {\n        children: oe.map(function (e) {\n          return H(ie, {\n            feature: e,\n            path: Y,\n            fillColor: ee(e),\n            borderWidth: Z(e),\n            borderColor: $(e),\n            onMouseEnter: fe,\n            onMouseMove: he,\n            onMouseLeave: pe,\n            onClick: se\n          }, e.id);\n        })\n      }, \"features\") : \"legends\" === e ? O.map(function (e, o) {\n        return H(P, I({\n          containerWidth: r,\n          containerHeight: i,\n          data: ne\n        }, e), o);\n      }) : H(t, {\n        children: e({})\n      }, o);\n    })\n  });\n});\n\nfe.displayName = \"Choropleth\", fe.propTypes = X, fe.defaultProps = re;\n\nvar he = s(fe),\n    pe = function (e) {\n  return H(f, {\n    children: function (r) {\n      var o = r.width,\n          t = r.height;\n      return H(he, I({\n        width: o,\n        height: t\n      }, e));\n    }\n  });\n},\n    ge = function (e, r, o, t) {\n  var i = h(r, e),\n      n = i[0],\n      a = i[1];\n  return o.find(function (e) {\n    return x(e, t.invert([n, a]));\n  });\n},\n    ve = r(function (e) {\n  var r = e.width,\n      t = e.height,\n      u = e.margin,\n      l = e.pixelRatio,\n      d = e.features,\n      s = e.data,\n      f = e.match,\n      h = e.label,\n      p = e.value,\n      g = e.valueFormat,\n      m = e.projectionType,\n      C = e.projectionScale,\n      b = e.projectionTranslation,\n      y = e.projectionRotation,\n      R = e.colors,\n      j = e.domain,\n      q = e.unknownColor,\n      T = e.borderWidth,\n      M = e.borderColor,\n      W = e.enableGraticule,\n      w = e.graticuleLineWidth,\n      k = e.graticuleLineColor,\n      F = e.layers,\n      O = e.legends,\n      L = e.isInteractive,\n      E = e.onClick,\n      S = e.onMouseMove,\n      G = e.tooltip,\n      x = i(null),\n      B = a(),\n      P = c(r, t, u),\n      D = P.margin,\n      V = P.outerWidth,\n      A = P.outerHeight,\n      J = z({\n    width: r,\n    height: t,\n    projectionType: m,\n    projectionScale: C,\n    projectionTranslation: b,\n    projectionRotation: y,\n    fillColor: function () {},\n    borderWidth: T,\n    borderColor: M\n  }),\n      Q = J.projection,\n      U = J.graticule,\n      X = J.path,\n      Y = J.getBorderWidth,\n      Z = J.getBorderColor,\n      $ = K({\n    features: d,\n    data: s,\n    match: f,\n    label: h,\n    value: p,\n    valueFormat: g,\n    colors: R,\n    unknownColor: q,\n    domain: j\n  }),\n      _ = $.getFillColor,\n      ee = $.boundFeatures,\n      re = $.legendData;\n  n(function () {\n    if (x) {\n      x.current.width = V * l, x.current.height = A * l;\n      var e = x.current.getContext(\"2d\");\n      e.scale(l, l), e.fillStyle = B.background, e.fillRect(0, 0, V, A), e.translate(D.left, D.top), X.context(e), F.forEach(function (o) {\n        \"graticule\" === o ? !0 === W && (e.lineWidth = w, e.strokeStyle = k, e.beginPath(), X(U()), e.stroke()) : \"features\" === o ? ee.forEach(function (r) {\n          e.beginPath(), X(r), e.fillStyle = _(r), e.fill();\n          var o = Y(r);\n          o > 0 && (e.strokeStyle = Z(r), e.lineWidth = o, e.stroke());\n        }) : \"legends\" === o && O.forEach(function (o) {\n          N(e, I({}, o, {\n            data: re,\n            containerWidth: r,\n            containerHeight: t,\n            theme: B\n          }));\n        });\n      });\n    }\n  }, [x, V, A, D, l, B, X, U, _, Y, Z, ee, O, F]);\n  var oe = v(),\n      te = oe.showTooltipFromEvent,\n      ie = oe.hideTooltip,\n      ne = o(function (e) {\n    if (L && G) {\n      var r = ge(e, x.current, ee, Q);\n      r ? te(H(G, {\n        feature: r\n      }), e) : ie(), S && S(r || null, e);\n    }\n  }, [te, ie, L, G, x, ee, Q]),\n      ae = o(function () {\n    return L && ie();\n  }, [L, ie]),\n      ue = o(function (e) {\n    if (L && E) {\n      var r = ge(e, x.current, ee, Q);\n      r && E(r, e);\n    }\n  }, [L, x, ee, Q, E]);\n  return H(\"canvas\", {\n    ref: x,\n    width: V * l,\n    height: A * l,\n    style: {\n      width: V,\n      height: A,\n      cursor: L ? \"auto\" : \"normal\"\n    },\n    onMouseMove: ne,\n    onMouseLeave: ae,\n    onClick: ue\n  });\n});\n\nve.displayName = \"ChoroplethCanvas\", ve.propTypes = Y, ve.defaultProps = oe;\n\nvar me = s(ve),\n    Ce = function (e) {\n  return H(f, {\n    children: function (r) {\n      var o = r.width,\n          t = r.height;\n      return H(me, I({\n        width: o,\n        height: t\n      }, e));\n    }\n  });\n};\n\nexport { he as Choropleth, me as ChoroplethCanvas, oe as ChoroplethCanvasDefaultProps, Y as ChoroplethCanvasPropTypes, re as ChoroplethDefaultProps, X as ChoroplethPropTypes, ae as GeoMap, de as GeoMapCanvas, _ as GeoMapCanvasDefaultProps, Q as GeoMapCanvasPropTypes, $ as GeoMapDefaultProps, J as GeoMapPropTypes, pe as ResponsiveChoropleth, Ce as ResponsiveChoroplethCanvas, ue as ResponsiveGeoMap, se as ResponsiveGeoMapCanvas, D as projectionById, K as useChoropleth, z as useGeoMap };","map":{"version":3,"mappings":"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","names":["projectionById","azimuthalEqualArea","geoAzimuthalEqualArea","azimuthalEquidistant","geoAzimuthalEquidistant","gnomonic","geoGnomonic","orthographic","geoOrthographic","stereographic","geoStereographic","equalEarth","geoEqualEarth","equirectangular","geoEquirectangular","mercator","geoMercator","transverseMercator","geoTransverseMercator","naturalEarth1","geoNaturalEarth1","useGeoMap","width","height","projectionType","projectionScale","projectionTranslation","projectionRotation","fillColor","borderWidth","borderColor","projection","useMemo","scale","translate","rotate","path","geoPath","graticule","geoGraticule","theme","useTheme","getBorderWidth","getBorderColor","useInheritedColor","getFillColor","useChoropleth","features","data","match","label","value","valueFormat","colors","unknownColor","domain","findMatchingDatum","_isFunction","feature","datum","featureKey","_get","datumKey","getLabel","getValue","valueFormatter","undefined","d","format","colorScale","guessQuantizeColorScale","boundFeatures","map","find","datumValue","featureWithData","formattedValue","color","legendData","useQuantizeColorScaleLegendData","ChoroplethTooltip","memo","_jsx","BasicTooltip","id","enableChip","propTypes","PropTypes","object","isRequired","displayName","commonPropTypes","arrayOf","shape","string","type","oneOf","properties","geometry","Object","keys","number","oneOfType","func","inheritedColorPropType","enableGraticule","bool","graticuleLineWidth","graticuleLineColor","isInteractive","onMouseEnter","onMouseMove","onMouseLeave","onClick","tooltip","any","layers","GeoMapPropTypes","role","GeoMapCanvasPropTypes","pixelRatio","commonChoroplethPropTypes","quantizeColorScalePropType","ChoroplethPropTypes","ChoroplethCanvasPropTypes","commonDefaultProps","legends","fill","defs","GeoMapDefaultProps","GeoMapCanvasDefaultProps","window","devicePixelRatio","commonChoroplethDefaultProps","ChoroplethDefaultProps","ChoroplethCanvasDefaultProps","GeoGraticule","lineWidth","lineColor","strokeWidth","stroke","GeoMapFeature","strokeLinejoin","event","GeoMap","props","partialMargin","margin","Tooltip","useDimensions","outerWidth","outerHeight","useTooltip","showTooltipFromEvent","hideTooltip","handleClick","useCallback","handleMouseEnter","handleMouseMove","handleMouseLeave","SvgWrapper","layer","i","Fragment","defaultProps","withContainer","ResponsiveGeoMap","ResponsiveWrapper","getFeatureFromMouseEvent","el","getRelativeCursor","x","y","f","geoContains","invert","GeoMapCanvas","canvasEl","useRef","useEffect","current","ctx","getContext","fillStyle","background","fillRect","left","top","context","forEach","strokeStyle","beginPath","ref","style","cursor","displatName","ResponsiveGeoMapCanvas","Choropleth","boundDefs","bindDefs","dataKey","targetKey","le","legend","BoxLegendSvg","containerWidth","containerHeight","ResponsiveChoropleth","ChoroplethCanvas","renderLegendToCanvas","ResponsiveChoroplethCanvas"],"sources":["/Users/jstanton/Desktop/Coding/react-admin-dashboard/node_modules/@nivo/geo/src/hooks.js","/Users/jstanton/Desktop/Coding/react-admin-dashboard/node_modules/@nivo/geo/src/ChoroplethTooltip.js","/Users/jstanton/Desktop/Coding/react-admin-dashboard/node_modules/@nivo/geo/src/props.js","/Users/jstanton/Desktop/Coding/react-admin-dashboard/node_modules/@nivo/geo/src/GeoGraticule.js","/Users/jstanton/Desktop/Coding/react-admin-dashboard/node_modules/@nivo/geo/src/GeoMapFeature.js","/Users/jstanton/Desktop/Coding/react-admin-dashboard/node_modules/@nivo/geo/src/GeoMap.js","/Users/jstanton/Desktop/Coding/react-admin-dashboard/node_modules/@nivo/geo/src/ResponsiveGeoMap.js","/Users/jstanton/Desktop/Coding/react-admin-dashboard/node_modules/@nivo/geo/src/GeoMapCanvas.js","/Users/jstanton/Desktop/Coding/react-admin-dashboard/node_modules/@nivo/geo/src/ResponsiveGeoMapCanvas.js","/Users/jstanton/Desktop/Coding/react-admin-dashboard/node_modules/@nivo/geo/src/Choropleth.js","/Users/jstanton/Desktop/Coding/react-admin-dashboard/node_modules/@nivo/geo/src/ResponsiveChoropleth.js","/Users/jstanton/Desktop/Coding/react-admin-dashboard/node_modules/@nivo/geo/src/ChoroplethCanvas.js","/Users/jstanton/Desktop/Coding/react-admin-dashboard/node_modules/@nivo/geo/src/ResponsiveChoroplethCanvas.js"],"sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo } from 'react'\nimport { isFunction, get } from 'lodash'\nimport { format } from 'd3-format'\nimport {\n    geoPath,\n    geoAzimuthalEqualArea,\n    geoAzimuthalEquidistant,\n    geoGnomonic,\n    geoOrthographic,\n    geoStereographic,\n    geoEqualEarth,\n    geoEquirectangular,\n    geoMercator,\n    geoTransverseMercator,\n    geoNaturalEarth1,\n    geoGraticule,\n} from 'd3-geo'\nimport { guessQuantizeColorScale, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useQuantizeColorScaleLegendData } from '@nivo/legends'\n\nexport const projectionById = {\n    azimuthalEqualArea: geoAzimuthalEqualArea,\n    azimuthalEquidistant: geoAzimuthalEquidistant,\n    gnomonic: geoGnomonic,\n    orthographic: geoOrthographic,\n    stereographic: geoStereographic,\n    equalEarth: geoEqualEarth,\n    equirectangular: geoEquirectangular,\n    mercator: geoMercator,\n    transverseMercator: geoTransverseMercator,\n    naturalEarth1: geoNaturalEarth1,\n}\n\nexport const useGeoMap = ({\n    width,\n    height,\n    projectionType,\n    projectionScale,\n    projectionTranslation,\n    projectionRotation,\n    fillColor,\n    borderWidth,\n    borderColor,\n}) => {\n    const projection = useMemo(() => {\n        return projectionById[projectionType]()\n            .scale(projectionScale)\n            .translate([width * projectionTranslation[0], height * projectionTranslation[1]])\n            .rotate(projectionRotation)\n    }, [\n        width,\n        height,\n        projectionType,\n        projectionScale,\n        projectionTranslation[0],\n        projectionTranslation[1],\n        projectionRotation[0],\n        projectionRotation[1],\n        projectionRotation[2],\n    ])\n    const path = useMemo(() => geoPath(projection), [projection])\n    const graticule = useMemo(() => geoGraticule())\n\n    const theme = useTheme()\n    const getBorderWidth = useMemo(\n        () => (typeof borderWidth === 'function' ? borderWidth : () => borderWidth),\n        [borderWidth]\n    )\n    const getBorderColor = useInheritedColor(borderColor, theme)\n    const getFillColor = useMemo(\n        () => (typeof fillColor === 'function' ? fillColor : () => fillColor),\n        [fillColor]\n    )\n\n    return {\n        projection,\n        path,\n        graticule,\n        getBorderWidth,\n        getBorderColor,\n        getFillColor,\n    }\n}\n\nexport const useChoropleth = ({\n    features,\n    data,\n    match,\n    label,\n    value,\n    valueFormat,\n    colors,\n    unknownColor,\n    domain,\n}) => {\n    const findMatchingDatum = useMemo(() => {\n        if (isFunction(match)) return match\n        return (feature, datum) => {\n            const featureKey = get(feature, match)\n            const datumKey = get(datum, match)\n\n            return featureKey && featureKey === datumKey\n        }\n    }, [match])\n    const getLabel = useMemo(\n        () => (isFunction(label) ? label : datum => get(datum, label)),\n        [label]\n    )\n    const getValue = useMemo(\n        () => (isFunction(value) ? value : datum => get(datum, value)),\n        [value]\n    )\n    const valueFormatter = useMemo(() => {\n        if (valueFormat === undefined) return d => d\n        if (isFunction(valueFormat)) return valueFormat\n        return format(valueFormat)\n    }, [valueFormat])\n\n    const colorScale = useMemo(\n        () => guessQuantizeColorScale(colors).domain(domain),\n        [colors, domain]\n    )\n    const getFillColor = useMemo(() => {\n        return feature => {\n            if (feature.value === undefined) return unknownColor\n            return colorScale(feature.value)\n        }\n    }, [colorScale, unknownColor])\n\n    const boundFeatures = useMemo(\n        () =>\n            features.map(feature => {\n                const datum = data.find(datum => findMatchingDatum(feature, datum))\n                const datumValue = getValue(datum)\n\n                if (datum) {\n                    const featureWithData = {\n                        ...feature,\n                        data: datum,\n                        value: datumValue,\n                        formattedValue: valueFormatter(datumValue),\n                    }\n                    featureWithData.color = getFillColor(featureWithData)\n                    featureWithData.label = getLabel(featureWithData)\n\n                    return featureWithData\n                }\n\n                return feature\n            }),\n        [features, data, findMatchingDatum, getValue, valueFormatter, getFillColor]\n    )\n\n    const legendData = useQuantizeColorScaleLegendData({\n        scale: colorScale,\n        valueFormat: valueFormatter,\n    })\n\n    return {\n        colorScale,\n        getFillColor,\n        boundFeatures,\n        valueFormatter,\n        legendData,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst ChoroplethTooltip = memo(({ feature }) => {\n    if (feature.data === undefined) return null\n\n    return (\n        <BasicTooltip\n            id={feature.label}\n            color={feature.color}\n            enableChip={true}\n            value={feature.formattedValue}\n        />\n    )\n})\n\nChoroplethTooltip.propTypes = {\n    feature: PropTypes.object.isRequired,\n}\n\nChoroplethTooltip.displayName = 'ChoroplethTooltip'\n\nexport default ChoroplethTooltip\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { quantizeColorScalePropType } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\nimport { projectionById } from './hooks'\nimport ChoroplethTooltip from './ChoroplethTooltip'\n\nconst commonPropTypes = {\n    features: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            type: PropTypes.oneOf(['Feature']).isRequired,\n            properties: PropTypes.object,\n            geometry: PropTypes.object.isRequired,\n        })\n    ).isRequired,\n\n    projectionType: PropTypes.oneOf(Object.keys(projectionById)).isRequired,\n    projectionScale: PropTypes.number.isRequired,\n    projectionTranslation: PropTypes.arrayOf(PropTypes.number).isRequired,\n    projectionRotation: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n    fillColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    borderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n\n    enableGraticule: PropTypes.bool.isRequired,\n    graticuleLineWidth: PropTypes.number.isRequired,\n    graticuleLineColor: PropTypes.string.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func.isRequired,\n    onMouseMove: PropTypes.func.isRequired,\n    onMouseLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltip: PropTypes.any,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['graticule', 'features']), PropTypes.func])\n    ).isRequired,\n}\n\nexport const GeoMapPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const GeoMapCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonChoroplethPropTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    match: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    valueFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    colors: quantizeColorScalePropType.isRequired,\n    domain: PropTypes.arrayOf(PropTypes.number).isRequired,\n    unknownColor: PropTypes.string.isRequired,\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['graticule', 'features', 'legends']), PropTypes.func])\n    ).isRequired,\n}\n\nexport const ChoroplethPropTypes = {\n    ...GeoMapPropTypes,\n    ...commonChoroplethPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const ChoroplethCanvasPropTypes = {\n    ...GeoMapCanvasPropTypes,\n    ...commonChoroplethPropTypes,\n}\n\nconst commonDefaultProps = {\n    projectionType: 'mercator',\n    projectionScale: 100,\n    projectionTranslation: [0.5, 0.5],\n    projectionRotation: [0, 0, 0],\n\n    enableGraticule: false,\n    graticuleLineWidth: 0.5,\n    graticuleLineColor: '#999999',\n\n    fillColor: '#dddddd',\n    borderWidth: 0,\n    borderColor: '#000000',\n\n    isInteractive: true,\n    onMouseEnter: () => {},\n    onMouseLeave: () => {},\n    onMouseMove: () => {},\n    onClick: () => {},\n\n    layers: ['graticule', 'features'],\n    legends: [],\n\n    fill: [],\n    defs: [],\n}\n\nexport const GeoMapDefaultProps = {\n    ...commonDefaultProps,\n    role: 'img',\n}\n\nexport const GeoMapCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n\nconst commonChoroplethDefaultProps = {\n    match: 'id',\n    label: 'id',\n    value: 'value',\n    colors: 'PuBuGn',\n    unknownColor: '#999',\n    tooltip: ChoroplethTooltip,\n    layers: ['graticule', 'features', 'legends'],\n}\n\nexport const ChoroplethDefaultProps = {\n    ...GeoMapDefaultProps,\n    ...commonChoroplethDefaultProps,\n    role: 'img',\n}\n\nexport const ChoroplethCanvasDefaultProps = {\n    ...GeoMapCanvasDefaultProps,\n    ...commonChoroplethDefaultProps,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GeoGraticule = memo(({ path, graticule, lineWidth, lineColor }) => {\n    return <path fill=\"none\" strokeWidth={lineWidth} stroke={lineColor} d={path(graticule())} />\n})\n\nGeoGraticule.propTypes = {\n    path: PropTypes.func.isRequired,\n    graticule: PropTypes.func.isRequired,\n    lineWidth: PropTypes.number.isRequired,\n    lineColor: PropTypes.string.isRequired,\n}\n\nGeoGraticule.displayName = 'GeoGraticule'\n\nexport default GeoGraticule\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GeoMapFeature = memo(\n    ({\n        feature,\n        path,\n        fillColor,\n        borderWidth,\n        borderColor,\n        onClick,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n    }) => {\n        return (\n            <path\n                key={feature.id}\n                fill={feature?.fill ?? fillColor}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                strokeLinejoin=\"bevel\"\n                d={path(feature)}\n                onMouseEnter={event => onMouseEnter(feature, event)}\n                onMouseMove={event => onMouseMove(feature, event)}\n                onMouseLeave={event => onMouseLeave(feature, event)}\n                onClick={event => onClick(feature, event)}\n            />\n        )\n    }\n)\n\nGeoMapFeature.propTypes = {\n    feature: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        type: PropTypes.oneOf(['Feature']).isRequired,\n        properties: PropTypes.object,\n        geometry: PropTypes.object.isRequired,\n    }).isRequired,\n    path: PropTypes.func.isRequired,\n\n    fillColor: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n\n    onMouseEnter: PropTypes.func.isRequired,\n    onMouseMove: PropTypes.func.isRequired,\n    onMouseLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nGeoMapFeature.displayName = 'GeoMapFeature'\n\nexport default GeoMapFeature\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { Fragment, useCallback, memo } from 'react'\nimport { SvgWrapper, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { GeoMapPropTypes, GeoMapDefaultProps } from './props'\nimport GeoGraticule from './GeoGraticule'\nimport GeoMapFeature from './GeoMapFeature'\nimport { useGeoMap } from './hooks'\n\nconst GeoMap = memo(props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        features,\n        layers,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        fillColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        isInteractive,\n        onClick,\n        tooltip: Tooltip,\n        role,\n    } = props\n    const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n    const { graticule, path, getFillColor, getBorderWidth, getBorderColor } = useGeoMap({\n        width,\n        height,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        fillColor,\n        borderWidth,\n        borderColor,\n    })\n\n    const theme = useTheme()\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleClick = useCallback(\n        (feature, event) => isInteractive && onClick && onClick(feature, event),\n        [isInteractive, onClick]\n    )\n    const handleMouseEnter = useCallback(\n        (feature, event) =>\n            isInteractive && Tooltip && showTooltipFromEvent(<Tooltip feature={feature} />, event),\n        [isInteractive, showTooltipFromEvent, Tooltip]\n    )\n    const handleMouseMove = useCallback(\n        (feature, event) =>\n            isInteractive && Tooltip && showTooltipFromEvent(<Tooltip feature={feature} />, event),\n        [isInteractive, showTooltipFromEvent, Tooltip]\n    )\n    const handleMouseLeave = useCallback(\n        () => isInteractive && hideTooltip(),\n        [isInteractive, hideTooltip]\n    )\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            theme={theme}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layer === 'graticule') {\n                    if (enableGraticule !== true) return null\n\n                    return (\n                        <GeoGraticule\n                            key=\"graticule\"\n                            path={path}\n                            graticule={graticule}\n                            lineWidth={graticuleLineWidth}\n                            lineColor={graticuleLineColor}\n                        />\n                    )\n                }\n                if (layer === 'features') {\n                    return (\n                        <Fragment key=\"features\">\n                            {features.map(feature => (\n                                <GeoMapFeature\n                                    key={feature.id}\n                                    feature={feature}\n                                    path={path}\n                                    fillColor={getFillColor(feature)}\n                                    borderWidth={getBorderWidth(feature)}\n                                    borderColor={getBorderColor(feature)}\n                                    onMouseEnter={handleMouseEnter}\n                                    onMouseMove={handleMouseMove}\n                                    onMouseLeave={handleMouseLeave}\n                                    onClick={handleClick}\n                                />\n                            ))}\n                        </Fragment>\n                    )\n                }\n\n                return <Fragment key={i}>{layer(props)}</Fragment>\n            })}\n        </SvgWrapper>\n    )\n})\n\nGeoMap.displayName = 'GeoMap'\nGeoMap.propTypes = GeoMapPropTypes\nGeoMap.defaultProps = GeoMapDefaultProps\n\nexport default withContainer(GeoMap)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport GeoMap from './GeoMap'\n\nconst ResponsiveGeoMap = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <GeoMap width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveGeoMap\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useRef, useEffect, useCallback } from 'react'\nimport { geoContains } from 'd3-geo'\nimport { getRelativeCursor, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { GeoMapCanvasDefaultProps, GeoMapCanvasPropTypes } from './props'\nimport { useGeoMap } from './hooks'\n\nconst getFeatureFromMouseEvent = (event, el, features, projection) => {\n    const [x, y] = getRelativeCursor(el, event)\n\n    return features.find(f => geoContains(f, projection.invert([x, y])))\n}\n\nconst GeoMapCanvas = memo(props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n        features,\n        layers,\n\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n\n        fillColor,\n        borderWidth,\n        borderColor,\n\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n\n        isInteractive,\n        onClick,\n        onMouseMove,\n        tooltip: Tooltip,\n    } = props\n\n    const canvasEl = useRef(null)\n    const theme = useTheme()\n    const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n    const { projection, graticule, path, getFillColor, getBorderWidth, getBorderColor } = useGeoMap(\n        {\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor,\n            borderWidth,\n            borderColor,\n        }\n    )\n\n    useEffect(() => {\n        if (!canvasEl) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        path.context(ctx)\n\n        layers.forEach(layer => {\n            if (layer === 'graticule') {\n                if (enableGraticule === true) {\n                    ctx.lineWidth = graticuleLineWidth\n                    ctx.strokeStyle = graticuleLineColor\n                    ctx.beginPath()\n                    path(graticule())\n                    ctx.stroke()\n                }\n            } else if (layer === 'features') {\n                features.forEach(feature => {\n                    ctx.beginPath()\n                    path(feature)\n                    ctx.fillStyle = getFillColor(feature)\n                    ctx.fill()\n\n                    const borderWidth = getBorderWidth(feature)\n                    if (borderWidth > 0) {\n                        ctx.strokeStyle = getBorderColor(feature)\n                        ctx.lineWidth = borderWidth\n                        ctx.stroke()\n                    }\n                })\n            } else {\n                layer(ctx, props)\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        margin,\n        pixelRatio,\n        theme,\n        path,\n        graticule,\n        getFillColor,\n        getBorderWidth,\n        getBorderColor,\n        features,\n        layers,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseMove = useCallback(\n        event => {\n            if (!isInteractive || !Tooltip) return\n\n            const feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection)\n            if (feature) {\n                showTooltipFromEvent(<Tooltip feature={feature} />, event)\n            } else {\n                hideTooltip()\n            }\n            onMouseMove && onMouseMove(feature || null, event)\n        },\n        [showTooltipFromEvent, hideTooltip, isInteractive, Tooltip, canvasEl, features, projection]\n    )\n    const handleMouseLeave = useCallback(\n        () => isInteractive && hideTooltip(),\n        [isInteractive, hideTooltip]\n    )\n    const handleClick = useCallback(\n        event => {\n            if (!isInteractive || !onClick) return\n\n            const feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection)\n            if (feature) {\n                onClick(feature, event)\n            }\n        },\n        [isInteractive, canvasEl, features, projection, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n        />\n    )\n})\n\nGeoMapCanvas.displatName = 'GeoMapCanvas'\nGeoMapCanvas.propTypes = GeoMapCanvasPropTypes\nGeoMapCanvas.defaultProps = GeoMapCanvasDefaultProps\n\nexport default withContainer(GeoMapCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport GeoMapCanvas from './GeoMapCanvas'\n\nconst ResponsiveGeoMapCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <GeoMapCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveGeoMapCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, Fragment, useCallback } from 'react'\nimport { SvgWrapper, withContainer, useDimensions, useTheme, bindDefs } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ChoroplethPropTypes, ChoroplethDefaultProps } from './props'\nimport GeoGraticule from './GeoGraticule'\nimport GeoMapFeature from './GeoMapFeature'\nimport { useGeoMap, useChoropleth } from './hooks'\n\nconst Choropleth = memo(\n    ({\n        width,\n        height,\n        margin: partialMargin,\n        features,\n        data,\n        match,\n        label,\n        value,\n        valueFormat,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        colors,\n        domain,\n        unknownColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        layers,\n        legends,\n        isInteractive,\n        onClick,\n        tooltip: Tooltip,\n        role,\n        defs = ChoroplethDefaultProps.defs,\n        fill = ChoroplethDefaultProps.fill,\n    }) => {\n        const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n        const { graticule, path, getBorderWidth, getBorderColor } = useGeoMap({\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor: () => {},\n            borderWidth,\n            borderColor,\n        })\n        const { getFillColor, boundFeatures, legendData } = useChoropleth({\n            features,\n            data,\n            match,\n            label,\n            value,\n            valueFormat,\n            colors,\n            unknownColor,\n            domain,\n        })\n\n        const theme = useTheme()\n\n        const boundDefs = bindDefs(defs, boundFeatures, fill, {\n            dataKey: 'data',\n            targetKey: 'fill',\n        })\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n        const handleClick = useCallback(\n            (feature, event) => isInteractive && onClick && onClick(feature, event),\n            [isInteractive, onClick]\n        )\n        const handleMouseEnter = useCallback(\n            (feature, event) =>\n                isInteractive &&\n                Tooltip &&\n                showTooltipFromEvent(<Tooltip feature={feature} />, event),\n            [isInteractive, showTooltipFromEvent, Tooltip]\n        )\n        const handleMouseMove = useCallback(\n            (feature, event) =>\n                isInteractive &&\n                Tooltip &&\n                showTooltipFromEvent(<Tooltip feature={feature} />, event),\n            [isInteractive, showTooltipFromEvent, Tooltip]\n        )\n        const handleMouseLeave = useCallback(\n            () => isInteractive && hideTooltip(),\n            [isInteractive, hideTooltip]\n        )\n\n        return (\n            <SvgWrapper\n                width={outerWidth}\n                height={outerHeight}\n                margin={margin}\n                theme={theme}\n                defs={boundDefs}\n                role={role}\n            >\n                {layers.map((layer, i) => {\n                    if (layer === 'graticule') {\n                        if (enableGraticule !== true) return null\n\n                        return (\n                            <GeoGraticule\n                                key=\"graticule\"\n                                path={path}\n                                graticule={graticule}\n                                lineWidth={graticuleLineWidth}\n                                lineColor={graticuleLineColor}\n                            />\n                        )\n                    }\n                    if (layer === 'features') {\n                        return (\n                            <Fragment key=\"features\">\n                                {boundFeatures.map(feature => (\n                                    <GeoMapFeature\n                                        key={feature.id}\n                                        feature={feature}\n                                        path={path}\n                                        fillColor={getFillColor(feature)}\n                                        borderWidth={getBorderWidth(feature)}\n                                        borderColor={getBorderColor(feature)}\n                                        onMouseEnter={handleMouseEnter}\n                                        onMouseMove={handleMouseMove}\n                                        onMouseLeave={handleMouseLeave}\n                                        onClick={handleClick}\n                                    />\n                                ))}\n                            </Fragment>\n                        )\n                    }\n                    if (layer === 'legends') {\n                        return legends.map((legend, i) => {\n                            return (\n                                <BoxLegendSvg\n                                    key={i}\n                                    containerWidth={width}\n                                    containerHeight={height}\n                                    data={legendData}\n                                    {...legend}\n                                />\n                            )\n                        })\n                    }\n\n                    return <Fragment key={i}>{layer({})}</Fragment>\n                })}\n            </SvgWrapper>\n        )\n    }\n)\n\nChoropleth.displayName = 'Choropleth'\nChoropleth.propTypes = ChoroplethPropTypes\nChoropleth.defaultProps = ChoroplethDefaultProps\n\nexport default withContainer(Choropleth)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Choropleth from './Choropleth'\n\nconst ResponsiveChoropleth = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Choropleth width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChoropleth\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useRef, useEffect, useCallback } from 'react'\nimport { geoContains } from 'd3-geo'\nimport { getRelativeCursor, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ChoroplethCanvasDefaultProps, ChoroplethCanvasPropTypes } from './props'\nimport { useGeoMap, useChoropleth } from './hooks'\n\nconst getFeatureFromMouseEvent = (event, el, features, projection) => {\n    const [x, y] = getRelativeCursor(el, event)\n\n    return features.find(f => geoContains(f, projection.invert([x, y])))\n}\n\nconst ChoroplethCanvas = memo(\n    ({\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n        features,\n        data,\n        match,\n        label,\n        value,\n        valueFormat,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        colors,\n        domain,\n        unknownColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        layers,\n        legends,\n        isInteractive,\n        onClick,\n        onMouseMove,\n        tooltip: Tooltip,\n    }) => {\n        const canvasEl = useRef(null)\n        const theme = useTheme()\n        const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n        const { projection, graticule, path, getBorderWidth, getBorderColor } = useGeoMap({\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor: () => {},\n            borderWidth,\n            borderColor,\n        })\n        const { getFillColor, boundFeatures, legendData } = useChoropleth({\n            features,\n            data,\n            match,\n            label,\n            value,\n            valueFormat,\n            colors,\n            unknownColor,\n            domain,\n        })\n\n        useEffect(() => {\n            if (!canvasEl) return\n\n            canvasEl.current.width = outerWidth * pixelRatio\n            canvasEl.current.height = outerHeight * pixelRatio\n\n            const ctx = canvasEl.current.getContext('2d')\n\n            ctx.scale(pixelRatio, pixelRatio)\n\n            ctx.fillStyle = theme.background\n            ctx.fillRect(0, 0, outerWidth, outerHeight)\n            ctx.translate(margin.left, margin.top)\n\n            path.context(ctx)\n\n            layers.forEach(layer => {\n                if (layer === 'graticule') {\n                    if (enableGraticule === true) {\n                        ctx.lineWidth = graticuleLineWidth\n                        ctx.strokeStyle = graticuleLineColor\n                        ctx.beginPath()\n                        path(graticule())\n                        ctx.stroke()\n                    }\n                } else if (layer === 'features') {\n                    boundFeatures.forEach(feature => {\n                        ctx.beginPath()\n                        path(feature)\n                        ctx.fillStyle = getFillColor(feature)\n                        ctx.fill()\n\n                        const borderWidth = getBorderWidth(feature)\n                        if (borderWidth > 0) {\n                            ctx.strokeStyle = getBorderColor(feature)\n                            ctx.lineWidth = borderWidth\n                            ctx.stroke()\n                        }\n                    })\n                } else if (layer === 'legends') {\n                    legends.forEach(legend => {\n                        renderLegendToCanvas(ctx, {\n                            ...legend,\n                            data: legendData,\n                            containerWidth: width,\n                            containerHeight: height,\n                            theme,\n                        })\n                    })\n                } else {\n                    // layer(ctx, {})\n                }\n            })\n        }, [\n            canvasEl,\n            outerWidth,\n            outerHeight,\n            margin,\n            pixelRatio,\n            theme,\n            path,\n            graticule,\n            getFillColor,\n            getBorderWidth,\n            getBorderColor,\n            boundFeatures,\n            legends,\n            layers,\n        ])\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n        const handleMouseMove = useCallback(\n            event => {\n                if (!isInteractive || !Tooltip) return\n\n                const feature = getFeatureFromMouseEvent(\n                    event,\n                    canvasEl.current,\n                    boundFeatures,\n                    projection\n                )\n                if (feature) {\n                    showTooltipFromEvent(<Tooltip feature={feature} />, event)\n                } else {\n                    hideTooltip()\n                }\n                onMouseMove && onMouseMove(feature || null, event)\n            },\n            [\n                showTooltipFromEvent,\n                hideTooltip,\n                isInteractive,\n                Tooltip,\n                canvasEl,\n                boundFeatures,\n                projection,\n            ]\n        )\n        const handleMouseLeave = useCallback(\n            () => isInteractive && hideTooltip(),\n            [isInteractive, hideTooltip]\n        )\n        const handleClick = useCallback(\n            event => {\n                if (!isInteractive || !onClick) return\n\n                const feature = getFeatureFromMouseEvent(\n                    event,\n                    canvasEl.current,\n                    boundFeatures,\n                    projection\n                )\n                if (feature) {\n                    onClick(feature, event)\n                }\n            },\n            [isInteractive, canvasEl, boundFeatures, projection, onClick]\n        )\n\n        return (\n            <canvas\n                ref={canvasEl}\n                width={outerWidth * pixelRatio}\n                height={outerHeight * pixelRatio}\n                style={{\n                    width: outerWidth,\n                    height: outerHeight,\n                    cursor: isInteractive ? 'auto' : 'normal',\n                }}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        )\n    }\n)\n\nChoroplethCanvas.displayName = 'ChoroplethCanvas'\nChoroplethCanvas.propTypes = ChoroplethCanvasPropTypes\nChoroplethCanvas.defaultProps = ChoroplethCanvasDefaultProps\n\nexport default withContainer(ChoroplethCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ChoroplethCanvas from './ChoroplethCanvas'\n\nconst ResponsiveChoroplethCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ChoroplethCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChoroplethCanvas\n"]},"metadata":{},"sourceType":"module"}