{"ast":null,"code":"var _jsxFileName = \"/Users/jstanton/Coding/FieldDock/FieldDockMain/src/components/Mission Planner/latLongTable.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useMemo, useRef, useEffect } from \"react\";\nimport { useTable } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LatLongTable = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const rowRefs = _s(data.map(_s(() => {\n    _s();\n    return useRef(null);\n  }, \"J9pzIsEOVEZ74gjFtMkCj+5Po7s=\")), \"J9pzIsEOVEZ74gjFtMkCj+5Po7s=\");\n  const updateMyData = (rowIndex, columnId, value) => {\n    // ...\n  };\n  const columns = useMemo(() => [\n  // ...\n  {\n    Header: \"Command\",\n    accessor: \"command\",\n    Cell: _ref => {\n      let {\n        row,\n        updateMyData\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"200px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: `row-${row.values.id}`,\n          ref: rowRefs[row.index],\n          value: row.values.command,\n          onChange: e => updateMyData(row.index, \"command\", e.target.value),\n          style: {\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"WAYPOINT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Maybe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"So\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this);\n    }\n  },\n  // ...\n  {\n    Header: \"AZ\",\n    accessor: \"AZ\",\n    Cell: _ref2 => {\n      let {\n        row,\n        updateMyData\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: row.values.AZ,\n          onChange: e => updateMyData(row.index, \"AZ\", e.target.value),\n          onKeyDown: e => keyDownHandler(e, row),\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this);\n    }\n  }], []);\n  const [data, setData] = useState([\n    // ...\n  ]);\n  const keyDownHandler = (e, row) => {\n    if (e.key === \"Tab\" && row.index === data.length - 1) {\n      e.preventDefault();\n      setData(oldData => [...oldData, {\n        id: oldData.length + 1,\n        command: \"\",\n        p1: \"\",\n        p2: \"\",\n        p3: \"\",\n        p4: \"\",\n        latitude: \"\",\n        longitude: \"\",\n        alt: \"\",\n        frame: \"\",\n        grad: \"\",\n        angle: \"\",\n        dist: \"\",\n        az: \"\"\n      }]);\n      setTimeout(() => rowRefs[data.length].current.focus(), 0);\n    }\n  };\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n          ...column.getHeaderProps(),\n          className: \"table-header\",\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...row.getRowProps(),\n          children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            ...cell.getCellProps(),\n            children: cell.render(\"Cell\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s2(LatLongTable, \"RLpQ+qV8JYlI3DWGj99Ds7ikfys=\", false, function () {\n  return [useTable];\n});\n_c = LatLongTable;\nexport default LatLongTable;\nvar _c;\n$RefreshReg$(_c, \"LatLongTable\");","map":{"version":3,"names":["React","useState","useMemo","useRef","useEffect","useTable","jsxDEV","_jsxDEV","LatLongTable","_s2","_s","$RefreshSig$","rowRefs","data","map","updateMyData","rowIndex","columnId","value","columns","Header","accessor","Cell","_ref","row","style","width","children","id","values","ref","index","command","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_ref2","AZ","onKeyDown","keyDownHandler","setData","key","length","preventDefault","oldData","p1","p2","p3","p4","latitude","longitude","alt","frame","grad","angle","dist","az","setTimeout","current","focus","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","className","render","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["/Users/jstanton/Coding/FieldDock/FieldDockMain/src/components/Mission Planner/latLongTable.jsx"],"sourcesContent":["import React, { useState, useMemo, useRef, useEffect } from \"react\";\nimport { useTable } from \"react-table\";\n\nconst LatLongTable = () => {\n  const rowRefs = data.map(() => useRef(null));\n\n  const updateMyData = (rowIndex, columnId, value) => {\n    // ...\n  };\n  const columns = useMemo(\n    () => [\n      // ...\n      {\n        Header: \"Command\",\n        accessor: \"command\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"200px\" }}>\n            <select\n              id={`row-${row.values.id}`}\n              ref={rowRefs[row.index]}\n              value={row.values.command}\n              onChange={(e) =>\n                updateMyData(row.index, \"command\", e.target.value)\n              }\n              style={{ width: \"100%\" }}\n            >\n              <option>WAYPOINT</option>\n              <option>No</option>\n              <option>Maybe</option>\n              <option>So</option>\n            </select>\n          </div>\n        ),\n      },\n      // ...\n      {\n        Header: \"AZ\",\n        accessor: \"AZ\",\n        Cell: ({ row, updateMyData }) => (\n          <div style={{ width: \"100%\" }}>\n            <input\n              value={row.values.AZ}\n              onChange={(e) => updateMyData(row.index, \"AZ\", e.target.value)}\n              onKeyDown={(e) => keyDownHandler(e, row)}\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        ),\n      },\n    ],\n    []\n  );\n\n  const [data, setData] = useState([\n    // ...\n  ]);\n\n  const keyDownHandler = (e, row) => {\n    if (e.key === \"Tab\" && row.index === data.length - 1) {\n      e.preventDefault();\n      setData((oldData) => [\n        ...oldData,\n        {\n          id: oldData.length + 1,\n          command: \"\",\n          p1: \"\",\n          p2: \"\",\n          p3: \"\",\n          p4: \"\",\n          latitude: \"\",\n          longitude: \"\",\n          alt: \"\",\n          frame: \"\",\n          grad: \"\",\n          angle: \"\",\n          dist: \"\",\n          az: \"\",\n        },\n      ]);\n      setTimeout(() => rowRefs[data.length].current.focus(), 0);\n    }\n  };\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data });\n\n  return (\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()} className=\"table-header\">\n                {column.render(\"Header\")}\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => (\n                <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n              ))}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default LatLongTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}