{"ast":null,"code":"import * as t from \"react\";\nimport { memo as e, useMemo as i, createElement as n } from \"react\";\nimport { animated as r, useSpring as a, useTransition as o } from \"@react-spring/web\";\nimport { textPropsByEngine as l, useTheme as s, useMotionConfig as c, degreesToRadians as f } from \"@nivo/core\";\nimport { timeFormat as x } from \"d3-time-format\";\nimport { format as u } from \"d3-format\";\nimport { getScaleTicks as d, centerScale as m } from \"@nivo/scales\";\nimport { jsxs as y, jsx as g, Fragment as k } from \"react/jsx-runtime\";\nimport h from \"prop-types\";\n\nfunction v() {\n  return v = Object.assign || function (t) {\n    for (var e = 1; e < arguments.length; e++) {\n      var i = arguments[e];\n\n      for (var n in i) Object.prototype.hasOwnProperty.call(i, n) && (t[n] = i[n]);\n    }\n\n    return t;\n  }, v.apply(this, arguments);\n}\n\nvar p = function (t) {\n  var e,\n      i = t.axis,\n      n = t.scale,\n      r = t.ticksPosition,\n      a = t.tickValues,\n      o = t.tickSize,\n      s = t.tickPadding,\n      c = t.tickRotation,\n      f = t.engine,\n      x = void 0 === f ? \"svg\" : f,\n      u = d(n, a),\n      y = l[x],\n      g = \"bandwidth\" in n ? m(n) : n,\n      k = {\n    lineX: 0,\n    lineY: 0\n  },\n      h = {\n    textX: 0,\n    textY: 0\n  },\n      p = \"object\" == typeof document && \"rtl\" === document.dir,\n      b = y.align.center,\n      P = y.baseline.center;\n  return \"x\" === i ? (e = function (t) {\n    var e;\n    return {\n      x: null != (e = g(t)) ? e : 0,\n      y: 0\n    };\n  }, k.lineY = o * (\"after\" === r ? 1 : -1), h.textY = (o + s) * (\"after\" === r ? 1 : -1), P = \"after\" === r ? y.baseline.top : y.baseline.bottom, 0 === c ? b = y.align.center : \"after\" === r && c < 0 || \"before\" === r && c > 0 ? (b = y.align[p ? \"left\" : \"right\"], P = y.baseline.center) : (\"after\" === r && c > 0 || \"before\" === r && c < 0) && (b = y.align[p ? \"right\" : \"left\"], P = y.baseline.center)) : (e = function (t) {\n    var e;\n    return {\n      x: 0,\n      y: null != (e = g(t)) ? e : 0\n    };\n  }, k.lineX = o * (\"after\" === r ? 1 : -1), h.textX = (o + s) * (\"after\" === r ? 1 : -1), b = \"after\" === r ? y.align.left : y.align.right), {\n    ticks: u.map(function (t) {\n      return v({\n        key: t instanceof Date ? \"\" + t.valueOf() : \"\" + t,\n        value: t\n      }, e(t), k, h);\n    }),\n    textAlign: b,\n    textBaseline: P\n  };\n},\n    b = function (t, e) {\n  if (void 0 === t || \"function\" == typeof t) return t;\n\n  if (\"time\" === e.type) {\n    var i = x(t);\n    return function (t) {\n      return i(t instanceof Date ? t : new Date(t));\n    };\n  }\n\n  return u(t);\n},\n    P = function (t) {\n  var e,\n      i = t.width,\n      n = t.height,\n      r = t.scale,\n      a = t.axis,\n      o = t.values,\n      l = (e = o, Array.isArray(e) ? o : void 0) || d(r, o),\n      s = \"bandwidth\" in r ? m(r) : r,\n      c = \"x\" === a ? l.map(function (t) {\n    var e, i;\n    return {\n      key: t instanceof Date ? \"\" + t.valueOf() : \"\" + t,\n      x1: null != (e = s(t)) ? e : 0,\n      x2: null != (i = s(t)) ? i : 0,\n      y1: 0,\n      y2: n\n    };\n  }) : l.map(function (t) {\n    var e, n;\n    return {\n      key: t instanceof Date ? \"\" + t.valueOf() : \"\" + t,\n      x1: 0,\n      x2: i,\n      y1: null != (e = s(t)) ? e : 0,\n      y2: null != (n = s(t)) ? n : 0\n    };\n  });\n  return c;\n},\n    S = e(function (t) {\n  var e,\n      n = t.value,\n      a = t.format,\n      o = t.lineX,\n      l = t.lineY,\n      c = t.onClick,\n      f = t.textBaseline,\n      x = t.textAnchor,\n      u = t.animatedProps,\n      d = s(),\n      m = null != (e = null == a ? void 0 : a(n)) ? e : n,\n      k = i(function () {\n    var t = {\n      opacity: u.opacity\n    };\n    return c ? {\n      style: v({}, t, {\n        cursor: \"pointer\"\n      }),\n      onClick: function (t) {\n        return c(t, m);\n      }\n    } : {\n      style: t\n    };\n  }, [u.opacity, c, m]);\n  return y(r.g, v({\n    transform: u.transform\n  }, k, {\n    children: [g(\"line\", {\n      x1: 0,\n      x2: o,\n      y1: 0,\n      y2: l,\n      style: d.axis.ticks.line\n    }), g(r.text, {\n      dominantBaseline: f,\n      textAnchor: x,\n      transform: u.textTransform,\n      style: d.axis.ticks.text,\n      children: m\n    })]\n  }));\n}),\n    T = e(function (e) {\n  var n = e.axis,\n      l = e.scale,\n      f = e.x,\n      x = void 0 === f ? 0 : f,\n      u = e.y,\n      d = void 0 === u ? 0 : u,\n      m = e.length,\n      k = e.ticksPosition,\n      h = e.tickValues,\n      P = e.tickSize,\n      T = void 0 === P ? 5 : P,\n      O = e.tickPadding,\n      w = void 0 === O ? 5 : O,\n      A = e.tickRotation,\n      X = void 0 === A ? 0 : A,\n      Y = e.format,\n      W = e.renderTick,\n      B = void 0 === W ? S : W,\n      z = e.legend,\n      V = e.legendPosition,\n      C = void 0 === V ? \"end\" : V,\n      D = e.legendOffset,\n      R = void 0 === D ? 0 : D,\n      j = e.onClick,\n      E = e.ariaHidden,\n      q = s(),\n      F = i(function () {\n    return b(Y, l);\n  }, [Y, l]),\n      H = p({\n    axis: n,\n    scale: l,\n    ticksPosition: k,\n    tickValues: h,\n    tickSize: T,\n    tickPadding: w,\n    tickRotation: X\n  }),\n      N = H.ticks,\n      I = H.textAlign,\n      G = H.textBaseline,\n      J = null;\n\n  if (void 0 !== z) {\n    var K,\n        L = 0,\n        M = 0,\n        Q = 0;\n    \"y\" === n ? (Q = -90, L = R, \"start\" === C ? (K = \"start\", M = m) : \"middle\" === C ? (K = \"middle\", M = m / 2) : \"end\" === C && (K = \"end\")) : (M = R, \"start\" === C ? K = \"start\" : \"middle\" === C ? (K = \"middle\", L = m / 2) : \"end\" === C && (K = \"end\", L = m)), J = g(\"text\", {\n      transform: \"translate(\" + L + \", \" + M + \") rotate(\" + Q + \")\",\n      textAnchor: K,\n      style: v({\n        dominantBaseline: \"central\"\n      }, q.axis.legend.text),\n      children: z\n    });\n  }\n\n  var U = c(),\n      Z = U.animate,\n      $ = U.config,\n      _ = a({\n    transform: \"translate(\" + x + \",\" + d + \")\",\n    lineX2: \"x\" === n ? m : 0,\n    lineY2: \"x\" === n ? 0 : m,\n    config: $,\n    immediate: !Z\n  }),\n      tt = o(N, {\n    keys: function (t) {\n      return t.key;\n    },\n    initial: function (t) {\n      return {\n        opacity: 1,\n        transform: \"translate(\" + t.x + \",\" + t.y + \")\",\n        textTransform: \"translate(\" + t.textX + \",\" + t.textY + \") rotate(\" + X + \")\"\n      };\n    },\n    from: function (t) {\n      return {\n        opacity: 0,\n        transform: \"translate(\" + t.x + \",\" + t.y + \")\",\n        textTransform: \"translate(\" + t.textX + \",\" + t.textY + \") rotate(\" + X + \")\"\n      };\n    },\n    enter: function (t) {\n      return {\n        opacity: 1,\n        transform: \"translate(\" + t.x + \",\" + t.y + \")\",\n        textTransform: \"translate(\" + t.textX + \",\" + t.textY + \") rotate(\" + X + \")\"\n      };\n    },\n    update: function (t) {\n      return {\n        opacity: 1,\n        transform: \"translate(\" + t.x + \",\" + t.y + \")\",\n        textTransform: \"translate(\" + t.textX + \",\" + t.textY + \") rotate(\" + X + \")\"\n      };\n    },\n    leave: {\n      opacity: 0\n    },\n    config: $,\n    immediate: !Z\n  });\n\n  return y(r.g, {\n    transform: _.transform,\n    \"aria-hidden\": E,\n    children: [tt(function (e, i, n, r) {\n      return t.createElement(B, v({\n        tickIndex: r,\n        format: F,\n        rotate: X,\n        textBaseline: G,\n        textAnchor: I,\n        animatedProps: e\n      }, i, j ? {\n        onClick: j\n      } : {}));\n    }), g(r.line, {\n      style: q.axis.domain.line,\n      x1: 0,\n      x2: _.lineX2,\n      y1: 0,\n      y2: _.lineY2\n    }), J]\n  });\n}),\n    O = {\n  ticksPosition: h.oneOf([\"before\", \"after\"]),\n  tickValues: h.oneOfType([h.number, h.arrayOf(h.oneOfType([h.number, h.string, h.instanceOf(Date)])), h.string]),\n  tickSize: h.number,\n  tickPadding: h.number,\n  tickRotation: h.number,\n  format: h.oneOfType([h.func, h.string]),\n  renderTick: h.func,\n  legend: h.node,\n  legendPosition: h.oneOf([\"start\", \"middle\", \"end\"]),\n  legendOffset: h.number,\n  ariaHidden: h.bool\n},\n    w = h.shape(O),\n    A = [\"top\", \"right\", \"bottom\", \"left\"],\n    X = e(function (t) {\n  var e = t.xScale,\n      i = t.yScale,\n      n = t.width,\n      r = t.height,\n      a = {\n    top: t.top,\n    right: t.right,\n    bottom: t.bottom,\n    left: t.left\n  };\n  return g(k, {\n    children: A.map(function (t) {\n      var o = a[t];\n      if (!o) return null;\n      var l = \"top\" === t || \"bottom\" === t;\n      return g(T, v({}, o, {\n        axis: l ? \"x\" : \"y\",\n        x: \"right\" === t ? n : 0,\n        y: \"bottom\" === t ? r : 0,\n        scale: l ? e : i,\n        length: l ? n : r,\n        ticksPosition: \"top\" === t || \"left\" === t ? \"before\" : \"after\"\n      }), t);\n    })\n  });\n}),\n    Y = e(function (t) {\n  var e = t.animatedProps,\n      i = s();\n  return g(r.line, v({}, e, i.grid.line));\n}),\n    W = e(function (t) {\n  var e = t.lines,\n      i = c(),\n      r = i.animate,\n      a = i.config,\n      l = o(e, {\n    keys: function (t) {\n      return t.key;\n    },\n    initial: function (t) {\n      return {\n        opacity: 1,\n        x1: t.x1,\n        x2: t.x2,\n        y1: t.y1,\n        y2: t.y2\n      };\n    },\n    from: function (t) {\n      return {\n        opacity: 0,\n        x1: t.x1,\n        x2: t.x2,\n        y1: t.y1,\n        y2: t.y2\n      };\n    },\n    enter: function (t) {\n      return {\n        opacity: 1,\n        x1: t.x1,\n        x2: t.x2,\n        y1: t.y1,\n        y2: t.y2\n      };\n    },\n    update: function (t) {\n      return {\n        opacity: 1,\n        x1: t.x1,\n        x2: t.x2,\n        y1: t.y1,\n        y2: t.y2\n      };\n    },\n    leave: {\n      opacity: 0\n    },\n    config: a,\n    immediate: !r\n  });\n  return g(\"g\", {\n    children: l(function (t, e) {\n      return n(Y, v({}, e, {\n        key: e.key,\n        animatedProps: t\n      }));\n    })\n  });\n}),\n    B = e(function (t) {\n  var e = t.width,\n      n = t.height,\n      r = t.xScale,\n      a = t.yScale,\n      o = t.xValues,\n      l = t.yValues,\n      s = i(function () {\n    return !!r && P({\n      width: e,\n      height: n,\n      scale: r,\n      axis: \"x\",\n      values: o\n    });\n  }, [r, o, e, n]),\n      c = i(function () {\n    return !!a && P({\n      width: e,\n      height: n,\n      scale: a,\n      axis: \"y\",\n      values: l\n    });\n  }, [n, e, a, l]);\n  return y(k, {\n    children: [s && g(W, {\n      lines: s\n    }), c && g(W, {\n      lines: c\n    })]\n  });\n}),\n    z = function (t, e) {\n  var i,\n      n = e.axis,\n      r = e.scale,\n      a = e.x,\n      o = void 0 === a ? 0 : a,\n      l = e.y,\n      s = void 0 === l ? 0 : l,\n      c = e.length,\n      x = e.ticksPosition,\n      u = e.tickValues,\n      d = e.tickSize,\n      m = void 0 === d ? 5 : d,\n      y = e.tickPadding,\n      g = void 0 === y ? 5 : y,\n      k = e.tickRotation,\n      h = void 0 === k ? 0 : k,\n      v = e.format,\n      b = e.legend,\n      P = e.legendPosition,\n      S = void 0 === P ? \"end\" : P,\n      T = e.legendOffset,\n      O = void 0 === T ? 0 : T,\n      w = e.theme,\n      A = p({\n    axis: n,\n    scale: r,\n    ticksPosition: x,\n    tickValues: u,\n    tickSize: m,\n    tickPadding: g,\n    tickRotation: h,\n    engine: \"canvas\"\n  }),\n      X = A.ticks,\n      Y = A.textAlign,\n      W = A.textBaseline;\n  t.save(), t.translate(o, s), t.textAlign = Y, t.textBaseline = W, t.font = (w.axis.ticks.text.fontWeight ? w.axis.ticks.text.fontWeight + \" \" : \"\") + w.axis.ticks.text.fontSize + \"px \" + w.axis.ticks.text.fontFamily, (null != (i = w.axis.domain.line.strokeWidth) ? i : 0) > 0 && (t.lineWidth = Number(w.axis.domain.line.strokeWidth), t.lineCap = \"square\", w.axis.domain.line.stroke && (t.strokeStyle = w.axis.domain.line.stroke), t.beginPath(), t.moveTo(0, 0), t.lineTo(\"x\" === n ? c : 0, \"x\" === n ? 0 : c), t.stroke());\n  var B = \"function\" == typeof v ? v : function (t) {\n    return \"\" + t;\n  };\n\n  if (X.forEach(function (e) {\n    var i;\n    (null != (i = w.axis.ticks.line.strokeWidth) ? i : 0) > 0 && (t.lineWidth = Number(w.axis.ticks.line.strokeWidth), t.lineCap = \"square\", w.axis.ticks.line.stroke && (t.strokeStyle = w.axis.ticks.line.stroke), t.beginPath(), t.moveTo(e.x, e.y), t.lineTo(e.x + e.lineX, e.y + e.lineY), t.stroke());\n    var n = B(e.value);\n    t.save(), t.translate(e.x + e.textX, e.y + e.textY), t.rotate(f(h)), w.axis.ticks.text.fill && (t.fillStyle = w.axis.ticks.text.fill), t.fillText(String(n), 0, 0), t.restore();\n  }), void 0 !== b) {\n    var z = 0,\n        V = 0,\n        C = 0,\n        D = \"center\";\n    \"y\" === n ? (C = -90, z = O, \"start\" === S ? (D = \"start\", V = c) : \"middle\" === S ? (D = \"center\", V = c / 2) : \"end\" === S && (D = \"end\")) : (V = O, \"start\" === S ? D = \"start\" : \"middle\" === S ? (D = \"center\", z = c / 2) : \"end\" === S && (D = \"end\", z = c)), t.translate(z, V), t.rotate(f(C)), t.font = (w.axis.legend.text.fontWeight ? w.axis.legend.text.fontWeight + \" \" : \"\") + w.axis.legend.text.fontSize + \"px \" + w.axis.legend.text.fontFamily, w.axis.legend.text.fill && (t.fillStyle = w.axis.legend.text.fill), t.textAlign = D, t.textBaseline = \"middle\", t.fillText(b, 0, 0);\n  }\n\n  t.restore();\n},\n    V = function (t, e) {\n  var i = e.xScale,\n      n = e.yScale,\n      r = e.width,\n      a = e.height,\n      o = e.top,\n      l = e.right,\n      s = e.bottom,\n      c = e.left,\n      f = e.theme,\n      x = {\n    top: o,\n    right: l,\n    bottom: s,\n    left: c\n  };\n  A.forEach(function (e) {\n    var o = x[e];\n    if (!o) return null;\n    var l = \"top\" === e || \"bottom\" === e,\n        s = \"top\" === e || \"left\" === e ? \"before\" : \"after\",\n        c = l ? i : n,\n        u = b(o.format, c);\n    z(t, v({}, o, {\n      axis: l ? \"x\" : \"y\",\n      x: \"right\" === e ? r : 0,\n      y: \"bottom\" === e ? a : 0,\n      scale: c,\n      format: u,\n      length: l ? r : a,\n      ticksPosition: s,\n      theme: f\n    }));\n  });\n},\n    C = function (t, e) {\n  var i = e.width,\n      n = e.height,\n      r = e.scale,\n      a = e.axis,\n      o = e.values;\n  P({\n    width: i,\n    height: n,\n    scale: r,\n    axis: a,\n    values: o\n  }).forEach(function (e) {\n    t.beginPath(), t.moveTo(e.x1, e.y1), t.lineTo(e.x2, e.y2), t.stroke();\n  });\n};\n\nexport { X as Axes, T as Axis, S as AxisTick, B as Grid, Y as GridLine, W as GridLines, w as axisPropType, O as axisPropTypes, A as positions, V as renderAxesToCanvas, z as renderAxisToCanvas, C as renderGridLinesToCanvas };","map":{"version":3,"mappings":"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","names":["computeCartesianTicks","translate","axis","scale","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","f","values","getScaleTicks","textProps","textPropsByEngine","position","centerScale","line","lineX","lineY","text","textX","textY","isRTL","document","dir","textAlign","align","center","textBaseline","baseline","d","x","y","top","bottom","left","right","ticks","map","value","key","Date","valueOf","getFormatter","format","type","formatter","timeFormat","d3Format","computeGridLines","width","height","_values","Array","isArray","undefined","lines","x1","x2","y1","y2","memoizedAxisTick","memo","_value","onClick","textAnchor","animatedProps","theme","useTheme","props","useMemo","style","opacity","cursor","event","_jsxs","animated","g","transform","_jsx","dominantBaseline","textTransform","memoizedAxis","u","length","P","O","A","renderTick","AxisTick","legend","legendPosition","V","D","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","useMotionConfig","animate","springConfig","config","useSpring","lineX2","lineY2","immediate","transition","useTransition","keys","tick","initial","from","enter","update","leave","transitionProps","_state","tickIndex","React","createElement","rotate","domain","axisPropTypes","PropTypes","oneOf","oneOfType","number","arrayOf","string","instanceOf","func","node","bool","axisPropType","shape","positions","Axes","xScale","yScale","axes","isXAxis","Axis","GridLine","grid","GridLines","_createElement","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","ctx","a","l","k","_format","T","save","font","fontWeight","fontSize","fontFamily","strokeWidth","lineWidth","Number","lineCap","stroke","strokeStyle","beginPath","moveTo","lineTo","forEach","degreesToRadians","fill","fillStyle","fillText","String","restore","renderAxesToCanvas","renderGridLinesToCanvas"],"sources":["/Users/jstanton/Desktop/Coding/react-admin-dashboard/node_modules/@nivo/bar/node_modules/@nivo/axes/src/compute.ts","/Users/jstanton/Desktop/Coding/react-admin-dashboard/node_modules/@nivo/bar/node_modules/@nivo/axes/src/components/AxisTick.tsx","/Users/jstanton/Desktop/Coding/react-admin-dashboard/node_modules/@nivo/bar/node_modules/@nivo/axes/src/components/Axis.tsx","/Users/jstanton/Desktop/Coding/react-admin-dashboard/node_modules/@nivo/bar/node_modules/@nivo/axes/src/props.ts","/Users/jstanton/Desktop/Coding/react-admin-dashboard/node_modules/@nivo/bar/node_modules/@nivo/axes/src/components/Axes.tsx","/Users/jstanton/Desktop/Coding/react-admin-dashboard/node_modules/@nivo/bar/node_modules/@nivo/axes/src/components/GridLine.tsx","/Users/jstanton/Desktop/Coding/react-admin-dashboard/node_modules/@nivo/bar/node_modules/@nivo/axes/src/components/GridLines.tsx","/Users/jstanton/Desktop/Coding/react-admin-dashboard/node_modules/@nivo/bar/node_modules/@nivo/axes/src/components/Grid.tsx","/Users/jstanton/Desktop/Coding/react-admin-dashboard/node_modules/@nivo/bar/node_modules/@nivo/axes/src/canvas.ts"],"sourcesContent":["import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map((value: Value) => ({\n        key: value instanceof Date ? `${value.valueOf()}` : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return d3Format(format) as unknown as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map((value: Value) => ({\n                  key: value instanceof Date ? `${value.valueOf()}` : `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map((value: Value) => ({\n                  key: value instanceof Date ? `${value.valueOf()}` : `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProps, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontWeight ? `${theme.axis.ticks.text.fontWeight} ` : ''}${\n        theme.axis.ticks.text.fontSize\n    }px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProps<X> | null\n        right?: CanvasAxisProps<Y> | null\n        bottom?: CanvasAxisProps<X> | null\n        left?: CanvasAxisProps<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProps<X> | undefined\n            : CanvasAxisProps<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n"]},"metadata":{},"sourceType":"module"}