{"ast":null,"code":"var _jsxFileName = \"/Users/jstanton/Coding/FieldDock/FieldDockMain/src/components/Mission Planner/map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\nimport axios from \"axios\";\n\n//-------------------------------------------------------------------------------------------------\n// styling for the maps container, the initial centering, and the search box that displays on the map\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  position: \"relative\",\n  width: \"100%\",\n  height: \"815px\"\n};\nconst initialCenter = {\n  lat: 38.6742,\n  lng: -122.4194\n};\nconst searchBoxStyles = {\n  position: \"absolute\",\n  top: \"10px\",\n  left: \"50%\",\n  transform: \"translateX(-50%)\",\n  background: \"white\",\n  border: \"1px solid black\",\n  padding: 10\n};\n//-------------------------------------------------------------------------------------------------\n//\n//\n//-------------------------------------------------------------------------------------------------\n// Logic for map where it passes the allowing of clicking on the map, markers appearing from this onClick action\n// and tracking the coordinates of what the user types in as their home location, so it can be displayed in the lat/long boxes\nconst MapComponent = _ref => {\n  _s();\n  let {\n    onMapClick,\n    markerPositions,\n    setHomeLat,\n    setHomeLng\n  } = _ref;\n  const [address, setAddress] = useState(\"\");\n  const [center, setCenter] = useState(initialCenter);\n  const [homeElevation, setHomeElevation] = useState(null); // New state for elevation\n\n  const geocodeAndElevation = async address => {\n    const geoResponse = await axios.get(\"https://maps.googleapis.com/maps/api/geocode/json\", {\n      params: {\n        address: address,\n        key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n      }\n    });\n    const coordinates = geoResponse.data.results[0].geometry.location;\n\n    // Now fetch elevation\n    const elevationResponse = await axios.get(`https://maps.googleapis.com/maps/api/elevation/json?locations=${coordinates.lat},${coordinates.lng}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`);\n    const elevation = elevationResponse.data.results[0].elevation;\n    setHomeElevation(elevation);\n    return coordinates;\n  };\n  //-------------------------------------------------------------------------------------------------\n  //\n  //\n  //\n  //-------------------------------------------------------------------------------------------------\n  // Updates these state variables when the home location changes.\n  // Modify the handleLocationSubmit function in the MapComponent component to look like this:\n  const handleLocationSubmit = async event => {\n    event.preventDefault();\n    const coordinates = await geocodeAndElevation(address);\n    setCenter(coordinates);\n    setHomeLat(coordinates.lat);\n    setHomeLng(coordinates.lng);\n  };\n  //-------------------------------------------------------------------------------------------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: center,\n        zoom: 10,\n        onClick: onMapClick,\n        children: markerPositions.map((position, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: position,\n          label: `${index + 1}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLocationSubmit,\n      style: searchBoxStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: address,\n        onChange: event => setAddress(event.target.value),\n        placeholder: \"Enter a location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          display: \"none\"\n        },\n        children: \"Go\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"KNe7YBueOVHQ8dZnSHQ09h1k8A8=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","GoogleMap","LoadScript","Marker","axios","jsxDEV","_jsxDEV","containerStyle","position","width","height","initialCenter","lat","lng","searchBoxStyles","top","left","transform","background","border","padding","MapComponent","_ref","_s","onMapClick","markerPositions","setHomeLat","setHomeLng","address","setAddress","center","setCenter","homeElevation","setHomeElevation","geocodeAndElevation","geoResponse","get","params","key","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","coordinates","data","results","geometry","location","elevationResponse","elevation","handleLocationSubmit","event","preventDefault","style","children","googleMapsApiKey","mapContainerStyle","zoom","onClick","map","index","label","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","display","_c","$RefreshReg$"],"sources":["/Users/jstanton/Coding/FieldDock/FieldDockMain/src/components/Mission Planner/map.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\nimport axios from \"axios\";\n\n//-------------------------------------------------------------------------------------------------\n// styling for the maps container, the initial centering, and the search box that displays on the map\nconst containerStyle = {\n  position: \"relative\",\n  width: \"100%\",\n  height: \"815px\",\n};\n\nconst initialCenter = {\n  lat: 38.6742,\n  lng: -122.4194,\n};\n\nconst searchBoxStyles = {\n  position: \"absolute\",\n  top: \"10px\",\n  left: \"50%\",\n  transform: \"translateX(-50%)\",\n  background: \"white\",\n  border: \"1px solid black\",\n  padding: 10,\n};\n//-------------------------------------------------------------------------------------------------\n//\n//\n//-------------------------------------------------------------------------------------------------\n// Logic for map where it passes the allowing of clicking on the map, markers appearing from this onClick action\n// and tracking the coordinates of what the user types in as their home location, so it can be displayed in the lat/long boxes\nconst MapComponent = ({\n  onMapClick,\n  markerPositions,\n  setHomeLat,\n  setHomeLng,\n}) => {\n  const [address, setAddress] = useState(\"\");\n  const [center, setCenter] = useState(initialCenter);\n  const [homeElevation, setHomeElevation] = useState(null); // New state for elevation\n\n  const geocodeAndElevation = async (address) => {\n    const geoResponse = await axios.get(\n      \"https://maps.googleapis.com/maps/api/geocode/json\",\n      {\n        params: {\n          address: address,\n          key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        },\n      }\n    );\n\n    const coordinates = geoResponse.data.results[0].geometry.location;\n\n    // Now fetch elevation\n    const elevationResponse = await axios.get(\n      `https://maps.googleapis.com/maps/api/elevation/json?locations=${coordinates.lat},${coordinates.lng}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`\n    );\n\n    const elevation = elevationResponse.data.results[0].elevation;\n    setHomeElevation(elevation);\n\n    return coordinates;\n  };\n  //-------------------------------------------------------------------------------------------------\n  //\n  //\n  //\n  //-------------------------------------------------------------------------------------------------\n  // Updates these state variables when the home location changes.\n  // Modify the handleLocationSubmit function in the MapComponent component to look like this:\n  const handleLocationSubmit = async (event) => {\n    event.preventDefault();\n\n    const coordinates = await geocodeAndElevation(address);\n\n    setCenter(coordinates);\n    setHomeLat(coordinates.lat);\n    setHomeLng(coordinates.lng);\n  };\n  //-------------------------------------------------------------------------------------------------\n  return (\n    <div style={containerStyle}>\n      <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}>\n        <GoogleMap\n          mapContainerStyle={containerStyle}\n          center={center}\n          zoom={10}\n          onClick={onMapClick}\n        >\n          {markerPositions.map((position, index) => (\n            <Marker key={index} position={position} label={`${index + 1}`} />\n          ))}\n        </GoogleMap>\n      </LoadScript>\n      <form onSubmit={handleLocationSubmit} style={searchBoxStyles}>\n        <input\n          type=\"text\"\n          value={address}\n          onChange={(event) => setAddress(event.target.value)}\n          placeholder=\"Enter a location\"\n        />\n        <button type=\"submit\" style={{ display: \"none\" }}>\n          Go\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}