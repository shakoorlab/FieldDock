{"ast":null,"code":"// import React from \"react\";\n// import StyledButton from \"../ButtonStyle\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n// import { createMission } from \"../../../../Missions/Mission Planning/Waypoint Configuration/Launch\";\n\n// function LaunchButton(data, ...props) {\n//   const navigate = useNavigate(); // Navigation hook from react-router-dom\n\n//   const handleLaunch = async () => {\n//     const missionString = createMission(data); // Assuming this function creates the mission data\n\n//     try {\n//       const response = await axios.post(\"http://localhost:3001/launch\", {\n//         missionData: missionString,\n//       });\n\n//       // Check the HTTP status code for potential server errors\n//       if (response.status !== 200) {\n//         console.error(\"Server returned an error:\", response.data.message);\n//         return; // Exit the function early since an error occurred\n//       }\n\n//       // Check the \"success\" flag within the response data\n//       if (response.data.success) {\n//         console.log(response.data.message); // Display the server's success message\n//         navigate(\"/live_stats\"); // Navigate only if publish was successful\n//       } else {\n//         console.error(\"Failed to publish the mission:\", response.data.message);\n//       }\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//       console.error(\"Error sending the mission to the server:\", error);\n//     }\n//   };\n\n//   const hoverStyles = {\n//     borderColor: \"#00e1b4\",\n//     color: \"orange\",\n//   };\n\n//   return (\n//     <StyledButton\n//       label=\"Launch\"\n//       onClick={handleLaunch}\n//       hoverStyles={hoverStyles}\n//       {...props}\n//     />\n//   );\n// }\n\n// export default LaunchButton;","map":{"version":3,"names":[],"sources":["/Users/jstanton/Coding/FieldDock/FieldDockMain/src/components/Tools/Buttons/Mission Planning/Launch/LaunchButton.jsx"],"sourcesContent":["// import React from \"react\";\n// import StyledButton from \"../ButtonStyle\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n// import { createMission } from \"../../../../Missions/Mission Planning/Waypoint Configuration/Launch\";\n\n// function LaunchButton(data, ...props) {\n//   const navigate = useNavigate(); // Navigation hook from react-router-dom\n\n//   const handleLaunch = async () => {\n//     const missionString = createMission(data); // Assuming this function creates the mission data\n\n//     try {\n//       const response = await axios.post(\"http://localhost:3001/launch\", {\n//         missionData: missionString,\n//       });\n\n//       // Check the HTTP status code for potential server errors\n//       if (response.status !== 200) {\n//         console.error(\"Server returned an error:\", response.data.message);\n//         return; // Exit the function early since an error occurred\n//       }\n\n//       // Check the \"success\" flag within the response data\n//       if (response.data.success) {\n//         console.log(response.data.message); // Display the server's success message\n//         navigate(\"/live_stats\"); // Navigate only if publish was successful\n//       } else {\n//         console.error(\"Failed to publish the mission:\", response.data.message);\n//       }\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//       console.error(\"Error sending the mission to the server:\", error);\n//     }\n//   };\n\n//   const hoverStyles = {\n//     borderColor: \"#00e1b4\",\n//     color: \"orange\",\n//   };\n\n//   return (\n//     <StyledButton\n//       label=\"Launch\"\n//       onClick={handleLaunch}\n//       hoverStyles={hoverStyles}\n//       {...props}\n//     />\n//   );\n// }\n\n// export default LaunchButton;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}