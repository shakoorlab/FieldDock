{"ast":null,"code":"var _jsxFileName = \"/Users/jstanton/Desktop/Coding/FieldDockMain/src/components/LineChart.jsx\",\n    _s = $RefreshSig$();\n\nimport { ResponsiveLine } from \"@nivo/line\";\nimport { useTheme } from \"@mui/material\";\nimport { tokens } from \"../theme\";\nimport { mockLineData as data } from \"../data/mockData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LineChart = _ref => {\n  _s();\n\n  let {\n    isCustomLineColors = false,\n    isDashboard = false\n  } = _ref;\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  return /*#__PURE__*/_jsxDEV(ResponsiveLine, {\n    data: data,\n    theme: {\n      axis: {\n        domain: {\n          line: {\n            stroke: colors.grey[100]\n          }\n        },\n        legend: {\n          text: {\n            fill: colors.grey[100]\n          }\n        },\n        ticks: {\n          line: {\n            stroke: colors.grey[100],\n            strokeWidth: 1\n          },\n          text: {\n            fill: colors.grey[100]\n          }\n        }\n      },\n      legends: {\n        text: {\n          fill: colors.grey[100]\n        }\n      },\n      tooltip: {\n        container: {\n          color: colors.primary[500]\n        }\n      }\n    },\n    colors: isDashboard ? {\n      datum: \"color\"\n    } : {\n      scheme: \"nivo\"\n    } // added\n    ,\n    margin: {\n      top: 50,\n      right: 110,\n      bottom: 50,\n      left: 60\n    },\n    xScale: {\n      type: \"point\"\n    },\n    yScale: {\n      type: \"linear\",\n      min: \"auto\",\n      max: \"auto\",\n      stacked: true,\n      reverse: false\n    },\n    yFormat: \" >-.2f\",\n    curve: \"catmullRom\",\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {\n      orient: \"bottom\",\n      tickSize: 0,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: isDashboard ? undefined : \"transportation\",\n      // added\n      legendOffset: 36,\n      legendPosition: \"middle\"\n    },\n    axisLeft: {\n      orient: \"left\",\n      tickValues: 5,\n      // added\n      tickSize: 3,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: isDashboard ? undefined : \"count\",\n      // added\n      legendOffset: -40,\n      legendPosition: \"middle\"\n    },\n    enableGridX: false,\n    enableGridY: false,\n    pointSize: 8,\n    pointColor: {\n      theme: \"background\"\n    },\n    pointBorderWidth: 2,\n    pointBorderColor: {\n      from: \"serieColor\"\n    },\n    pointLabelYOffset: -12,\n    useMesh: true,\n    legends: [{\n      anchor: \"bottom-right\",\n      direction: \"column\",\n      justify: false,\n      translateX: 100,\n      translateY: 0,\n      itemsSpacing: 0,\n      itemDirection: \"left-to-right\",\n      itemWidth: 80,\n      itemHeight: 20,\n      itemOpacity: 0.75,\n      symbolSize: 12,\n      symbolShape: \"circle\",\n      symbolBorderColor: \"rgba(0, 0, 0, .5)\",\n      effects: [{\n        on: \"hover\",\n        style: {\n          itemBackground: \"rgba(0, 0, 0, .03)\",\n          itemOpacity: 1\n        }\n      }]\n    }]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LineChart, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["ResponsiveLine","useTheme","tokens","mockLineData","data","LineChart","isCustomLineColors","isDashboard","theme","colors","palette","mode","axis","domain","line","stroke","grey","legend","text","fill","ticks","strokeWidth","legends","tooltip","container","color","primary","datum","scheme","top","right","bottom","left","type","min","max","stacked","reverse","orient","tickSize","tickPadding","tickRotation","undefined","legendOffset","legendPosition","tickValues","from","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground"],"sources":["/Users/jstanton/Desktop/Coding/FieldDockMain/src/components/LineChart.jsx"],"sourcesContent":["import { ResponsiveLine } from \"@nivo/line\";\nimport { useTheme } from \"@mui/material\";\nimport { tokens } from \"../theme\";\nimport { mockLineData as data } from \"../data/mockData\";\n\nconst LineChart = ({ isCustomLineColors = false, isDashboard = false }) => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n\n  return (\n    <ResponsiveLine\n      data={data}\n      theme={{\n        axis: {\n          domain: {\n            line: {\n              stroke: colors.grey[100],\n            },\n          },\n          legend: {\n            text: {\n              fill: colors.grey[100],\n            },\n          },\n          ticks: {\n            line: {\n              stroke: colors.grey[100],\n              strokeWidth: 1,\n            },\n            text: {\n              fill: colors.grey[100],\n            },\n          },\n        },\n        legends: {\n          text: {\n            fill: colors.grey[100],\n          },\n        },\n        tooltip: {\n          container: {\n            color: colors.primary[500],\n          },\n        },\n      }}\n      colors={isDashboard ? { datum: \"color\" } : { scheme: \"nivo\" }} // added\n      margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n      xScale={{ type: \"point\" }}\n      yScale={{\n        type: \"linear\",\n        min: \"auto\",\n        max: \"auto\",\n        stacked: true,\n        reverse: false,\n      }}\n      yFormat=\" >-.2f\"\n      curve=\"catmullRom\"\n      axisTop={null}\n      axisRight={null}\n      axisBottom={{\n        orient: \"bottom\",\n        tickSize: 0,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: isDashboard ? undefined : \"transportation\", // added\n        legendOffset: 36,\n        legendPosition: \"middle\",\n      }}\n      axisLeft={{\n        orient: \"left\",\n        tickValues: 5, // added\n        tickSize: 3,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: isDashboard ? undefined : \"count\", // added\n        legendOffset: -40,\n        legendPosition: \"middle\",\n      }}\n      enableGridX={false}\n      enableGridY={false}\n      pointSize={8}\n      pointColor={{ theme: \"background\" }}\n      pointBorderWidth={2}\n      pointBorderColor={{ from: \"serieColor\" }}\n      pointLabelYOffset={-12}\n      useMesh={true}\n      legends={[\n        {\n          anchor: \"bottom-right\",\n          direction: \"column\",\n          justify: false,\n          translateX: 100,\n          translateY: 0,\n          itemsSpacing: 0,\n          itemDirection: \"left-to-right\",\n          itemWidth: 80,\n          itemHeight: 20,\n          itemOpacity: 0.75,\n          symbolSize: 12,\n          symbolShape: \"circle\",\n          symbolBorderColor: \"rgba(0, 0, 0, .5)\",\n          effects: [\n            {\n              on: \"hover\",\n              style: {\n                itemBackground: \"rgba(0, 0, 0, .03)\",\n                itemOpacity: 1,\n              },\n            },\n          ],\n        },\n      ]}\n    />\n  );\n};\n\nexport default LineChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}