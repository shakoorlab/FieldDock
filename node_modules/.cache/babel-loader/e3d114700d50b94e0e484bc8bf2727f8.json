{"ast":null,"code":"var _jsxFileName = \"/Users/jstanton/Desktop/react-admin-dashboard/src/components/GeographyChart.jsx\",\n    _s = $RefreshSig$();\n\nimport { useTheme } from \"@mui/material\";\nimport { ResponsiveChoropleth } from \"@nivo/geo\";\nimport { geoFeatures } from \"../data/mockGeoFeatures\";\nimport { tokens } from \"../theme\";\nimport { mockGeographyData as data } from \"../data/mockData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GeographyChart = _ref => {\n  _s();\n\n  let {\n    isDashboard = false\n  } = _ref;\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  return /*#__PURE__*/_jsxDEV(ResponsiveChoropleth, {\n    data: data,\n    theme: {\n      axis: {\n        domain: {\n          line: {\n            stroke: colors.grey[100]\n          }\n        },\n        legend: {\n          text: {\n            fill: colors.grey[100]\n          }\n        },\n        ticks: {\n          line: {\n            stroke: colors.grey[100],\n            strokeWidth: 1\n          },\n          text: {\n            fill: colors.grey[100]\n          }\n        }\n      },\n      legends: {\n        text: {\n          fill: colors.grey[100]\n        }\n      }\n    },\n    features: geoFeatures.features,\n    margin: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n    domain: [0, 1000000],\n    unknownColor: \"#666666\",\n    label: \"properties.name\",\n    valueFormat: \".2s\",\n    projectionScale: isDashboard ? 40 : 150,\n    projectionTranslation: isDashboard ? [0.49, 0.6] : [0.5, 0.5],\n    projectionRotation: [0, 0, 0],\n    borderWidth: 1.5,\n    borderColor: \"#ffffff\",\n    legends: !isDashboard ? [{\n      anchor: \"bottom-left\",\n      direction: \"column\",\n      justify: true,\n      translateX: 20,\n      translateY: -100,\n      itemsSpacing: 0,\n      itemWidth: 94,\n      itemHeight: 18,\n      itemDirection: \"left-to-right\",\n      itemTextColor: colors.grey[100],\n      itemOpacity: 0.85,\n      symbolSize: 18,\n      effects: [{\n        on: \"hover\",\n        style: {\n          itemTextColor: \"#ffffff\",\n          itemOpacity: 1\n        }\n      }]\n    }] : undefined\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GeographyChart, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = GeographyChart;\nexport default GeographyChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeographyChart\");","map":{"version":3,"names":["useTheme","ResponsiveChoropleth","geoFeatures","tokens","mockGeographyData","data","GeographyChart","isDashboard","theme","colors","palette","mode","axis","domain","line","stroke","grey","legend","text","fill","ticks","strokeWidth","legends","features","top","right","bottom","left","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemTextColor","itemOpacity","symbolSize","effects","on","style","undefined"],"sources":["/Users/jstanton/Desktop/react-admin-dashboard/src/components/GeographyChart.jsx"],"sourcesContent":["import { useTheme } from \"@mui/material\";\nimport { ResponsiveChoropleth } from \"@nivo/geo\";\nimport { geoFeatures } from \"../data/mockGeoFeatures\";\nimport { tokens } from \"../theme\";\nimport { mockGeographyData as data } from \"../data/mockData\";\n\nconst GeographyChart = ({ isDashboard = false }) => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  return (\n    <ResponsiveChoropleth\n      data={data}\n      theme={{\n        axis: {\n          domain: {\n            line: {\n              stroke: colors.grey[100],\n            },\n          },\n          legend: {\n            text: {\n              fill: colors.grey[100],\n            },\n          },\n          ticks: {\n            line: {\n              stroke: colors.grey[100],\n              strokeWidth: 1,\n            },\n            text: {\n              fill: colors.grey[100],\n            },\n          },\n        },\n        legends: {\n          text: {\n            fill: colors.grey[100],\n          },\n        },\n      }}\n      features={geoFeatures.features}\n      margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\n      domain={[0, 1000000]}\n      unknownColor=\"#666666\"\n      label=\"properties.name\"\n      valueFormat=\".2s\"\n      projectionScale={isDashboard ? 40 : 150}\n      projectionTranslation={isDashboard ? [0.49, 0.6] : [0.5, 0.5]}\n      projectionRotation={[0, 0, 0]}\n      borderWidth={1.5}\n      borderColor=\"#ffffff\"\n      legends={\n        !isDashboard\n          ? [\n              {\n                anchor: \"bottom-left\",\n                direction: \"column\",\n                justify: true,\n                translateX: 20,\n                translateY: -100,\n                itemsSpacing: 0,\n                itemWidth: 94,\n                itemHeight: 18,\n                itemDirection: \"left-to-right\",\n                itemTextColor: colors.grey[100],\n                itemOpacity: 0.85,\n                symbolSize: 18,\n                effects: [\n                  {\n                    on: \"hover\",\n                    style: {\n                      itemTextColor: \"#ffffff\",\n                      itemOpacity: 1,\n                    },\n                  },\n                ],\n              },\n            ]\n          : undefined\n      }\n    />\n  );\n};\n\nexport default GeographyChart;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,eAAzB;AACA,SAASC,oBAAT,QAAqC,WAArC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,iBAAiB,IAAIC,IAA9B,QAA0C,kBAA1C;;;AAEA,MAAMC,cAAc,GAAG,QAA6B;EAAA;;EAAA,IAA5B;IAAEC,WAAW,GAAG;EAAhB,CAA4B;EAClD,MAAMC,KAAK,GAAGR,QAAQ,EAAtB;EACA,MAAMS,MAAM,GAAGN,MAAM,CAACK,KAAK,CAACE,OAAN,CAAcC,IAAf,CAArB;EACA,oBACE,QAAC,oBAAD;IACE,IAAI,EAAEN,IADR;IAEE,KAAK,EAAE;MACLO,IAAI,EAAE;QACJC,MAAM,EAAE;UACNC,IAAI,EAAE;YACJC,MAAM,EAAEN,MAAM,CAACO,IAAP,CAAY,GAAZ;UADJ;QADA,CADJ;QAMJC,MAAM,EAAE;UACNC,IAAI,EAAE;YACJC,IAAI,EAAEV,MAAM,CAACO,IAAP,CAAY,GAAZ;UADF;QADA,CANJ;QAWJI,KAAK,EAAE;UACLN,IAAI,EAAE;YACJC,MAAM,EAAEN,MAAM,CAACO,IAAP,CAAY,GAAZ,CADJ;YAEJK,WAAW,EAAE;UAFT,CADD;UAKLH,IAAI,EAAE;YACJC,IAAI,EAAEV,MAAM,CAACO,IAAP,CAAY,GAAZ;UADF;QALD;MAXH,CADD;MAsBLM,OAAO,EAAE;QACPJ,IAAI,EAAE;UACJC,IAAI,EAAEV,MAAM,CAACO,IAAP,CAAY,GAAZ;QADF;MADC;IAtBJ,CAFT;IA8BE,QAAQ,EAAEd,WAAW,CAACqB,QA9BxB;IA+BE,MAAM,EAAE;MAAEC,GAAG,EAAE,CAAP;MAAUC,KAAK,EAAE,CAAjB;MAAoBC,MAAM,EAAE,CAA5B;MAA+BC,IAAI,EAAE;IAArC,CA/BV;IAgCE,MAAM,EAAE,CAAC,CAAD,EAAI,OAAJ,CAhCV;IAiCE,YAAY,EAAC,SAjCf;IAkCE,KAAK,EAAC,iBAlCR;IAmCE,WAAW,EAAC,KAnCd;IAoCE,eAAe,EAAEpB,WAAW,GAAG,EAAH,GAAQ,GApCtC;IAqCE,qBAAqB,EAAEA,WAAW,GAAG,CAAC,IAAD,EAAO,GAAP,CAAH,GAAiB,CAAC,GAAD,EAAM,GAAN,CArCrD;IAsCE,kBAAkB,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAtCtB;IAuCE,WAAW,EAAE,GAvCf;IAwCE,WAAW,EAAC,SAxCd;IAyCE,OAAO,EACL,CAACA,WAAD,GACI,CACE;MACEqB,MAAM,EAAE,aADV;MAEEC,SAAS,EAAE,QAFb;MAGEC,OAAO,EAAE,IAHX;MAIEC,UAAU,EAAE,EAJd;MAKEC,UAAU,EAAE,CAAC,GALf;MAMEC,YAAY,EAAE,CANhB;MAOEC,SAAS,EAAE,EAPb;MAQEC,UAAU,EAAE,EARd;MASEC,aAAa,EAAE,eATjB;MAUEC,aAAa,EAAE5B,MAAM,CAACO,IAAP,CAAY,GAAZ,CAVjB;MAWEsB,WAAW,EAAE,IAXf;MAYEC,UAAU,EAAE,EAZd;MAaEC,OAAO,EAAE,CACP;QACEC,EAAE,EAAE,OADN;QAEEC,KAAK,EAAE;UACLL,aAAa,EAAE,SADV;UAELC,WAAW,EAAE;QAFR;MAFT,CADO;IAbX,CADF,CADJ,GA0BIK;EApER;IAAA;IAAA;IAAA;EAAA,QADF;AAyED,CA5ED;;GAAMrC,c;UACUN,Q;;;KADVM,c;AA8EN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}