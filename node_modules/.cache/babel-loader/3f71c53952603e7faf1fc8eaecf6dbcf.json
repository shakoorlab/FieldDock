{"ast":null,"code":"var _jsxFileName = \"/Users/jstanton/Coding/FieldDock/FieldDockMain/src/components/Missions/The Live Stats/Breadcrumb Elements/Status/status.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box } from \"@mui/material\";\nimport mqtt from \"mqtt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Status = () => {\n  _s();\n  const [messages, setMessages] = useState([]); // Store MQTT messages in state\n\n  useEffect(() => {\n    // Create an MQTT client and connect to your broker\n    const client = mqtt.connect(\"ws://3.145.131.67:9001\");\n\n    // Subscribe to the \"drone/status\" topic\n    client.subscribe(\"drone/status\");\n\n    // Handle incoming MQTT messages\n    client.on(\"message\", (topic, message) => {\n      // Update the messages state with the new message\n      setMessages(prevMessages => [...prevMessages, message.toString()]);\n    });\n\n    // Clean up the MQTT connection when the component unmounts\n    return () => {\n      client.end();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        borderTop: \"1px solid #f59331\",\n        width: \"80%\",\n        height: \"500px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n        marginBottom: \"15px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          position: \"absolute\",\n          transform: \"translate(-1%, -60%)\",\n          backgroundColor: \"#181818\",\n          padding: \"0 7px\",\n          zIndex: 1,\n          fontSize: \"25px\"\n        },\n        children: \"System Controllerss\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"40px\",\n          color: \"white\"\n        },\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Status, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = Status;\nexport default Status;\nvar _c;\n$RefreshReg$(_c, \"Status\");","map":{"version":3,"names":["React","useState","useEffect","Box","mqtt","jsxDEV","_jsxDEV","Fragment","_Fragment","Status","_s","messages","setMessages","client","connect","subscribe","on","topic","message","prevMessages","toString","end","children","style","borderTop","width","height","display","justifyContent","alignItems","marginBottom","position","transform","backgroundColor","padding","zIndex","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","color","map","index","_c","$RefreshReg$"],"sources":["/Users/jstanton/Coding/FieldDock/FieldDockMain/src/components/Missions/The Live Stats/Breadcrumb Elements/Status/status.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Box } from \"@mui/material\";\nimport mqtt from \"mqtt\";\n\nconst Status = () => {\n  const [messages, setMessages] = useState([]); // Store MQTT messages in state\n\n  useEffect(() => {\n    // Create an MQTT client and connect to your broker\n    const client = mqtt.connect(\"ws://3.145.131.67:9001\");\n\n    // Subscribe to the \"drone/status\" topic\n    client.subscribe(\"drone/status\");\n\n    // Handle incoming MQTT messages\n    client.on(\"message\", (topic, message) => {\n      // Update the messages state with the new message\n      setMessages((prevMessages) => [...prevMessages, message.toString()]);\n    });\n\n    // Clean up the MQTT connection when the component unmounts\n    return () => {\n      client.end();\n    };\n  }, []);\n\n  return (\n    <>\n      <Box\n        style={{\n          borderTop: \"1px solid #f59331\",\n          width: \"80%\",\n          height: \"500px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"flex-start\",\n          marginBottom: \"15px\",\n        }}\n      >\n        <Box\n          style={{\n            position: \"absolute\",\n            transform: \"translate(-1%, -60%)\",\n            backgroundColor: \"#181818\",\n            padding: \"0 7px\",\n            zIndex: 1,\n            fontSize: \"25px\",\n          }}\n        >\n          System Controllerss\n        </Box>\n        <div\n          style={{\n            marginTop: \"40px\",\n            color: \"white\",\n          }}\n        >\n          {messages.map((message, index) => (\n            <p key={index}>{message}</p>\n          ))}\n        </div>\n      </Box>\n    </>\n  );\n};\n\nexport default Status;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,eAAe;AACnC,OAAOC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,MAAM,GAAGT,IAAI,CAACU,OAAO,CAAC,wBAAwB,CAAC;;IAErD;IACAD,MAAM,CAACE,SAAS,CAAC,cAAc,CAAC;;IAEhC;IACAF,MAAM,CAACG,EAAE,CAAC,SAAS,EAAE,CAACC,KAAK,EAAEC,OAAO,KAAK;MACvC;MACAN,WAAW,CAAEO,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,OAAO,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAC;IACtE,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXP,MAAM,CAACQ,GAAG,CAAC,CAAC;IACd,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACEhB,OAAA,CAACH,GAAG;MACFoB,KAAK,EAAE;QACLC,SAAS,EAAE,mBAAmB;QAC9BC,KAAK,EAAE,KAAK;QACZC,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE,MAAM;QACfC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE,YAAY;QACxBC,YAAY,EAAE;MAChB,CAAE;MAAAR,QAAA,gBAEFhB,OAAA,CAACH,GAAG;QACFoB,KAAK,EAAE;UACLQ,QAAQ,EAAE,UAAU;UACpBC,SAAS,EAAE,sBAAsB;UACjCC,eAAe,EAAE,SAAS;UAC1BC,OAAO,EAAE,OAAO;UAChBC,MAAM,EAAE,CAAC;UACTC,QAAQ,EAAE;QACZ,CAAE;QAAAd,QAAA,EACH;MAED;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNlC,OAAA;QACEiB,KAAK,EAAE;UACLkB,SAAS,EAAE,MAAM;UACjBC,KAAK,EAAE;QACT,CAAE;QAAApB,QAAA,EAEDX,QAAQ,CAACgC,GAAG,CAAC,CAACzB,OAAO,EAAE0B,KAAK,kBAC3BtC,OAAA;UAAAgB,QAAA,EAAgBJ;QAAO,GAAf0B,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAC5B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP,CAAC;AAAC9B,EAAA,CA5DID,MAAM;AAAAoC,EAAA,GAANpC,MAAM;AA8DZ,eAAeA,MAAM;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}