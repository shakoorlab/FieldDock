{"ast":null,"code":"var __extends = this && this.t || function () {\n  var extendStatics = function (n, t) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (n, t) {\n      n.__proto__ = t;\n    } || function (n, t) {\n      for (var e in t) if (Object.prototype.hasOwnProperty.call(t, e)) n[e] = t[e];\n    };\n    return extendStatics(n, t);\n  };\n  return function (n, t) {\n    if (typeof t !== \"function\" && t !== null) throw new TypeError(\"Class extends value \" + String(t) + \" is not a constructor or null\");\n    extendStatics(n, t);\n    function __() {\n      this.constructor = n;\n    }\n    n.prototype = t === null ? Object.create(t) : (__.prototype = t.prototype, new __());\n  };\n}();\nimport { Container } from \"../../ContainerBase\";\nvar SequentialContainer = function (n) {\n  __extends(SequentialContainer, n);\n  function SequentialContainer() {\n    return n !== null && n.apply(this, arguments) || this;\n  }\n  return SequentialContainer;\n}(Container);\nexport default SequentialContainer;","map":{"version":3,"names":["__extends","t","extendStatics","n","Object","setPrototypeOf","__proto__","Array","e","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","Container","SequentialContainer","apply","arguments"],"sources":["/Users/jstanton/Coding/FieldDock/FieldDockMain/node_modules/js-sdsl/dist/esm/container/SequentialContainer/Base/container/SequentialContainer/Base/index.js","/Users/jstanton/Coding/FieldDock/FieldDockMain/node_modules/js-sdsl/dist/esm/container/src/container/SequentialContainer/Base/index.ts"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from \"../../ContainerBase\";\nvar SequentialContainer = /** @class */ (function (_super) {\n    __extends(SequentialContainer, _super);\n    function SequentialContainer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return SequentialContainer;\n}(Container));\nexport default SequentialContainer;\n","import { Container } from '@/container/ContainerBase';\n\nabstract class SequentialContainer<T> extends Container<T> {\n  /**\n   * @description Push the element to the back.\n   * @param element - The element you want to push.\n   * @returns The size of container after pushing.\n   */\n  abstract pushBack(element: T): number;\n  /**\n   * @description Removes the last element.\n   * @returns The element you popped.\n   */\n  abstract popBack(): T | undefined;\n  /**\n   * @description Sets element by position.\n   * @param pos - The position you want to change.\n   * @param element - The element's value you want to update.\n   * @example\n   * container.setElementByPos(-1, 1); // throw a RangeError\n   */\n  abstract setElementByPos(pos: number, element: T): void;\n  /**\n   * @description Removes the elements of the specified value.\n   * @param value - The value you want to remove.\n   * @returns The size of container after erasing.\n   * @example\n   * container.eraseElementByValue(-1);\n   */\n  abstract eraseElementByValue(value: T): number;\n  /**\n   * @description Insert several elements after the specified position.\n   * @param pos - The position you want to insert.\n   * @param element - The element you want to insert.\n   * @param num - The number of elements you want to insert (default 1).\n   * @returns The size of container after inserting.\n   * @example\n   * const container = new Vector([1, 2, 3]);\n   * container.insert(1, 4);  // [1, 4, 2, 3]\n   * container.insert(1, 5, 3); // [1, 5, 5, 5, 4, 2, 3]\n   */\n  abstract insert(pos: number, element: T, num?: number): number;\n  /**\n   * @description Reverses the container.\n   * @example\n   * const container = new Vector([1, 2, 3]);\n   * container.reverse(); // [3, 2, 1]\n   */\n  abstract reverse(): void;\n  /**\n   * @description Removes the duplication of elements in the container.\n   * @returns The size of container after inserting.\n   * @example\n   * const container = new Vector([1, 1, 3, 2, 2, 5, 5, 2]);\n   * container.unique(); // [1, 3, 2, 5, 2]\n   */\n  abstract unique(): number;\n  /**\n   * @description Sort the container.\n   * @param cmp - Comparison function to sort.\n   * @example\n   * const container = new Vector([3, 1, 10]);\n   * container.sort();  // [1, 10, 3]\n   * container.sort((x, y) => x - y); // [1, 3, 10]\n   */\n  abstract sort(cmp?: (x: T, y: T) => number): void;\n}\n\nexport default SequentialContainer;\n"],"mappings":"AAAA,IAAIA,SAAA,GAAa,QAAQ,KAAKC,CAAA,IAAe;EACzC,IAAIC,aAAA,GAAgB,SAAAA,CAAUC,CAAA,EAAGF,CAAA;IAC7BC,aAAA,GAAgBE,MAAA,CAAOC,cAAA,IAClB;MAAEC,SAAA,EAAW;iBAAgBC,KAAA,IAAS,UAAUJ,CAAA,EAAGF,CAAA;MAAKE,CAAA,CAAEG,SAAA,GAAYL,CAAA;IAAG,KAC1E,UAAUE,CAAA,EAAGF,CAAA;MAAK,KAAK,IAAIO,CAAA,IAAKP,CAAA,EAAG,IAAIG,MAAA,CAAOK,SAAA,CAAUC,cAAA,CAAeC,IAAA,CAAKV,CAAA,EAAGO,CAAA,GAAIL,CAAA,CAAEK,CAAA,IAAKP,CAAA,CAAEO,CAAA;IAAI;IACpG,OAAON,aAAA,CAAcC,CAAA,EAAGF,CAAA;EAC5B;EACA,OAAO,UAAUE,CAAA,EAAGF,CAAA;IAChB,WAAWA,CAAA,KAAM,cAAcA,CAAA,KAAM,MACjC,MAAM,IAAIW,SAAA,CAAU,yBAAyBC,MAAA,CAAOZ,CAAA,IAAK;IAC7DC,aAAA,CAAcC,CAAA,EAAGF,CAAA;IACjB,SAASa,GAAA;MAAO,KAAKC,WAAA,GAAcZ,CAAA;IAAG;IACtCA,CAAA,CAAEM,SAAA,GAAYR,CAAA,KAAM,OAAOG,MAAA,CAAOY,MAAA,CAAOf,CAAA,KAAMa,EAAA,CAAGL,SAAA,GAAYR,CAAA,CAAEQ,SAAA,EAAW,IAAIK,EAAA;EACnF;AACJ,CAd6C;SCApCG,SAAA,QAAW;AAEpB,IAAAC,mBAAA,aAAAf,CAAA;EAA8CH,SAAA,CAAAkB,mBAAA,EAAAf,CAAA;EAA9C,SAAAe,oBAAA;IDiBQ,OAAOf,CAAA,KAAW,QAAQA,CAAA,CAAOgB,KAAA,CAAM,MAAMC,SAAA,KAAc;EC+CnE;EAAA,OAAAF,mBAAA;AAAA,CAhEA,CAA8CD,SAAA;eAkE/BC,mBAAA"},"metadata":{},"sourceType":"module"}