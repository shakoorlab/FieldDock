{"ast":null,"code":"import { isValidElement as t, useMemo as n, createElement as i } from \"react\";\nimport o from \"lodash/omit\";\nimport e from \"lodash/isNumber\";\nimport a from \"lodash/filter\";\nimport { absoluteAngleDegrees as r, radiansToDegrees as s, positionFromAngle as l, degreesToRadians as u, useTheme as h, useMotionConfig as d, useAnimatedPath as c } from \"@nivo/core\";\nimport { useSpring as f, animated as y } from \"@react-spring/web\";\nimport { jsxs as x, Fragment as m, jsx as p } from \"react/jsx-runtime\";\n\nfunction g() {\n  return g = Object.assign || function (t) {\n    for (var n = 1; n < arguments.length; n++) {\n      var i = arguments[n];\n\n      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (t[o] = i[o]);\n    }\n\n    return t;\n  }, g.apply(this, arguments);\n}\n\nvar k = {\n  dotSize: 4,\n  noteWidth: 120,\n  noteTextOffset: 8,\n  animate: !0,\n  motionStiffness: 90,\n  motionDamping: 13\n},\n    W = function (n) {\n  var i = typeof n;\n  return t(n) || \"string\" === i || \"function\" === i || \"object\" === i;\n},\n    v = function (t) {\n  var n = typeof t;\n  return \"string\" === n || \"function\" === n;\n},\n    b = function (t) {\n  return \"circle\" === t.type;\n},\n    w = function (t) {\n  return \"dot\" === t.type;\n},\n    z = function (t) {\n  return \"rect\" === t.type;\n},\n    P = function (t) {\n  var n = t.data,\n      i = t.annotations,\n      e = t.getPosition,\n      r = t.getDimensions;\n  return i.reduce(function (t, i) {\n    var s = i.offset || 0;\n    return [].concat(t, a(n, i.match).map(function (t) {\n      var n = e(t),\n          a = r(t);\n      return (b(i) || z(i)) && (a.size = a.size + 2 * s, a.width = a.width + 2 * s, a.height = a.height + 2 * s), g({}, o(i, [\"match\", \"offset\"]), n, a, {\n        size: i.size || a.size,\n        datum: t\n      });\n    }));\n  }, []);\n},\n    S = function (t, n, i, o) {\n  var e = Math.atan2(o - n, i - t);\n  return r(s(e));\n},\n    C = function (t) {\n  var n,\n      i,\n      o = t.x,\n      a = t.y,\n      r = t.noteX,\n      s = t.noteY,\n      h = t.noteWidth,\n      d = void 0 === h ? k.noteWidth : h,\n      c = t.noteTextOffset,\n      f = void 0 === c ? k.noteTextOffset : c;\n  if (e(r)) n = o + r;else {\n    if (void 0 === r.abs) throw new Error(\"noteX should be either a number or an object containing an 'abs' property\");\n    n = r.abs;\n  }\n  if (e(s)) i = a + s;else {\n    if (void 0 === s.abs) throw new Error(\"noteY should be either a number or an object containing an 'abs' property\");\n    i = s.abs;\n  }\n  var y = o,\n      x = a,\n      m = S(o, a, n, i);\n\n  if (b(t)) {\n    var p = l(u(m), t.size / 2);\n    y += p.x, x += p.y;\n  }\n\n  if (z(t)) {\n    var g = Math.round((m + 90) / 45) % 8;\n    0 === g && (x -= t.height / 2), 1 === g && (y += t.width / 2, x -= t.height / 2), 2 === g && (y += t.width / 2), 3 === g && (y += t.width / 2, x += t.height / 2), 4 === g && (x += t.height / 2), 5 === g && (y -= t.width / 2, x += t.height / 2), 6 === g && (y -= t.width / 2), 7 === g && (y -= t.width / 2, x -= t.height / 2);\n  }\n\n  var W = n,\n      v = n;\n  return (m + 90) % 360 > 180 ? (W -= d, v -= d) : v += d, {\n    points: [[y, x], [n, i], [v, i]],\n    text: [W, i - f],\n    angle: m + 90\n  };\n},\n    O = function (t) {\n  var i = t.data,\n      o = t.annotations,\n      e = t.getPosition,\n      a = t.getDimensions;\n  return n(function () {\n    return P({\n      data: i,\n      annotations: o,\n      getPosition: e,\n      getDimensions: a\n    });\n  }, [i, o, e, a]);\n},\n    j = function (t) {\n  var i = t.annotations;\n  return n(function () {\n    return i.map(function (t) {\n      return g({}, t, {\n        computed: C(g({}, t))\n      });\n    });\n  }, [i]);\n},\n    M = function (t) {\n  return n(function () {\n    return C(t);\n  }, [t]);\n},\n    T = function (t) {\n  var n = t.datum,\n      e = t.x,\n      a = t.y,\n      r = t.note,\n      s = h(),\n      l = d(),\n      u = l.animate,\n      c = l.config,\n      k = f({\n    x: e,\n    y: a,\n    config: c,\n    immediate: !u\n  });\n  return \"function\" == typeof r ? i(r, {\n    x: e,\n    y: a,\n    datum: n\n  }) : x(m, {\n    children: [s.annotations.text.outlineWidth > 0 && p(y.text, {\n      x: k.x,\n      y: k.y,\n      style: g({}, s.annotations.text, {\n        strokeLinejoin: \"round\",\n        strokeWidth: 2 * s.annotations.text.outlineWidth,\n        stroke: s.annotations.text.outlineColor\n      }),\n      children: r\n    }), p(y.text, {\n      x: k.x,\n      y: k.y,\n      style: o(s.annotations.text, [\"outlineWidth\", \"outlineColor\"]),\n      children: r\n    })]\n  });\n},\n    E = function (t) {\n  var i = t.points,\n      o = t.isOutline,\n      e = void 0 !== o && o,\n      a = h(),\n      r = n(function () {\n    var t = i[0];\n    return i.slice(1).reduce(function (t, n) {\n      return t + \" L\" + n[0] + \",\" + n[1];\n    }, \"M\" + t[0] + \",\" + t[1]);\n  }, [i]),\n      s = c(r);\n  if (e && a.annotations.link.outlineWidth <= 0) return null;\n  var l = g({}, a.annotations.link);\n  return e && (l.strokeLinecap = \"square\", l.strokeWidth = a.annotations.link.strokeWidth + 2 * a.annotations.link.outlineWidth, l.stroke = a.annotations.link.outlineColor, l.opacity = a.annotations.link.outlineOpacity), p(y.path, {\n    fill: \"none\",\n    d: s,\n    style: l\n  });\n},\n    D = function (t) {\n  var n = t.x,\n      i = t.y,\n      o = t.size,\n      e = h(),\n      a = d(),\n      r = a.animate,\n      s = a.config,\n      l = f({\n    x: n,\n    y: i,\n    radius: o / 2,\n    config: s,\n    immediate: !r\n  });\n  return x(m, {\n    children: [e.annotations.outline.outlineWidth > 0 && p(y.circle, {\n      cx: l.x,\n      cy: l.y,\n      r: l.radius,\n      style: g({}, e.annotations.outline, {\n        fill: \"none\",\n        strokeWidth: e.annotations.outline.strokeWidth + 2 * e.annotations.outline.outlineWidth,\n        stroke: e.annotations.outline.outlineColor,\n        opacity: e.annotations.outline.outlineOpacity\n      })\n    }), p(y.circle, {\n      cx: l.x,\n      cy: l.y,\n      r: l.radius,\n      style: e.annotations.outline\n    })]\n  });\n},\n    I = function (t) {\n  var n = t.x,\n      i = t.y,\n      o = t.size,\n      e = void 0 === o ? k.dotSize : o,\n      a = h(),\n      r = d(),\n      s = r.animate,\n      l = r.config,\n      u = f({\n    x: n,\n    y: i,\n    radius: e / 2,\n    config: l,\n    immediate: !s\n  });\n  return x(m, {\n    children: [a.annotations.outline.outlineWidth > 0 && p(y.circle, {\n      cx: u.x,\n      cy: u.y,\n      r: u.radius,\n      style: g({}, a.annotations.outline, {\n        fill: \"none\",\n        strokeWidth: 2 * a.annotations.outline.outlineWidth,\n        stroke: a.annotations.outline.outlineColor,\n        opacity: a.annotations.outline.outlineOpacity\n      })\n    }), p(y.circle, {\n      cx: u.x,\n      cy: u.y,\n      r: u.radius,\n      style: a.annotations.symbol\n    })]\n  });\n},\n    L = function (t) {\n  var n = t.x,\n      i = t.y,\n      o = t.width,\n      e = t.height,\n      a = t.borderRadius,\n      r = void 0 === a ? 6 : a,\n      s = h(),\n      l = d(),\n      u = l.animate,\n      c = l.config,\n      k = f({\n    x: n - o / 2,\n    y: i - e / 2,\n    width: o,\n    height: e,\n    config: c,\n    immediate: !u\n  });\n  return x(m, {\n    children: [s.annotations.outline.outlineWidth > 0 && p(y.rect, {\n      x: k.x,\n      y: k.y,\n      rx: r,\n      ry: r,\n      width: k.width,\n      height: k.height,\n      style: g({}, s.annotations.outline, {\n        fill: \"none\",\n        strokeWidth: s.annotations.outline.strokeWidth + 2 * s.annotations.outline.outlineWidth,\n        stroke: s.annotations.outline.outlineColor,\n        opacity: s.annotations.outline.outlineOpacity\n      })\n    }), p(y.rect, {\n      x: k.x,\n      y: k.y,\n      rx: r,\n      ry: r,\n      width: k.width,\n      height: k.height,\n      style: s.annotations.outline\n    })]\n  });\n},\n    R = function (t) {\n  var n = t.datum,\n      i = t.x,\n      o = t.y,\n      e = t.note,\n      a = M(t);\n  if (!W(e)) throw new Error(\"note should be a valid react element\");\n  return x(m, {\n    children: [p(E, {\n      points: a.points,\n      isOutline: !0\n    }), b(t) && p(D, {\n      x: i,\n      y: o,\n      size: t.size\n    }), w(t) && p(I, {\n      x: i,\n      y: o,\n      size: t.size\n    }), z(t) && p(L, {\n      x: i,\n      y: o,\n      width: t.width,\n      height: t.height,\n      borderRadius: t.borderRadius\n    }), p(E, {\n      points: a.points\n    }), p(T, {\n      datum: n,\n      x: a.text[0],\n      y: a.text[1],\n      note: e\n    })]\n  });\n},\n    q = function (t, n) {\n  n.forEach(function (n, i) {\n    var o = n[0],\n        e = n[1];\n    0 === i ? t.moveTo(o, e) : t.lineTo(o, e);\n  });\n},\n    J = function (t, n) {\n  var i = n.annotations,\n      o = n.theme;\n  0 !== i.length && (t.save(), i.forEach(function (n) {\n    if (!v(n.note)) throw new Error(\"note is invalid for canvas implementation\");\n    o.annotations.link.outlineWidth > 0 && (t.lineCap = \"square\", t.strokeStyle = o.annotations.link.outlineColor, t.lineWidth = o.annotations.link.strokeWidth + 2 * o.annotations.link.outlineWidth, t.beginPath(), q(t, n.computed.points), t.stroke(), t.lineCap = \"butt\"), b(n) && o.annotations.outline.outlineWidth > 0 && (t.strokeStyle = o.annotations.outline.outlineColor, t.lineWidth = o.annotations.outline.strokeWidth + 2 * o.annotations.outline.outlineWidth, t.beginPath(), t.arc(n.x, n.y, n.size / 2, 0, 2 * Math.PI), t.stroke()), w(n) && o.annotations.symbol.outlineWidth > 0 && (t.strokeStyle = o.annotations.symbol.outlineColor, t.lineWidth = 2 * o.annotations.symbol.outlineWidth, t.beginPath(), t.arc(n.x, n.y, n.size / 2, 0, 2 * Math.PI), t.stroke()), z(n) && o.annotations.outline.outlineWidth > 0 && (t.strokeStyle = o.annotations.outline.outlineColor, t.lineWidth = o.annotations.outline.strokeWidth + 2 * o.annotations.outline.outlineWidth, t.beginPath(), t.rect(n.x - n.width / 2, n.y - n.height / 2, n.width, n.height), t.stroke()), t.strokeStyle = o.annotations.link.stroke, t.lineWidth = o.annotations.link.strokeWidth, t.beginPath(), q(t, n.computed.points), t.stroke(), b(n) && (t.strokeStyle = o.annotations.outline.stroke, t.lineWidth = o.annotations.outline.strokeWidth, t.beginPath(), t.arc(n.x, n.y, n.size / 2, 0, 2 * Math.PI), t.stroke()), w(n) && (t.fillStyle = o.annotations.symbol.fill, t.beginPath(), t.arc(n.x, n.y, n.size / 2, 0, 2 * Math.PI), t.fill()), z(n) && (t.strokeStyle = o.annotations.outline.stroke, t.lineWidth = o.annotations.outline.strokeWidth, t.beginPath(), t.rect(n.x - n.width / 2, n.y - n.height / 2, n.width, n.height), t.stroke()), \"function\" == typeof n.note ? n.note(t, {\n      datum: n.datum,\n      x: n.computed.text[0],\n      y: n.computed.text[1],\n      theme: o\n    }) : (t.font = o.annotations.text.fontSize + \"px \" + o.annotations.text.fontFamily, t.textAlign = \"left\", t.textBaseline = \"alphabetic\", t.fillStyle = o.annotations.text.fill, t.strokeStyle = o.annotations.text.outlineColor, t.lineWidth = 2 * o.annotations.text.outlineWidth, o.annotations.text.outlineWidth > 0 && (t.lineJoin = \"round\", t.strokeText(n.note, n.computed.text[0], n.computed.text[1]), t.lineJoin = \"miter\"), t.fillText(n.note, n.computed.text[0], n.computed.text[1]));\n  }), t.restore());\n};\n\nexport { R as Annotation, P as bindAnnotations, C as computeAnnotation, k as defaultProps, S as getLinkAngle, v as isCanvasNote, b as isCircleAnnotation, w as isDotAnnotation, z as isRectAnnotation, W as isSvgNote, J as renderAnnotationsToCanvas, O as useAnnotations, M as useComputedAnnotation, j as useComputedAnnotations };","map":{"version":3,"mappings":"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","names":["defaultProps","dotSize","noteWidth","noteTextOffset","animate","motionStiffness","motionDamping","isSvgNote","note","noteType","isValidElement","isCanvasNote","isCircleAnnotation","annotationSpec","type","isDotAnnotation","isRectAnnotation","bindAnnotations","data","annotations","getPosition","getDimensions","reduce","acc","annotation","offset","_filter","match","map","datum","position","dimensions","size","width","height","_omit","getLinkAngle","sourceX","sourceY","targetX","targetY","angle","Math","atan2","absoluteAngleDegrees","radiansToDegrees","computeAnnotation","computedNoteX","computedNoteY","x","y","noteX","noteY","_isNumber","undefined","abs","Error","computedX","computedY","positionFromAngle","degreesToRadians","eighth","round","textX","noteLineX","points","text","useAnnotations","useMemo","useComputedAnnotations","computed","useComputedAnnotation","AnnotationNote","theme","useTheme","useMotionConfig","springConfig","config","animatedProps","useSpring","immediate","createElement","_jsxs","outlineWidth","_jsx","animated","style","strokeLinejoin","strokeWidth","stroke","outlineColor","omit","children","AnnotationLink","isOutline","path","firstPoint","animatedPath","useAnimatedPath","link","strokeLinecap","opacity","outlineOpacity","fill","d","CircleAnnotationOutline","radius","outline","circle","cx","cy","r","DotAnnotationOutline","symbol","RectAnnotationOutline","borderRadius","a","rect","rx","ry","Annotation","drawPoints","ctx","forEach","index","moveTo","lineTo","renderAnnotationsToCanvas","length","save","lineCap","strokeStyle","lineWidth","beginPath","arc","PI","fillStyle","font","fontSize","fontFamily","textAlign","textBaseline","lineJoin","strokeText","fillText","restore"],"sources":["/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/bar/node_modules/@nivo/annotations/src/props.ts","/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/bar/node_modules/@nivo/annotations/src/utils.ts","/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/bar/node_modules/@nivo/annotations/src/compute.ts","/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/bar/node_modules/@nivo/annotations/src/hooks.ts","/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/bar/node_modules/@nivo/annotations/src/AnnotationNote.tsx","/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/bar/node_modules/@nivo/annotations/src/AnnotationLink.tsx","/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/bar/node_modules/@nivo/annotations/src/CircleAnnotationOutline.tsx","/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/bar/node_modules/@nivo/annotations/src/DotAnnotationOutline.tsx","/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/bar/node_modules/@nivo/annotations/src/RectAnnotationOutline.tsx","/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/bar/node_modules/@nivo/annotations/src/Annotation.tsx","/Users/jstanton/Desktop/react-admin-dashboard/node_modules/@nivo/bar/node_modules/@nivo/annotations/src/canvas.ts"],"sourcesContent":["export const defaultProps = {\n    dotSize: 4,\n    noteWidth: 120,\n    noteTextOffset: 8,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 13,\n}\n","import {\n    AnnotationSpec,\n    CircleAnnotationSpec,\n    DotAnnotationSpec,\n    Note,\n    NoteCanvas,\n    NoteSvg,\n    RectAnnotationSpec,\n} from './types'\nimport { isValidElement } from 'react'\n\nexport const isSvgNote = <Datum>(note: Note<Datum>): note is NoteSvg<Datum> => {\n    const noteType = typeof note\n\n    return (\n        isValidElement(note) ||\n        noteType === 'string' ||\n        noteType === 'function' ||\n        noteType === 'object'\n    )\n}\n\nexport const isCanvasNote = <Datum>(note: Note<Datum>): note is NoteCanvas<Datum> => {\n    const noteType = typeof note\n\n    return noteType === 'string' || noteType === 'function'\n}\n\nexport const isCircleAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is CircleAnnotationSpec<Datum> => annotationSpec.type === 'circle'\n\nexport const isDotAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is DotAnnotationSpec<Datum> => annotationSpec.type === 'dot'\n\nexport const isRectAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is RectAnnotationSpec<Datum> => annotationSpec.type === 'rect'\n","import { filter, isNumber, omit } from 'lodash'\nimport {\n    radiansToDegrees,\n    absoluteAngleDegrees,\n    degreesToRadians,\n    positionFromAngle,\n} from '@nivo/core'\nimport { defaultProps } from './props'\nimport {\n    AnnotationPositionGetter,\n    AnnotationDimensionsGetter,\n    BoundAnnotation,\n    AnnotationMatcher,\n    AnnotationInstructions,\n} from './types'\nimport { isCircleAnnotation, isRectAnnotation } from './utils'\n\nexport const bindAnnotations = <\n    Datum = {\n        x: number\n        y: number\n    }\n>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}): BoundAnnotation<Datum>[] =>\n    annotations.reduce((acc: BoundAnnotation<Datum>[], annotation) => {\n        const offset = annotation.offset || 0\n\n        return [\n            ...acc,\n            ...filter<Datum>(data, annotation.match).map(datum => {\n                const position = getPosition(datum)\n                const dimensions = getDimensions(datum)\n\n                if (isCircleAnnotation(annotation) || isRectAnnotation(annotation)) {\n                    dimensions.size = dimensions.size + offset * 2\n                    dimensions.width = dimensions.width + offset * 2\n                    dimensions.height = dimensions.height + offset * 2\n                }\n\n                // acc.push({\n                //     ...omit(annotation, ['match', 'offset']),\n                //     ...position,\n                //     ...dimensions,\n                //     size: annotation.size || dimensions.size,\n                //     datum,\n                // } as any)\n                // return [\n                //     ...acc,\n                //     {\n                //         ...omit(annotation, ['match', 'offset']),\n                //         ...position,\n                //         ...dimensions,\n                //         size: annotation.size || dimensions.size,\n                //         datum,\n                //     },\n                // ]\n                return {\n                    ...omit(annotation, ['match', 'offset']),\n                    ...position,\n                    ...dimensions,\n                    size: annotation.size || dimensions.size,\n                    datum,\n                } as Required<BoundAnnotation<Datum>>\n            }),\n        ]\n\n        // return acc\n    }, [])\n\nexport const getLinkAngle = (\n    sourceX: number,\n    sourceY: number,\n    targetX: number,\n    targetY: number\n) => {\n    const angle = Math.atan2(targetY - sourceY, targetX - sourceX)\n\n    return absoluteAngleDegrees(radiansToDegrees(angle))\n}\n\nexport const computeAnnotation = <Datum>(\n    annotation: BoundAnnotation<Datum>\n): AnnotationInstructions => {\n    const {\n        x,\n        y,\n        noteX,\n        noteY,\n        noteWidth = defaultProps.noteWidth,\n        noteTextOffset = defaultProps.noteTextOffset,\n    } = annotation\n\n    let computedNoteX: number\n    let computedNoteY: number\n\n    if (isNumber(noteX)) {\n        computedNoteX = x + noteX\n    } else if (noteX.abs !== undefined) {\n        computedNoteX = noteX.abs\n    } else {\n        throw new Error(`noteX should be either a number or an object containing an 'abs' property`)\n    }\n\n    if (isNumber(noteY)) {\n        computedNoteY = y + noteY\n    } else if (noteY.abs !== undefined) {\n        computedNoteY = noteY.abs\n    } else {\n        throw new Error(`noteY should be either a number or an object containing an 'abs' property`)\n    }\n\n    let computedX = x\n    let computedY = y\n\n    const angle = getLinkAngle(x, y, computedNoteX, computedNoteY)\n\n    if (isCircleAnnotation<Datum>(annotation)) {\n        const position = positionFromAngle(degreesToRadians(angle), annotation.size / 2)\n        computedX += position.x\n        computedY += position.y\n    }\n\n    if (isRectAnnotation<Datum>(annotation)) {\n        const eighth = Math.round((angle + 90) / 45) % 8\n        if (eighth === 0) {\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 1) {\n            computedX += annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 2) {\n            computedX += annotation.width / 2\n        }\n        if (eighth === 3) {\n            computedX += annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 4) {\n            computedY += annotation.height / 2\n        }\n        if (eighth === 5) {\n            computedX -= annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 6) {\n            computedX -= annotation.width / 2\n        }\n        if (eighth === 7) {\n            computedX -= annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n    }\n\n    let textX = computedNoteX\n    const textY = computedNoteY - noteTextOffset\n\n    let noteLineX = computedNoteX\n    const noteLineY = computedNoteY\n\n    if ((angle + 90) % 360 > 180) {\n        textX -= noteWidth\n        noteLineX -= noteWidth\n    } else {\n        noteLineX += noteWidth\n    }\n\n    return {\n        points: [\n            [computedX, computedY],\n            [computedNoteX, computedNoteY],\n            [noteLineX, noteLineY],\n        ] as [number, number][],\n        text: [textX, textY],\n        angle: angle + 90,\n    }\n}\n","import { useMemo } from 'react'\nimport { bindAnnotations, computeAnnotation } from './compute'\nimport {\n    AnnotationDimensionsGetter,\n    AnnotationMatcher,\n    AnnotationPositionGetter,\n    BoundAnnotation,\n} from './types'\n\n/**\n * Bind annotations to a dataset.\n */\nexport const useAnnotations = <Datum>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}) =>\n    useMemo(\n        () =>\n            bindAnnotations<Datum>({\n                data,\n                annotations,\n                getPosition,\n                getDimensions,\n            }),\n        [data, annotations, getPosition, getDimensions]\n    )\n\nexport const useComputedAnnotations = <Datum>({\n    annotations,\n}: {\n    annotations: BoundAnnotation<Datum>[]\n}) =>\n    useMemo(\n        () =>\n            annotations.map(annotation => ({\n                ...annotation,\n                computed: computeAnnotation<Datum>({\n                    ...annotation,\n                }),\n            })),\n        [annotations]\n    )\n\nexport const useComputedAnnotation = <Datum>(annotation: BoundAnnotation<Datum>) =>\n    useMemo(() => computeAnnotation<Datum>(annotation), [annotation])\n","import { createElement } from 'react'\nimport omit from 'lodash/omit'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { NoteSvg } from './types'\n\nexport const AnnotationNote = <Datum,>({\n    datum,\n    x,\n    y,\n    note,\n}: {\n    datum: Datum\n    x: number\n    y: number\n    note: NoteSvg<Datum>\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    if (typeof note === 'function') {\n        return createElement(note, { x, y, datum })\n    }\n\n    return (\n        <>\n            {theme.annotations.text.outlineWidth > 0 && (\n                <animated.text\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    style={{\n                        ...theme.annotations.text,\n                        strokeLinejoin: 'round',\n                        strokeWidth: theme.annotations.text.outlineWidth * 2,\n                        stroke: theme.annotations.text.outlineColor,\n                    }}\n                >\n                    {note}\n                </animated.text>\n            )}\n            <animated.text\n                x={animatedProps.x}\n                y={animatedProps.y}\n                style={omit(theme.annotations.text, ['outlineWidth', 'outlineColor'])}\n            >\n                {note}\n            </animated.text>\n        </>\n    )\n}\n","import { useMemo } from 'react'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath, useTheme } from '@nivo/core'\n\nexport const AnnotationLink = ({\n    points,\n    isOutline = false,\n}: {\n    points: [number, number][]\n    isOutline?: boolean\n}) => {\n    const theme = useTheme()\n\n    const path = useMemo(() => {\n        const [firstPoint, ...otherPoints] = points\n\n        return otherPoints.reduce(\n            (acc, [x, y]) => `${acc} L${x},${y}`,\n            `M${firstPoint[0]},${firstPoint[1]}`\n        )\n    }, [points])\n\n    const animatedPath = useAnimatedPath(path)\n\n    if (isOutline && theme.annotations.link.outlineWidth <= 0) {\n        return null\n    }\n\n    const style = { ...theme.annotations.link }\n    if (isOutline) {\n        style.strokeLinecap = 'square'\n        style.strokeWidth =\n            theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n        style.stroke = theme.annotations.link.outlineColor\n        style.opacity = theme.annotations.link.outlineOpacity\n    }\n\n    return <animated.path fill=\"none\" d={animatedPath} style={style} />\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const CircleAnnotationOutline = ({ x, y, size }: { x: number; y: number; size: number }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { defaultProps } from './props'\n\nexport const DotAnnotationOutline = ({\n    x,\n    y,\n    size = defaultProps.dotSize,\n}: {\n    x: number\n    y: number\n    size?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth: theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.symbol}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const RectAnnotationOutline = ({\n    x,\n    y,\n    width,\n    height,\n    borderRadius = 6,\n}: {\n    x: number\n    y: number\n    width: number\n    height: number\n    borderRadius?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x: x - width / 2,\n        y: y - height / 2,\n        width,\n        height,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.rect\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    rx={borderRadius}\n                    ry={borderRadius}\n                    width={animatedProps.width}\n                    height={animatedProps.height}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.rect\n                x={animatedProps.x}\n                y={animatedProps.y}\n                rx={borderRadius}\n                ry={borderRadius}\n                width={animatedProps.width}\n                height={animatedProps.height}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useComputedAnnotation } from './hooks'\nimport { AnnotationNote } from './AnnotationNote'\nimport { AnnotationLink } from './AnnotationLink'\nimport { CircleAnnotationOutline } from './CircleAnnotationOutline'\nimport { DotAnnotationOutline } from './DotAnnotationOutline'\nimport { RectAnnotationOutline } from './RectAnnotationOutline'\nimport { BoundAnnotation } from './types'\nimport { isCircleAnnotation, isDotAnnotation, isRectAnnotation, isSvgNote } from './utils'\n\nexport const Annotation = <Datum,>(annotation: BoundAnnotation<Datum>) => {\n    const { datum, x, y, note } = annotation\n    const computed = useComputedAnnotation(annotation)\n\n    if (!isSvgNote(note)) {\n        throw new Error('note should be a valid react element')\n    }\n\n    return (\n        <>\n            <AnnotationLink points={computed.points} isOutline={true} />\n            {isCircleAnnotation(annotation) && (\n                <CircleAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isDotAnnotation(annotation) && (\n                <DotAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isRectAnnotation(annotation) && (\n                <RectAnnotationOutline\n                    x={x}\n                    y={y}\n                    width={annotation.width}\n                    height={annotation.height}\n                    borderRadius={annotation.borderRadius}\n                />\n            )}\n            <AnnotationLink points={computed.points} />\n            <AnnotationNote datum={datum} x={computed.text[0]} y={computed.text[1]} note={note} />\n        </>\n    )\n}\n","import { CompleteTheme } from '@nivo/core'\nimport { ComputedAnnotation } from './types'\nimport { isCanvasNote, isCircleAnnotation, isDotAnnotation, isRectAnnotation } from './utils'\n\nconst drawPoints = (ctx: CanvasRenderingContext2D, points: [number, number][]) => {\n    points.forEach(([x, y], index) => {\n        if (index === 0) {\n            ctx.moveTo(x, y)\n        } else {\n            ctx.lineTo(x, y)\n        }\n    })\n}\n\nexport const renderAnnotationsToCanvas = <Datum>(\n    ctx: CanvasRenderingContext2D,\n    {\n        annotations,\n        theme,\n    }: {\n        annotations: ComputedAnnotation<Datum>[]\n        theme: CompleteTheme\n    }\n) => {\n    if (annotations.length === 0) return\n\n    ctx.save()\n    annotations.forEach(annotation => {\n        if (!isCanvasNote(annotation.note)) {\n            throw new Error('note is invalid for canvas implementation')\n        }\n\n        if (theme.annotations.link.outlineWidth > 0) {\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.annotations.link.outlineColor\n            ctx.lineWidth =\n                theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n            ctx.beginPath()\n            drawPoints(ctx, annotation.computed.points)\n            ctx.stroke()\n            ctx.lineCap = 'butt'\n        }\n\n        if (isCircleAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation) && theme.annotations.symbol.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.symbol.outlineColor\n            ctx.lineWidth = theme.annotations.symbol.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isRectAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        ctx.strokeStyle = theme.annotations.link.stroke\n        ctx.lineWidth = theme.annotations.link.strokeWidth\n        ctx.beginPath()\n        drawPoints(ctx, annotation.computed.points)\n        ctx.stroke()\n\n        if (isCircleAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation)) {\n            ctx.fillStyle = theme.annotations.symbol.fill\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.fill()\n        }\n\n        if (isRectAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        if (typeof annotation.note === 'function') {\n            annotation.note(ctx, {\n                datum: annotation.datum,\n                x: annotation.computed.text[0],\n                y: annotation.computed.text[1],\n                theme,\n            })\n        } else {\n            ctx.font = `${theme.annotations.text.fontSize}px ${theme.annotations.text.fontFamily}`\n            ctx.textAlign = 'left'\n            ctx.textBaseline = 'alphabetic'\n\n            ctx.fillStyle = theme.annotations.text.fill\n            ctx.strokeStyle = theme.annotations.text.outlineColor\n            ctx.lineWidth = theme.annotations.text.outlineWidth * 2\n\n            if (theme.annotations.text.outlineWidth > 0) {\n                ctx.lineJoin = 'round'\n                ctx.strokeText(\n                    annotation.note,\n                    annotation.computed.text[0],\n                    annotation.computed.text[1]\n                )\n                ctx.lineJoin = 'miter'\n            }\n            ctx.fillText(annotation.note, annotation.computed.text[0], annotation.computed.text[1])\n        }\n    })\n    ctx.restore()\n}\n"]},"metadata":{},"sourceType":"module"}