{"ast":null,"code":"import { Axes as e, Grid as a, renderGridLinesToCanvas as i, renderAxesToCanvas as t } from \"@nivo/axes\";\nimport { useAnnotations as n, Annotation as r, useComputedAnnotations as l, renderAnnotationsToCanvas as o } from \"@nivo/annotations\";\nimport { jsx as d, Fragment as u, jsxs as c } from \"react/jsx-runtime\";\nimport { BoxLegendSvg as s, renderLegendToCanvas as h } from \"@nivo/legends\";\nimport { useTheme as b, getPropertyAccessor as g, usePropertyAccessor as v, useValueFormatter as f, Container as m, useMotionConfig as p, useDimensions as x, bindDefs as y, CartesianMarkers as S, SvgWrapper as k, getRelativeCursor as L, isCursorInRect as w, ResponsiveWrapper as C } from \"@nivo/core\";\nimport { useMemo as V, createElement as W, useCallback as M, useState as B, Fragment as I, forwardRef as T, useRef as R, useEffect as H } from \"react\";\nimport { animated as P, to as E, useTransition as F } from \"@react-spring/web\";\nimport { useTooltip as X, BasicTooltip as Y } from \"@nivo/tooltip\";\nimport { useOrdinalColorScale as D, useInheritedColor as O } from \"@nivo/colors\";\nimport { computeScale as G } from \"@nivo/scales\";\nimport { stack as A, stackOffsetDiverging as j } from \"d3-shape\";\nimport q from \"lodash/uniqBy\";\n\nfunction z() {\n  return z = Object.assign || function (e) {\n    for (var a = 1; a < arguments.length; a++) {\n      var i = arguments[a];\n\n      for (var t in i) Object.prototype.hasOwnProperty.call(i, t) && (e[t] = i[t]);\n    }\n\n    return e;\n  }, z.apply(this, arguments);\n}\n\nfunction K(e, a) {\n  if (null == e) return {};\n  var i,\n      t,\n      n = {},\n      r = Object.keys(e);\n\n  for (t = 0; t < r.length; t++) i = r[t], a.indexOf(i) >= 0 || (n[i] = e[i]);\n\n  return n;\n}\n\nvar N,\n    J = function (e) {\n  var a = e.bars,\n      i = e.annotations,\n      t = n({\n    data: a,\n    annotations: i,\n    getPosition: function (e) {\n      return {\n        x: e.x + e.width / 2,\n        y: e.y + e.height / 2\n      };\n    },\n    getDimensions: function (e) {\n      var a = e.height,\n          i = e.width;\n      return {\n        width: i,\n        height: a,\n        size: Math.max(i, a)\n      };\n    }\n  });\n  return d(u, {\n    children: t.map(function (e, a) {\n      return d(r, z({}, e), a);\n    })\n  });\n},\n    Q = function (e) {\n  var a = e.width,\n      i = e.height,\n      t = e.legends,\n      n = e.toggleSerie;\n  return d(u, {\n    children: t.map(function (e, t) {\n      var r,\n          l = e[0],\n          o = e[1];\n      return d(s, z({}, l, {\n        containerWidth: a,\n        containerHeight: i,\n        data: null != (r = l.data) ? r : o,\n        toggleSerie: l.toggleSerie && \"keys\" === l.dataFrom ? n : void 0\n      }), t);\n    })\n  });\n},\n    U = [\"data\"],\n    Z = function (e) {\n  var a,\n      i = e.bar,\n      t = i.data,\n      n = K(i, U),\n      r = e.style,\n      l = r.borderColor,\n      o = r.color,\n      u = r.height,\n      s = r.labelColor,\n      h = r.labelOpacity,\n      g = r.labelX,\n      v = r.labelY,\n      f = r.transform,\n      m = r.width,\n      p = e.borderRadius,\n      x = e.borderWidth,\n      y = e.label,\n      S = e.shouldRenderLabel,\n      k = e.isInteractive,\n      L = e.onClick,\n      w = e.onMouseEnter,\n      C = e.onMouseLeave,\n      B = e.tooltip,\n      I = e.isFocusable,\n      T = e.ariaLabel,\n      R = e.ariaLabelledBy,\n      H = e.ariaDescribedBy,\n      F = b(),\n      Y = X(),\n      D = Y.showTooltipFromEvent,\n      O = Y.showTooltipAt,\n      G = Y.hideTooltip,\n      A = V(function () {\n    return function () {\n      return W(B, z({}, n, t));\n    };\n  }, [B, n, t]),\n      j = M(function (e) {\n    null == L || L(z({\n      color: n.color\n    }, t), e);\n  }, [n, t, L]),\n      q = M(function (e) {\n    return D(A(), e);\n  }, [D, A]),\n      N = M(function (e) {\n    null == w || w(t, e), D(A(), e);\n  }, [t, w, D, A]),\n      J = M(function (e) {\n    null == C || C(t, e), G();\n  }, [t, G, C]),\n      Q = M(function () {\n    O(A(), [n.absX + n.width / 2, n.absY]);\n  }, [O, A, n]),\n      Z = M(function () {\n    G();\n  }, [G]);\n  return c(P.g, {\n    transform: f,\n    children: [d(P.rect, {\n      width: E(m, function (e) {\n        return Math.max(e, 0);\n      }),\n      height: E(u, function (e) {\n        return Math.max(e, 0);\n      }),\n      rx: p,\n      ry: p,\n      fill: null != (a = t.fill) ? a : o,\n      strokeWidth: x,\n      stroke: l,\n      focusable: I,\n      tabIndex: I ? 0 : void 0,\n      \"aria-label\": T ? T(t) : void 0,\n      \"aria-labelledby\": R ? R(t) : void 0,\n      \"aria-describedby\": H ? H(t) : void 0,\n      onMouseEnter: k ? N : void 0,\n      onMouseMove: k ? q : void 0,\n      onMouseLeave: k ? J : void 0,\n      onClick: k ? j : void 0,\n      onFocus: k && I ? Q : void 0,\n      onBlur: k && I ? Z : void 0\n    }), S && d(P.text, {\n      x: g,\n      y: v,\n      textAnchor: \"middle\",\n      dominantBaseline: \"central\",\n      fillOpacity: h,\n      style: z({}, F.labels.text, {\n        pointerEvents: \"none\",\n        fill: s\n      }),\n      children: y\n    })]\n  });\n},\n    $ = [\"color\", \"label\"],\n    _ = {\n  indexBy: \"id\",\n  keys: [\"value\"],\n  groupMode: \"stacked\",\n  layout: \"vertical\",\n  reverse: !1,\n  minValue: \"auto\",\n  maxValue: \"auto\",\n  valueScale: {\n    type: \"linear\"\n  },\n  indexScale: {\n    type: \"band\",\n    round: !0\n  },\n  padding: .1,\n  innerPadding: 0,\n  axisBottom: {},\n  axisLeft: {},\n  enableGridX: !1,\n  enableGridY: !0,\n  enableLabel: !0,\n  label: \"formattedValue\",\n  labelSkipWidth: 0,\n  labelSkipHeight: 0,\n  labelTextColor: {\n    from: \"theme\",\n    theme: \"labels.text.fill\"\n  },\n  colorBy: \"id\",\n  colors: {\n    scheme: \"nivo\"\n  },\n  borderRadius: 0,\n  borderWidth: 0,\n  borderColor: {\n    from: \"color\"\n  },\n  isInteractive: !0,\n  tooltip: function (e) {\n    var a = e.color,\n        i = e.label,\n        t = K(e, $);\n    return d(Y, {\n      id: i,\n      value: t.formattedValue,\n      enableChip: !0,\n      color: a\n    });\n  },\n  tooltipLabel: function (e) {\n    return e.id + \" - \" + e.indexValue;\n  },\n  legends: [],\n  initialHiddenIds: [],\n  annotations: [],\n  markers: []\n},\n    ee = z({}, _, {\n  layers: [\"grid\", \"axes\", \"bars\", \"markers\", \"legends\", \"annotations\"],\n  barComponent: Z,\n  defs: [],\n  fill: [],\n  animate: !0,\n  motionConfig: \"default\",\n  role: \"img\",\n  isFocusable: !1\n}),\n    ae = z({}, _, {\n  layers: [\"grid\", \"axes\", \"bars\", \"legends\", \"annotations\"],\n  pixelRatio: \"undefined\" != typeof window && null != (N = window.devicePixelRatio) ? N : 1\n}),\n    ie = function (e, a, i, t, n, r) {\n  return G(t, {\n    all: e.map(a),\n    min: 0,\n    max: 0\n  }, n, r).padding(i);\n},\n    te = function (e, a) {\n  return e.map(function (e) {\n    return z({}, a.reduce(function (e, a) {\n      return e[a] = null, e;\n    }, {}), e);\n  });\n},\n    ne = function (e) {\n  return Object.keys(e).reduce(function (a, i) {\n    return e[i] && (a[i] = e[i]), a;\n  }, {});\n},\n    re = function (e) {\n  return [e, Number(e)];\n},\n    le = [\"layout\", \"minValue\", \"maxValue\", \"reverse\", \"width\", \"height\", \"padding\", \"innerPadding\", \"valueScale\", \"indexScale\", \"hiddenIds\"],\n    oe = function (e, a) {\n  return e > a;\n},\n    de = function (e, a) {\n  return e < a;\n},\n    ue = function (e, a) {\n  return Array.from(\" \".repeat(a - e), function (a, i) {\n    return e + i;\n  });\n},\n    ce = function (e) {\n  return oe(e, 0) ? 0 : e;\n},\n    se = function (e, a, i, t) {\n  var n = e.data,\n      r = e.formatValue,\n      l = e.getColor,\n      o = e.getIndex,\n      d = e.getTooltipLabel,\n      u = e.innerPadding,\n      c = void 0 === u ? 0 : u,\n      s = e.keys,\n      h = e.xScale,\n      b = e.yScale,\n      g = e.margin,\n      v = i ? de : oe,\n      f = n.map(ne),\n      m = [];\n  return s.forEach(function (e, i) {\n    return ue(0, h.domain().length).forEach(function (u) {\n      var s,\n          p,\n          x,\n          y = re(n[u][e]),\n          S = y[0],\n          k = y[1],\n          L = o(n[u]),\n          w = (null != (s = h(L)) ? s : 0) + a * i + c * i,\n          C = v(p = k, 0) ? null != (x = b(p)) ? x : 0 : t,\n          V = function (e, a) {\n        var i;\n        return v(e, 0) ? t - a : (null != (i = b(e)) ? i : 0) - t;\n      }(k, C),\n          W = {\n        id: e,\n        value: null === S ? S : k,\n        formattedValue: r(k),\n        hidden: !1,\n        index: u,\n        indexValue: L,\n        data: f[u]\n      };\n\n      m.push({\n        key: e + \".\" + W.indexValue,\n        index: m.length,\n        data: W,\n        x: w,\n        y: C,\n        absX: g.left + w,\n        absY: g.top + C,\n        width: a,\n        height: V,\n        color: l(W),\n        label: d(W)\n      });\n    });\n  }), m;\n},\n    he = function (e, a, i, t) {\n  var n = e.data,\n      r = e.formatValue,\n      l = e.getIndex,\n      o = e.getColor,\n      d = e.getTooltipLabel,\n      u = e.keys,\n      c = e.innerPadding,\n      s = void 0 === c ? 0 : c,\n      h = e.xScale,\n      b = e.yScale,\n      g = e.margin,\n      v = i ? de : oe,\n      f = n.map(ne),\n      m = [];\n  return u.forEach(function (e, i) {\n    return ue(0, b.domain().length).forEach(function (u) {\n      var c,\n          p,\n          x,\n          y = re(n[u][e]),\n          S = y[0],\n          k = y[1],\n          L = l(n[u]),\n          w = v(p = k, 0) ? t : null != (x = h(p)) ? x : 0,\n          C = (null != (c = b(L)) ? c : 0) + a * i + s * i,\n          V = function (e, a) {\n        var i;\n        return v(e, 0) ? (null != (i = h(e)) ? i : 0) - t : t - a;\n      }(k, w),\n          W = {\n        id: e,\n        value: null === S ? S : k,\n        formattedValue: r(k),\n        hidden: !1,\n        index: u,\n        indexValue: L,\n        data: f[u]\n      };\n\n      m.push({\n        key: e + \".\" + W.indexValue,\n        index: m.length,\n        data: W,\n        x: w,\n        y: C,\n        absX: g.left + w,\n        absY: g.top + C,\n        width: V,\n        height: a,\n        color: o(W),\n        label: d(W)\n      });\n    });\n  }), m;\n},\n    be = function (e) {\n  var a,\n      i,\n      t = e.layout,\n      n = e.minValue,\n      r = e.maxValue,\n      l = e.reverse,\n      o = e.width,\n      d = e.height,\n      u = e.padding,\n      c = void 0 === u ? 0 : u,\n      s = e.innerPadding,\n      h = void 0 === s ? 0 : s,\n      b = e.valueScale,\n      g = e.indexScale,\n      v = e.hiddenIds,\n      f = void 0 === v ? [] : v,\n      m = K(e, le),\n      p = m.keys.filter(function (e) {\n    return !f.includes(e);\n  }),\n      x = te(m.data, p),\n      y = \"vertical\" === t ? [\"y\", \"x\", o] : [\"x\", \"y\", d],\n      S = y[0],\n      k = y[1],\n      L = y[2],\n      w = ie(x, m.getIndex, c, g, L, k),\n      C = z({\n    max: r,\n    min: n,\n    reverse: l\n  }, b),\n      V = \"auto\" === C.min ? ce : function (e) {\n    return e;\n  },\n      W = x.reduce(function (e, a) {\n    return [].concat(e, p.map(function (e) {\n      return a[e];\n    }));\n  }, []).filter(Boolean),\n      M = V(Math.min.apply(Math, W)),\n      B = (i = Math.max.apply(Math, W), isFinite(i) ? i : 0),\n      I = G(C, {\n    all: W,\n    min: M,\n    max: B\n  }, \"x\" === S ? o : d, S),\n      T = \"vertical\" === t ? [w, I] : [I, w],\n      R = T[0],\n      H = T[1],\n      P = (w.bandwidth() - h * (p.length - 1)) / p.length,\n      E = [z({}, m, {\n    data: x,\n    keys: p,\n    innerPadding: h,\n    xScale: R,\n    yScale: H\n  }), P, C.reverse, null != (a = I(0)) ? a : 0];\n  return {\n    xScale: R,\n    yScale: H,\n    bars: P > 0 ? \"vertical\" === t ? se.apply(void 0, E) : he.apply(void 0, E) : []\n  };\n},\n    ge = [\"data\", \"layout\", \"minValue\", \"maxValue\", \"reverse\", \"width\", \"height\", \"padding\", \"valueScale\", \"indexScale\", \"hiddenIds\"],\n    ve = function e(a) {\n  var i;\n  return a.some(Array.isArray) ? e((i = []).concat.apply(i, a)) : a;\n},\n    fe = function (e, a, i) {\n  var t = e.formatValue,\n      n = e.getColor,\n      r = e.getIndex,\n      l = e.getTooltipLabel,\n      o = e.innerPadding,\n      d = e.stackedData,\n      u = e.xScale,\n      c = e.yScale,\n      s = e.margin,\n      h = [];\n  return d.forEach(function (e) {\n    return u.domain().forEach(function (d, b) {\n      var g,\n          v,\n          f = e[b],\n          m = null != (g = u(r(f.data))) ? g : 0,\n          p = (null != (v = function (e) {\n        return c(e[i ? 0 : 1]);\n      }(f)) ? v : 0) + .5 * o,\n          x = function (e, a) {\n        var t;\n        return (null != (t = c(e[i ? 1 : 0])) ? t : 0) - a;\n      }(f, p) - o,\n          y = re(f.data[e.key]),\n          S = y[0],\n          k = y[1],\n          L = {\n        id: e.key,\n        value: null === S ? S : k,\n        formattedValue: t(k),\n        hidden: !1,\n        index: b,\n        indexValue: d,\n        data: ne(f.data)\n      };\n\n      h.push({\n        key: e.key + \".\" + d,\n        index: h.length,\n        data: L,\n        x: m,\n        y: p,\n        absX: s.left + m,\n        absY: s.top + p,\n        width: a,\n        height: x,\n        color: n(L),\n        label: l(L)\n      });\n    });\n  }), h;\n},\n    me = function (e, a, i) {\n  var t = e.formatValue,\n      n = e.getColor,\n      r = e.getIndex,\n      l = e.getTooltipLabel,\n      o = e.innerPadding,\n      d = e.stackedData,\n      u = e.xScale,\n      c = e.yScale,\n      s = e.margin,\n      h = [];\n  return d.forEach(function (e) {\n    return c.domain().forEach(function (d, b) {\n      var g,\n          v,\n          f = e[b],\n          m = null != (g = c(r(f.data))) ? g : 0,\n          p = (null != (v = function (e) {\n        return u(e[i ? 1 : 0]);\n      }(f)) ? v : 0) + .5 * o,\n          x = function (e, a) {\n        var t;\n        return (null != (t = u(e[i ? 0 : 1])) ? t : 0) - a;\n      }(f, p) - o,\n          y = re(f.data[e.key]),\n          S = y[0],\n          k = y[1],\n          L = {\n        id: e.key,\n        value: null === S ? S : k,\n        formattedValue: t(k),\n        hidden: !1,\n        index: b,\n        indexValue: d,\n        data: ne(f.data)\n      };\n\n      h.push({\n        key: e.key + \".\" + d,\n        index: h.length,\n        data: L,\n        x: p,\n        y: m,\n        absX: s.left + p,\n        absY: s.top + m,\n        width: x,\n        height: a,\n        color: n(L),\n        label: l(L)\n      });\n    });\n  }), h;\n},\n    pe = function (e) {\n  var a,\n      i = e.data,\n      t = e.layout,\n      n = e.minValue,\n      r = e.maxValue,\n      l = e.reverse,\n      o = e.width,\n      d = e.height,\n      u = e.padding,\n      c = void 0 === u ? 0 : u,\n      s = e.valueScale,\n      h = e.indexScale,\n      b = e.hiddenIds,\n      g = void 0 === b ? [] : b,\n      v = K(e, ge),\n      f = v.keys.filter(function (e) {\n    return !g.includes(e);\n  }),\n      m = A().keys(f).offset(j)(te(i, f)),\n      p = \"vertical\" === t ? [\"y\", \"x\", o] : [\"x\", \"y\", d],\n      x = p[0],\n      y = p[1],\n      S = p[2],\n      k = ie(i, v.getIndex, c, h, S, y),\n      L = z({\n    max: r,\n    min: n,\n    reverse: l\n  }, s),\n      w = (a = ve(m), \"log\" === s.type ? a.filter(function (e) {\n    return 0 !== e;\n  }) : a),\n      C = Math.min.apply(Math, w),\n      V = Math.max.apply(Math, w),\n      W = G(L, {\n    all: w,\n    min: C,\n    max: V\n  }, \"x\" === x ? o : d, x),\n      M = \"vertical\" === t ? [k, W] : [W, k],\n      B = M[0],\n      I = M[1],\n      T = v.innerPadding > 0 ? v.innerPadding : 0,\n      R = k.bandwidth(),\n      H = [z({}, v, {\n    innerPadding: T,\n    stackedData: m,\n    xScale: B,\n    yScale: I\n  }), R, L.reverse];\n  return {\n    xScale: B,\n    yScale: I,\n    bars: R > 0 ? \"vertical\" === t ? fe.apply(void 0, H) : me.apply(void 0, H) : []\n  };\n},\n    xe = function (e) {\n  var a = e.bars,\n      i = e.direction,\n      t = e.from,\n      n = e.groupMode,\n      r = e.layout,\n      l = e.legendLabel,\n      o = e.reverse,\n      d = g(null != l ? l : \"indexes\" === t ? \"indexValue\" : \"id\");\n  return \"indexes\" === t ? function (e, a, i) {\n    var t = q(e.map(function (e) {\n      var a, t;\n      return {\n        id: null != (a = e.data.indexValue) ? a : \"\",\n        label: i(e.data),\n        hidden: e.data.hidden,\n        color: null != (t = e.color) ? t : \"#000\"\n      };\n    }), function (e) {\n      return e.id;\n    });\n    return \"horizontal\" === a && t.reverse(), t;\n  }(a, r, d) : function (e, a, i, t, n, r) {\n    var l = q(e.map(function (e) {\n      var a;\n      return {\n        id: e.data.id,\n        label: r(e.data),\n        hidden: e.data.hidden,\n        color: null != (a = e.color) ? a : \"#000\"\n      };\n    }), function (e) {\n      return e.id;\n    });\n    return (\"vertical\" === a && \"stacked\" === t && \"column\" === i && !0 !== n || \"horizontal\" === a && \"stacked\" === t && !0 === n) && l.reverse(), l;\n  }(a, r, i, n, o, d);\n},\n    ye = function (e) {\n  var a = e.indexBy,\n      i = void 0 === a ? _.indexBy : a,\n      t = e.keys,\n      n = void 0 === t ? _.keys : t,\n      r = e.label,\n      l = void 0 === r ? _.label : r,\n      o = e.tooltipLabel,\n      d = void 0 === o ? _.tooltipLabel : o,\n      u = e.valueFormat,\n      c = e.colors,\n      s = void 0 === c ? _.colors : c,\n      h = e.colorBy,\n      g = void 0 === h ? _.colorBy : h,\n      m = e.borderColor,\n      p = void 0 === m ? _.borderColor : m,\n      x = e.labelTextColor,\n      y = void 0 === x ? _.labelTextColor : x,\n      S = e.groupMode,\n      k = void 0 === S ? _.groupMode : S,\n      L = e.layout,\n      w = void 0 === L ? _.layout : L,\n      C = e.reverse,\n      W = void 0 === C ? _.reverse : C,\n      I = e.data,\n      T = e.minValue,\n      R = void 0 === T ? _.minValue : T,\n      H = e.maxValue,\n      P = void 0 === H ? _.maxValue : H,\n      E = e.margin,\n      F = e.width,\n      X = e.height,\n      Y = e.padding,\n      G = void 0 === Y ? _.padding : Y,\n      A = e.innerPadding,\n      j = void 0 === A ? _.innerPadding : A,\n      q = e.valueScale,\n      K = void 0 === q ? _.valueScale : q,\n      N = e.indexScale,\n      J = void 0 === N ? _.indexScale : N,\n      Q = e.initialHiddenIds,\n      U = void 0 === Q ? _.initialHiddenIds : Q,\n      Z = e.enableLabel,\n      $ = void 0 === Z ? _.enableLabel : Z,\n      ee = e.labelSkipWidth,\n      ae = void 0 === ee ? _.labelSkipWidth : ee,\n      ie = e.labelSkipHeight,\n      te = void 0 === ie ? _.labelSkipHeight : ie,\n      ne = e.legends,\n      re = void 0 === ne ? _.legends : ne,\n      le = e.legendLabel,\n      oe = B(null != U ? U : []),\n      de = oe[0],\n      ue = oe[1],\n      ce = M(function (e) {\n    ue(function (a) {\n      return a.indexOf(e) > -1 ? a.filter(function (a) {\n        return a !== e;\n      }) : [].concat(a, [e]);\n    });\n  }, []),\n      se = v(i),\n      he = v(l),\n      ge = v(d),\n      ve = f(u),\n      fe = b(),\n      me = D(s, g),\n      ye = O(p, fe),\n      Se = O(y, fe),\n      ke = (\"grouped\" === k ? be : pe)({\n    layout: w,\n    reverse: W,\n    data: I,\n    getIndex: se,\n    keys: n,\n    minValue: R,\n    maxValue: P,\n    width: F,\n    height: X,\n    getColor: me,\n    padding: G,\n    innerPadding: j,\n    valueScale: K,\n    indexScale: J,\n    hiddenIds: de,\n    formatValue: ve,\n    getTooltipLabel: ge,\n    margin: E\n  }),\n      Le = ke.bars,\n      we = ke.xScale,\n      Ce = ke.yScale,\n      Ve = V(function () {\n    return Le.filter(function (e) {\n      return null !== e.data.value;\n    }).map(function (e, a) {\n      return z({}, e, {\n        index: a\n      });\n    });\n  }, [Le]),\n      We = M(function (e) {\n    var a = e.width,\n        i = e.height;\n    return !!$ && !(ae > 0 && a < ae) && !(te > 0 && i < te);\n  }, [$, ae, te]),\n      Me = V(function () {\n    return n.map(function (e) {\n      var a = Le.find(function (a) {\n        return a.data.id === e;\n      });\n      return z({}, a, {\n        data: z({\n          id: e\n        }, null == a ? void 0 : a.data, {\n          hidden: de.includes(e)\n        })\n      });\n    });\n  }, [de, n, Le]),\n      Be = V(function () {\n    return re.map(function (e) {\n      return [e, xe({\n        bars: \"keys\" === e.dataFrom ? Me : Le,\n        direction: e.direction,\n        from: e.dataFrom,\n        groupMode: k,\n        layout: w,\n        legendLabel: le,\n        reverse: W\n      })];\n    });\n  }, [re, Me, Le, k, w, le, W]);\n  return {\n    bars: Le,\n    barsWithValue: Ve,\n    xScale: we,\n    yScale: Ce,\n    getIndex: se,\n    getLabel: he,\n    getTooltipLabel: ge,\n    formatValue: ve,\n    getColor: me,\n    getBorderColor: ye,\n    getLabelColor: Se,\n    shouldRenderBarLabel: We,\n    hiddenIds: de,\n    toggleSerie: ce,\n    legendsWithData: Be\n  };\n},\n    Se = [\"isInteractive\", \"animate\", \"motionConfig\", \"theme\", \"renderWrapper\"],\n    ke = function (i) {\n  var t = i.data,\n      n = i.indexBy,\n      r = i.keys,\n      l = i.margin,\n      o = i.width,\n      u = i.height,\n      c = i.groupMode,\n      s = i.layout,\n      h = i.reverse,\n      b = i.minValue,\n      g = i.maxValue,\n      v = i.valueScale,\n      f = i.indexScale,\n      m = i.padding,\n      L = i.innerPadding,\n      w = i.axisTop,\n      C = i.axisRight,\n      M = i.axisBottom,\n      B = void 0 === M ? ee.axisBottom : M,\n      T = i.axisLeft,\n      R = void 0 === T ? ee.axisLeft : T,\n      H = i.enableGridX,\n      P = void 0 === H ? ee.enableGridX : H,\n      E = i.enableGridY,\n      X = void 0 === E ? ee.enableGridY : E,\n      Y = i.gridXValues,\n      D = i.gridYValues,\n      O = i.layers,\n      G = void 0 === O ? ee.layers : O,\n      A = i.barComponent,\n      j = void 0 === A ? ee.barComponent : A,\n      q = i.enableLabel,\n      K = void 0 === q ? ee.enableLabel : q,\n      N = i.label,\n      U = i.labelSkipWidth,\n      Z = void 0 === U ? ee.labelSkipWidth : U,\n      $ = i.labelSkipHeight,\n      _ = void 0 === $ ? ee.labelSkipHeight : $,\n      ae = i.labelTextColor,\n      ie = i.markers,\n      te = void 0 === ie ? ee.markers : ie,\n      ne = i.colorBy,\n      re = i.colors,\n      le = i.defs,\n      oe = void 0 === le ? ee.defs : le,\n      de = i.fill,\n      ue = void 0 === de ? ee.fill : de,\n      ce = i.borderRadius,\n      se = void 0 === ce ? ee.borderRadius : ce,\n      he = i.borderWidth,\n      be = void 0 === he ? ee.borderWidth : he,\n      ge = i.borderColor,\n      ve = i.annotations,\n      fe = void 0 === ve ? ee.annotations : ve,\n      me = i.legendLabel,\n      pe = i.tooltipLabel,\n      xe = i.valueFormat,\n      Se = i.isInteractive,\n      ke = void 0 === Se ? ee.isInteractive : Se,\n      Le = i.tooltip,\n      we = void 0 === Le ? ee.tooltip : Le,\n      Ce = i.onClick,\n      Ve = i.onMouseEnter,\n      We = i.onMouseLeave,\n      Me = i.legends,\n      Be = i.role,\n      Ie = void 0 === Be ? ee.role : Be,\n      Te = i.ariaLabel,\n      Re = i.ariaLabelledBy,\n      He = i.ariaDescribedBy,\n      Pe = i.isFocusable,\n      Ee = void 0 === Pe ? ee.isFocusable : Pe,\n      Fe = i.barAriaLabel,\n      Xe = i.barAriaLabelledBy,\n      Ye = i.barAriaDescribedBy,\n      De = i.initialHiddenIds,\n      Oe = p(),\n      Ge = Oe.animate,\n      Ae = Oe.config,\n      je = x(o, u, l),\n      qe = je.outerWidth,\n      ze = je.outerHeight,\n      Ke = je.margin,\n      Ne = je.innerWidth,\n      Je = je.innerHeight,\n      Qe = ye({\n    indexBy: n,\n    label: N,\n    tooltipLabel: pe,\n    valueFormat: xe,\n    colors: re,\n    colorBy: ne,\n    borderColor: ge,\n    labelTextColor: ae,\n    groupMode: c,\n    layout: s,\n    reverse: h,\n    data: t,\n    keys: r,\n    minValue: b,\n    maxValue: g,\n    margin: Ke,\n    width: Ne,\n    height: Je,\n    padding: m,\n    innerPadding: L,\n    valueScale: v,\n    indexScale: f,\n    enableLabel: K,\n    labelSkipWidth: Z,\n    labelSkipHeight: _,\n    legends: Me,\n    legendLabel: me,\n    initialHiddenIds: De\n  }),\n      Ue = Qe.bars,\n      Ze = Qe.barsWithValue,\n      $e = Qe.xScale,\n      _e = Qe.yScale,\n      ea = Qe.getLabel,\n      aa = Qe.getTooltipLabel,\n      ia = Qe.getBorderColor,\n      ta = Qe.getLabelColor,\n      na = Qe.shouldRenderBarLabel,\n      ra = Qe.toggleSerie,\n      la = Qe.legendsWithData,\n      oa = F(Ze, {\n    keys: function (e) {\n      return e.key;\n    },\n    from: function (e) {\n      return z({\n        borderColor: ia(e),\n        color: e.color,\n        height: 0,\n        labelColor: ta(e),\n        labelOpacity: 0,\n        labelX: e.width / 2,\n        labelY: e.height / 2,\n        transform: \"translate(\" + e.x + \", \" + (e.y + e.height) + \")\",\n        width: e.width\n      }, \"vertical\" === s ? {} : {\n        height: e.height,\n        transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n        width: 0\n      });\n    },\n    enter: function (e) {\n      return {\n        borderColor: ia(e),\n        color: e.color,\n        height: e.height,\n        labelColor: ta(e),\n        labelOpacity: 1,\n        labelX: e.width / 2,\n        labelY: e.height / 2,\n        transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n        width: e.width\n      };\n    },\n    update: function (e) {\n      return {\n        borderColor: ia(e),\n        color: e.color,\n        height: e.height,\n        labelColor: ta(e),\n        labelOpacity: 1,\n        labelX: e.width / 2,\n        labelY: e.height / 2,\n        transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n        width: e.width\n      };\n    },\n    leave: function (e) {\n      return z({\n        borderColor: ia(e),\n        color: e.color,\n        height: 0,\n        labelColor: ta(e),\n        labelOpacity: 0,\n        labelX: e.width / 2,\n        labelY: 0,\n        transform: \"translate(\" + e.x + \", \" + (e.y + e.height) + \")\",\n        width: e.width\n      }, \"vertical\" === s ? {} : {\n        labelX: 0,\n        labelY: e.height / 2,\n        height: e.height,\n        transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n        width: 0\n      });\n    },\n    config: Ae,\n    immediate: !Ge\n  }),\n      da = V(function () {\n    return {\n      borderRadius: se,\n      borderWidth: be,\n      enableLabel: K,\n      isInteractive: ke,\n      labelSkipWidth: Z,\n      labelSkipHeight: _,\n      onClick: Ce,\n      onMouseEnter: Ve,\n      onMouseLeave: We,\n      getTooltipLabel: aa,\n      tooltip: we,\n      isFocusable: Ee,\n      ariaLabel: Fe,\n      ariaLabelledBy: Xe,\n      ariaDescribedBy: Ye\n    };\n  }, [se, be, K, aa, ke, _, Z, Ce, Ve, We, we, Ee, Fe, Xe, Ye]),\n      ua = y(oe, Ue, ue, {\n    dataKey: \"data\",\n    targetKey: \"data.fill\"\n  }),\n      ca = {\n    annotations: null,\n    axes: null,\n    bars: null,\n    grid: null,\n    legends: null,\n    markers: null\n  };\n\n  G.includes(\"annotations\") && (ca.annotations = d(J, {\n    bars: Ue,\n    annotations: fe\n  }, \"annotations\")), G.includes(\"axes\") && (ca.axes = d(e, {\n    xScale: $e,\n    yScale: _e,\n    width: Ne,\n    height: Je,\n    top: w,\n    right: C,\n    bottom: B,\n    left: R\n  }, \"axes\")), G.includes(\"bars\") && (ca.bars = d(I, {\n    children: oa(function (e, a) {\n      return W(j, z({}, da, {\n        bar: a,\n        style: e,\n        shouldRenderLabel: na(a),\n        label: ea(a.data)\n      }));\n    })\n  }, \"bars\")), G.includes(\"grid\") && (ca.grid = d(a, {\n    width: Ne,\n    height: Je,\n    xScale: P ? $e : null,\n    yScale: X ? _e : null,\n    xValues: Y,\n    yValues: D\n  }, \"grid\")), G.includes(\"legends\") && (ca.legends = d(Q, {\n    width: Ne,\n    height: Je,\n    legends: la,\n    toggleSerie: ra\n  }, \"legends\")), G.includes(\"markers\") && (ca.markers = d(S, {\n    markers: te,\n    width: Ne,\n    height: Je,\n    xScale: $e,\n    yScale: _e\n  }, \"markers\"));\n  var sa = V(function () {\n    return z({}, da, {\n      margin: Ke,\n      width: o,\n      height: u,\n      innerWidth: Ne,\n      innerHeight: Je,\n      bars: Ue,\n      legendData: la,\n      enableLabel: K,\n      xScale: $e,\n      yScale: _e,\n      tooltip: we,\n      getTooltipLabel: aa,\n      onClick: Ce,\n      onMouseEnter: Ve,\n      onMouseLeave: We\n    });\n  }, [da, Ke, o, u, Ne, Je, Ue, la, K, $e, _e, we, aa, Ce, Ve, We]);\n  return d(k, {\n    width: qe,\n    height: ze,\n    margin: Ke,\n    defs: ua,\n    role: Ie,\n    ariaLabel: Te,\n    ariaLabelledBy: Re,\n    ariaDescribedBy: He,\n    isFocusable: Ee,\n    children: G.map(function (e, a) {\n      var i;\n      return \"function\" == typeof e ? d(I, {\n        children: W(e, sa)\n      }, a) : null != (i = null == ca ? void 0 : ca[e]) ? i : null;\n    })\n  });\n},\n    Le = function (e) {\n  var a = e.isInteractive,\n      i = void 0 === a ? ee.isInteractive : a,\n      t = e.animate,\n      n = void 0 === t ? ee.animate : t,\n      r = e.motionConfig,\n      l = void 0 === r ? ee.motionConfig : r,\n      o = e.theme,\n      u = e.renderWrapper,\n      c = K(e, Se);\n  return d(m, {\n    animate: n,\n    isInteractive: i,\n    motionConfig: l,\n    renderWrapper: u,\n    theme: o,\n    children: d(ke, z({\n      isInteractive: i\n    }, c))\n  });\n},\n    we = [\"isInteractive\", \"renderWrapper\", \"theme\"],\n    Ce = function (e, a, i, t) {\n  return e.find(function (e) {\n    return w(e.x + a.left, e.y + a.top, e.width, e.height, i, t);\n  });\n},\n    Ve = function (e) {\n  var a = e.data,\n      r = e.indexBy,\n      u = e.keys,\n      c = e.margin,\n      s = e.width,\n      g = e.height,\n      v = e.groupMode,\n      f = e.layout,\n      m = e.reverse,\n      p = e.minValue,\n      y = e.maxValue,\n      S = e.valueScale,\n      k = e.indexScale,\n      w = e.padding,\n      C = e.innerPadding,\n      B = e.axisTop,\n      I = e.axisRight,\n      T = e.axisBottom,\n      P = void 0 === T ? ae.axisBottom : T,\n      E = e.axisLeft,\n      F = void 0 === E ? ae.axisLeft : E,\n      Y = e.enableGridX,\n      D = void 0 === Y ? ae.enableGridX : Y,\n      O = e.enableGridY,\n      G = void 0 === O ? ae.enableGridY : O,\n      A = e.gridXValues,\n      j = e.gridYValues,\n      q = e.layers,\n      K = void 0 === q ? ae.layers : q,\n      N = e.renderBar,\n      J = void 0 === N ? function (e, a) {\n    var i = a.bar,\n        t = i.color,\n        n = i.height,\n        r = i.width,\n        l = i.x,\n        o = i.y,\n        d = a.borderColor,\n        u = a.borderRadius,\n        c = a.borderWidth,\n        s = a.label,\n        h = a.labelColor,\n        b = a.shouldRenderLabel;\n\n    if (e.fillStyle = t, c > 0 && (e.strokeStyle = d, e.lineWidth = c), e.beginPath(), u > 0) {\n      var g = Math.min(u, n);\n      e.moveTo(l + g, o), e.lineTo(l + r - g, o), e.quadraticCurveTo(l + r, o, l + r, o + g), e.lineTo(l + r, o + n - g), e.quadraticCurveTo(l + r, o + n, l + r - g, o + n), e.lineTo(l + g, o + n), e.quadraticCurveTo(l, o + n, l, o + n - g), e.lineTo(l, o + g), e.quadraticCurveTo(l, o, l + g, o), e.closePath();\n    } else e.rect(l, o, r, n);\n\n    e.fill(), c > 0 && e.stroke(), b && (e.textBaseline = \"middle\", e.textAlign = \"center\", e.fillStyle = h, e.fillText(s, l + r / 2, o + n / 2));\n  } : N,\n      Q = e.enableLabel,\n      U = void 0 === Q ? ae.enableLabel : Q,\n      Z = e.label,\n      $ = e.labelSkipWidth,\n      _ = void 0 === $ ? ae.labelSkipWidth : $,\n      ee = e.labelSkipHeight,\n      ie = void 0 === ee ? ae.labelSkipHeight : ee,\n      te = e.labelTextColor,\n      ne = e.colorBy,\n      re = e.colors,\n      le = e.borderRadius,\n      oe = void 0 === le ? ae.borderRadius : le,\n      de = e.borderWidth,\n      ue = void 0 === de ? ae.borderWidth : de,\n      ce = e.borderColor,\n      se = e.annotations,\n      he = void 0 === se ? ae.annotations : se,\n      be = e.legendLabel,\n      ge = e.tooltipLabel,\n      ve = e.valueFormat,\n      fe = e.isInteractive,\n      me = void 0 === fe ? ae.isInteractive : fe,\n      pe = e.tooltip,\n      xe = void 0 === pe ? ae.tooltip : pe,\n      Se = e.onClick,\n      ke = e.onMouseEnter,\n      Le = e.onMouseLeave,\n      we = e.legends,\n      Ve = e.pixelRatio,\n      We = void 0 === Ve ? ae.pixelRatio : Ve,\n      Me = e.canvasRef,\n      Be = R(null),\n      Ie = b(),\n      Te = x(s, g, c),\n      Re = Te.margin,\n      He = Te.innerWidth,\n      Pe = Te.innerHeight,\n      Ee = Te.outerWidth,\n      Fe = Te.outerHeight,\n      Xe = ye({\n    indexBy: r,\n    label: Z,\n    tooltipLabel: ge,\n    valueFormat: ve,\n    colors: re,\n    colorBy: ne,\n    borderColor: ce,\n    labelTextColor: te,\n    groupMode: v,\n    layout: f,\n    reverse: m,\n    data: a,\n    keys: u,\n    minValue: p,\n    maxValue: y,\n    margin: Re,\n    width: He,\n    height: Pe,\n    padding: w,\n    innerPadding: C,\n    valueScale: S,\n    indexScale: k,\n    enableLabel: U,\n    labelSkipWidth: _,\n    labelSkipHeight: ie,\n    legends: we,\n    legendLabel: be\n  }),\n      Ye = Xe.bars,\n      De = Xe.barsWithValue,\n      Oe = Xe.xScale,\n      Ge = Xe.yScale,\n      Ae = Xe.getLabel,\n      je = Xe.getTooltipLabel,\n      qe = Xe.getBorderColor,\n      ze = Xe.getLabelColor,\n      Ke = Xe.shouldRenderBarLabel,\n      Ne = Xe.legendsWithData,\n      Je = X(),\n      Qe = Je.showTooltipFromEvent,\n      Ue = Je.hideTooltip,\n      Ze = l({\n    annotations: n({\n      data: Ye,\n      annotations: he,\n      getPosition: function (e) {\n        return {\n          x: e.x,\n          y: e.y\n        };\n      },\n      getDimensions: function (e) {\n        var a = e.width,\n            i = e.height;\n        return {\n          width: a,\n          height: i,\n          size: Math.max(a, i)\n        };\n      }\n    })\n  }),\n      $e = V(function () {\n    return {\n      borderRadius: oe,\n      borderWidth: ue,\n      isInteractive: me,\n      isFocusable: !1,\n      labelSkipWidth: _,\n      labelSkipHeight: ie,\n      margin: Re,\n      width: s,\n      height: g,\n      innerWidth: He,\n      innerHeight: Pe,\n      bars: Ye,\n      legendData: Ne,\n      enableLabel: U,\n      xScale: Oe,\n      yScale: Ge,\n      tooltip: xe,\n      getTooltipLabel: je,\n      onClick: Se,\n      onMouseEnter: ke,\n      onMouseLeave: Le\n    };\n  }, [oe, ue, me, _, ie, Re, s, g, He, Pe, Ye, Ne, U, Oe, Ge, xe, je, Se, ke, Le]);\n\n  H(function () {\n    var e,\n        a = null == (e = Be.current) ? void 0 : e.getContext(\"2d\");\n    Be.current && a && (Be.current.width = Ee * We, Be.current.height = Fe * We, a.scale(We, We), a.fillStyle = Ie.background, a.fillRect(0, 0, Ee, Fe), a.translate(Re.left, Re.top), K.forEach(function (e) {\n      \"grid\" === e ? \"number\" == typeof Ie.grid.line.strokeWidth && Ie.grid.line.strokeWidth > 0 && (a.lineWidth = Ie.grid.line.strokeWidth, a.strokeStyle = Ie.grid.line.stroke, D && i(a, {\n        width: s,\n        height: g,\n        scale: Oe,\n        axis: \"x\",\n        values: A\n      }), G && i(a, {\n        width: s,\n        height: g,\n        scale: Ge,\n        axis: \"y\",\n        values: j\n      })) : \"axes\" === e ? t(a, {\n        xScale: Oe,\n        yScale: Ge,\n        width: He,\n        height: Pe,\n        top: B,\n        right: I,\n        bottom: P,\n        left: F,\n        theme: Ie\n      }) : \"bars\" === e ? De.forEach(function (e) {\n        J(a, {\n          bar: e,\n          borderColor: qe(e),\n          borderRadius: oe,\n          borderWidth: ue,\n          label: Ae(e.data),\n          labelColor: ze(e),\n          shouldRenderLabel: Ke(e)\n        });\n      }) : \"legends\" === e ? Ne.forEach(function (e) {\n        var i = e[0],\n            t = e[1];\n        h(a, z({}, i, {\n          data: t,\n          containerWidth: He,\n          containerHeight: Pe,\n          theme: Ie\n        }));\n      }) : \"annotations\" === e ? o(a, {\n        annotations: Ze,\n        theme: Ie\n      }) : \"function\" == typeof e && e(a, $e);\n    }), a.save());\n  }, [P, F, I, B, De, oe, ue, Ze, D, G, qe, Ae, ze, A, j, v, g, Pe, He, $e, K, f, Ne, Re.left, Re.top, Fe, Ee, We, J, Oe, Ge, m, Ke, Ie, s]);\n\n  var _e = M(function (e) {\n    if (Ye && Be.current) {\n      var a = L(Be.current, e),\n          i = a[0],\n          t = a[1],\n          n = Ce(Ye, Re, i, t);\n      void 0 !== n ? (Qe(W(xe, z({}, n.data, {\n        color: n.color,\n        label: n.label,\n        value: Number(n.data.value)\n      })), e), \"mouseenter\" === e.type && (null == ke || ke(n.data, e))) : Ue();\n    }\n  }, [Ue, Re, ke, Ye, Qe, xe]),\n      ea = M(function (e) {\n    if (Ye && Be.current) {\n      Ue();\n      var a = L(Be.current, e),\n          i = a[0],\n          t = a[1],\n          n = Ce(Ye, Re, i, t);\n      n && (null == Le || Le(n.data, e));\n    }\n  }, [Ue, Re, Le, Ye]),\n      aa = M(function (e) {\n    if (Ye && Be.current) {\n      var a = L(Be.current, e),\n          i = a[0],\n          t = a[1],\n          n = Ce(Ye, Re, i, t);\n      void 0 !== n && (null == Se || Se(z({}, n.data, {\n        color: n.color\n      }), e));\n    }\n  }, [Re, Se, Ye]);\n\n  return d(\"canvas\", {\n    ref: function (e) {\n      Be.current = e, Me && \"current\" in Me && (Me.current = e);\n    },\n    width: Ee * We,\n    height: Fe * We,\n    style: {\n      width: Ee,\n      height: Fe,\n      cursor: me ? \"auto\" : \"normal\"\n    },\n    onMouseEnter: me ? _e : void 0,\n    onMouseMove: me ? _e : void 0,\n    onMouseLeave: me ? ea : void 0,\n    onClick: me ? aa : void 0\n  });\n},\n    We = T(function (e, a) {\n  var i = e.isInteractive,\n      t = e.renderWrapper,\n      n = e.theme,\n      r = K(e, we);\n  return d(m, {\n    isInteractive: i,\n    renderWrapper: t,\n    theme: n,\n    animate: !1,\n    children: d(Ve, z({}, r, {\n      canvasRef: a\n    }))\n  });\n}),\n    Me = function (e) {\n  return d(C, {\n    children: function (a) {\n      var i = a.width,\n          t = a.height;\n      return d(Le, z({\n        width: i,\n        height: t\n      }, e));\n    }\n  });\n},\n    Be = T(function (e, a) {\n  return d(C, {\n    children: function (i) {\n      var t = i.width,\n          n = i.height;\n      return d(We, z({\n        width: t,\n        height: n\n      }, e, {\n        ref: a\n      }));\n    }\n  });\n});\n\nexport { Le as Bar, We as BarCanvas, Z as BarItem, Me as ResponsiveBar, Be as ResponsiveBarCanvas, ae as canvasDefaultProps, _ as defaultProps, ee as svgDefaultProps };","map":{"version":3,"mappings":"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","names":["BarAnnotations","bars","annotations","boundAnnotations","useAnnotations","data","getPosition","bar","x","width","y","height","getDimensions","size","Math","max","_jsx","map","annotation","i","Annotation","BarLegends","legends","toggleSerie","legend","BoxLegendSvg","containerWidth","containerHeight","dataFrom","undefined","BarItem","style","borderColor","color","labelColor","labelOpacity","labelX","labelY","transform","borderRadius","borderWidth","label","shouldRenderLabel","isInteractive","onClick","onMouseEnter","onMouseLeave","tooltip","isFocusable","ariaLabel","ariaLabelledBy","ariaDescribedBy","theme","useTheme","useTooltip","showTooltipFromEvent","showTooltipAt","hideTooltip","renderTooltip","useMemo","createElement","handleClick","useCallback","event","handleTooltip","handleMouseEnter","handleMouseLeave","handleFocus","absX","absY","handleBlur","_jsxs","animated","g","rect","to","value","rx","ry","fill","strokeWidth","stroke","focusable","tabIndex","onMouseMove","onFocus","onBlur","text","textAnchor","dominantBaseline","fillOpacity","labels","pointerEvents","defaultProps","indexBy","keys","groupMode","layout","reverse","minValue","maxValue","valueScale","type","indexScale","round","padding","innerPadding","axisBottom","axisLeft","enableGridX","enableGridY","enableLabel","labelSkipWidth","labelSkipHeight","labelTextColor","from","colorBy","colors","scheme","BasicTooltip","id","formattedValue","enableChip","tooltipLabel","datum","indexValue","initialHiddenIds","markers","svgDefaultProps","layers","barComponent","defs","animate","motionConfig","role","canvasDefaultProps","pixelRatio","window","devicePixelRatio","getIndexScale","getIndex","axis","computeScale","all","min","normalizeData","item","reduce","acc","key","filterNullValues","Object","coerceValue","Number","gt","other","lt","range","start","end","Array","repeat","_","index","clampToZero","generateVerticalGroupedBars","barWidth","yRef","formatValue","getColor","getTooltipLabel","u","xScale","yScale","margin","compare","cleanedData","forEach","domain","length","d","rawValue","barHeight","getHeight","barData","hidden","push","left","top","generateHorizontalGroupedBars","xRef","c","getWidth","generateGroupedBars","s","indexScaleConfig","hiddenIds","v","props","filter","includes","otherAxis","scaleSpec","clampMin","values","entry","k","Boolean","isFinite","scale","bandwidth","params","a","ge","flattenDeep","arr","some","isArray","concat","generateVerticalStackedBars","stackedData","stackedDataItem","getY","t","generateHorizontalStackedBars","getX","generateStackedBars","array","b","stack","offset","stackOffsetDiverging","num","getLegendData","direction","legendLabel","getLegendLabel","getPropertyAccessor","_uniqBy","getLegendDataForIndexes","getLegendDataForKeys","useBar","valueFormat","useState","setHiddenIds","state","indexOf","usePropertyAccessor","getLabel","useValueFormatter","useOrdinalColorScale","getBorderColor","useInheritedColor","getLabelColor","barsWithValue","shouldRenderBarLabel","legendData","find","legendsWithData","InnerBar","partialMargin","axisTop","axisRight","gridXValues","gridYValues","barAriaLabel","barAriaLabelledBy","barAriaDescribedBy","useMotionConfig","springConfig","config","useDimensions","outerWidth","outerHeight","innerWidth","innerHeight","transition","useTransition","enter","update","leave","immediate","commonProps","boundDefs","bindDefs","dataKey","targetKey","layerById","axes","grid","Axes","right","bottom","Fragment","Grid","xValues","yValues","CartesianMarkers","layerContext","SvgWrapper","layer","Bar","renderWrapper","otherProps","Container","findBarUnderCursor","nodes","node","isCursorInRect","InnerBarCanvas","renderBar","ctx","fillStyle","strokeStyle","lineWidth","beginPath","radius","moveTo","lineTo","quadraticCurveTo","closePath","textBaseline","textAlign","fillText","N","Q","canvasRef","canvasEl","useRef","useComputedAnnotations","useEffect","current","_canvasEl$current","getContext","background","fillRect","translate","line","renderGridLinesToCanvas","renderAxesToCanvas","renderLegendToCanvas","renderAnnotationsToCanvas","save","handleMouseHover","getRelativeCursor","ref","canvas","cursor","BarCanvas","forwardRef","children","ResponsiveBar","ResponsiveWrapper","ResponsiveBarCanvas"],"sources":["/Users/jstanton/Desktop/Coding/FieldDockMain/node_modules/@nivo/bar/src/BarAnnotations.tsx","/Users/jstanton/Desktop/Coding/FieldDockMain/node_modules/@nivo/bar/src/BarLegends.tsx","/Users/jstanton/Desktop/Coding/FieldDockMain/node_modules/@nivo/bar/src/BarItem.tsx","/Users/jstanton/Desktop/Coding/FieldDockMain/node_modules/@nivo/bar/src/props.ts","/Users/jstanton/Desktop/Coding/FieldDockMain/node_modules/@nivo/bar/src/BarTooltip.tsx","/Users/jstanton/Desktop/Coding/FieldDockMain/node_modules/@nivo/bar/src/compute/common.ts","/Users/jstanton/Desktop/Coding/FieldDockMain/node_modules/@nivo/bar/src/compute/grouped.ts","/Users/jstanton/Desktop/Coding/FieldDockMain/node_modules/@nivo/bar/src/compute/stacked.ts","/Users/jstanton/Desktop/Coding/FieldDockMain/node_modules/@nivo/bar/src/compute/legends.ts","/Users/jstanton/Desktop/Coding/FieldDockMain/node_modules/@nivo/bar/src/hooks.ts","/Users/jstanton/Desktop/Coding/FieldDockMain/node_modules/@nivo/bar/src/Bar.tsx","/Users/jstanton/Desktop/Coding/FieldDockMain/node_modules/@nivo/bar/src/BarCanvas.tsx","/Users/jstanton/Desktop/Coding/FieldDockMain/node_modules/@nivo/bar/src/ResponsiveBar.tsx","/Users/jstanton/Desktop/Coding/FieldDockMain/node_modules/@nivo/bar/src/ResponsiveBarCanvas.tsx"],"sourcesContent":["import { Annotation, useAnnotations } from '@nivo/annotations'\nimport { BarAnnotationsProps } from './types'\n\nexport const BarAnnotations = <RawDatum,>({ bars, annotations }: BarAnnotationsProps<RawDatum>) => {\n    const boundAnnotations = useAnnotations({\n        data: bars,\n        annotations,\n        getPosition: bar => ({\n            x: bar.x + bar.width / 2,\n            y: bar.y + bar.height / 2,\n        }),\n        getDimensions: ({ height, width }) => ({\n            width,\n            height,\n            size: Math.max(width, height),\n        }),\n    })\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n","import { BoxLegendSvg } from '@nivo/legends'\nimport { BarLegendProps, LegendData } from './types'\n\ninterface BarLegendsProps {\n    width: number\n    height: number\n    legends: [BarLegendProps, LegendData[]][]\n    toggleSerie: (id: string | number) => void\n}\n\nexport const BarLegends = ({ width, height, legends, toggleSerie }: BarLegendsProps) => (\n    <>\n        {legends.map(([legend, data], i) => (\n            <BoxLegendSvg\n                key={i}\n                {...legend}\n                containerWidth={width}\n                containerHeight={height}\n                data={legend.data ?? data}\n                toggleSerie={\n                    legend.toggleSerie && legend.dataFrom === 'keys' ? toggleSerie : undefined\n                }\n            />\n        ))}\n    </>\n)\n","import { createElement, MouseEvent, useCallback, useMemo } from 'react'\nimport { animated, to } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { BarDatum, BarItemProps } from './types'\n\nexport const BarItem = <RawDatum extends BarDatum>({\n    bar: { data, ...bar },\n\n    style: {\n        borderColor,\n        color,\n        height,\n        labelColor,\n        labelOpacity,\n        labelX,\n        labelY,\n        transform,\n        width,\n    },\n\n    borderRadius,\n    borderWidth,\n\n    label,\n    shouldRenderLabel,\n\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    tooltip,\n\n    isFocusable,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: BarItemProps<RawDatum>) => {\n    const theme = useTheme()\n    const { showTooltipFromEvent, showTooltipAt, hideTooltip } = useTooltip()\n\n    const renderTooltip = useMemo(\n        () => () => createElement(tooltip, { ...bar, ...data }),\n        [tooltip, bar, data]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onClick?.({ color: bar.color, ...data }, event)\n        },\n        [bar, data, onClick]\n    )\n    const handleTooltip = useCallback(\n        (event: MouseEvent<SVGRectElement>) => showTooltipFromEvent(renderTooltip(), event),\n        [showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseEnter?.(data, event)\n            showTooltipFromEvent(renderTooltip(), event)\n        },\n        [data, onMouseEnter, showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseLeave?.(data, event)\n            hideTooltip()\n        },\n        [data, hideTooltip, onMouseLeave]\n    )\n\n    // extra handlers to allow keyboard navigation\n    const handleFocus = useCallback(() => {\n        showTooltipAt(renderTooltip(), [bar.absX + bar.width / 2, bar.absY])\n    }, [showTooltipAt, renderTooltip, bar])\n    const handleBlur = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    return (\n        <animated.g transform={transform}>\n            <animated.rect\n                width={to(width, value => Math.max(value, 0))}\n                height={to(height, value => Math.max(value, 0))}\n                rx={borderRadius}\n                ry={borderRadius}\n                fill={data.fill ?? color}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                focusable={isFocusable}\n                tabIndex={isFocusable ? 0 : undefined}\n                aria-label={ariaLabel ? ariaLabel(data) : undefined}\n                aria-labelledby={ariaLabelledBy ? ariaLabelledBy(data) : undefined}\n                aria-describedby={ariaDescribedBy ? ariaDescribedBy(data) : undefined}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleTooltip : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n                onFocus={isInteractive && isFocusable ? handleFocus : undefined}\n                onBlur={isInteractive && isFocusable ? handleBlur : undefined}\n            />\n            {shouldRenderLabel && (\n                <animated.text\n                    x={labelX}\n                    y={labelY}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    fillOpacity={labelOpacity}\n                    style={{\n                        ...theme.labels.text,\n                        pointerEvents: 'none',\n                        fill: labelColor,\n                    }}\n                >\n                    {label}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n","import { BarItem } from './BarItem'\nimport { BarTooltip } from './BarTooltip'\nimport { ComputedDatum } from './types'\nimport { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ScaleBandSpec, ScaleSpec } from '@nivo/scales'\n\nexport const defaultProps = {\n    indexBy: 'id',\n    keys: ['value'],\n\n    groupMode: 'stacked' as const,\n    layout: 'vertical' as const,\n    reverse: false,\n\n    minValue: 'auto' as const,\n    maxValue: 'auto' as const,\n\n    valueScale: { type: 'linear' } as ScaleSpec,\n    indexScale: { type: 'band', round: true } as ScaleBandSpec,\n\n    padding: 0.1,\n    innerPadding: 0,\n\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: false,\n    enableGridY: true,\n\n    enableLabel: true,\n    label: 'formattedValue',\n    labelSkipWidth: 0,\n    labelSkipHeight: 0,\n    labelTextColor: { from: 'theme', theme: 'labels.text.fill' },\n\n    colorBy: 'id' as const,\n    colors: { scheme: 'nivo' } as OrdinalColorScaleConfig,\n\n    borderRadius: 0,\n    borderWidth: 0,\n    borderColor: { from: 'color' } as InheritedColorConfig<any>,\n\n    isInteractive: true,\n    tooltip: BarTooltip,\n    tooltipLabel: <RawDatum>(datum: ComputedDatum<RawDatum>) => `${datum.id} - ${datum.indexValue}`,\n\n    legends: [],\n    initialHiddenIds: [],\n    annotations: [],\n    markers: [],\n}\n\nexport const svgDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'markers', 'legends', 'annotations'],\n    barComponent: BarItem,\n\n    defs: [],\n    fill: [],\n\n    animate: true,\n    motionConfig: 'default',\n\n    role: 'img',\n    isFocusable: false,\n}\n\nexport const canvasDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'legends', 'annotations'],\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { BarTooltipProps } from './types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nexport const BarTooltip = <RawDatum,>({ color, label, ...data }: BarTooltipProps<RawDatum>) => {\n    return <BasicTooltip id={label} value={data.formattedValue} enableChip={true} color={color} />\n}\n","import { ScaleBandSpec, ScaleBand, computeScale } from '@nivo/scales'\n\n/**\n * Generates indexed scale.\n */\nexport const getIndexScale = <RawDatum>(\n    data: RawDatum[],\n    getIndex: (datum: RawDatum) => string,\n    padding: number,\n    indexScale: ScaleBandSpec,\n    size: number,\n    axis: 'x' | 'y'\n) => {\n    return (\n        computeScale(\n            indexScale,\n            { all: data.map(getIndex), min: 0, max: 0 },\n            size,\n            axis\n        ) as ScaleBand<string>\n    ).padding(padding)\n}\n\n/**\n * This method ensures all the provided keys exist in the entire series.\n */\nexport const normalizeData = <RawDatum>(data: RawDatum[], keys: string[]) =>\n    data.map(\n        item =>\n            ({\n                ...keys.reduce<Record<string, unknown>>((acc, key) => {\n                    acc[key] = null\n                    return acc\n                }, {}),\n                ...item,\n            } as RawDatum)\n    )\n\nexport const filterNullValues = <RawDatum extends Record<string, unknown>>(data: RawDatum) =>\n    Object.keys(data).reduce<Record<string, unknown>>((acc, key) => {\n        if (data[key]) {\n            acc[key] = data[key]\n        }\n        return acc\n    }, {}) as Exclude<RawDatum, null | undefined | false | '' | 0>\n\nexport const coerceValue = <T>(value: T) => [value, Number(value)] as const\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    data: RawDatum[]\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    keys: string[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst gt = (value: number, other: number) => value > other\nconst lt = (value: number, other: number) => value < other\n\nconst range = (start: number, end: number) =>\n    Array.from(' '.repeat(end - start), (_, index) => start + index)\n\nconst clampToZero = (value: number) => (gt(value, 0) ? 0 : value)\nconst zeroIfNotFinite = (value: number) => (isFinite(value) ? value : 0)\n\n/**\n * Generates x/y scales & bars for vertical grouped bar chart.\n */\nconst generateVerticalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding = 0,\n        keys,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean,\n    yRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getY = (d: number) => (compare(d, 0) ? yScale(d) ?? 0 : yRef)\n    const getHeight = (d: number, y: number) => (compare(d, 0) ? yRef - y : (yScale(d) ?? 0) - yRef)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, xScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = (xScale(indexValue) ?? 0) + barWidth * i + innerPadding * i\n            const y = getY(value)\n            const barHeight = getHeight(value, y)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal grouped bar chart.\n */\nconst generateHorizontalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getIndex,\n        getColor,\n        getTooltipLabel,\n        keys,\n        innerPadding = 0,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean,\n    xRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getX = (d: number) => (compare(d, 0) ? xRef : xScale(d) ?? 0)\n    const getWidth = (d: number, x: number) => (compare(d, 0) ? (xScale(d) ?? 0) - xRef : xRef - x)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, yScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = getX(value)\n            const y = (yScale(indexValue) ?? 0) + barHeight * i + innerPadding * i\n            const barWidth = getWidth(value, x)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for grouped bar chart.\n */\nexport const generateGroupedBars = <RawDatum extends BarDatum>({\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    innerPadding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: string[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const data = normalizeData(props.data, keys)\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const clampMin = scaleSpec.min === 'auto' ? clampToZero : (value: number) => value\n\n    const values = data\n        .reduce<number[]>((acc, entry) => [...acc, ...keys.map(k => entry[k] as number)], [])\n        .filter(Boolean)\n    const min = clampMin(Math.min(...values))\n    const max = zeroIfNotFinite(Math.max(...values))\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const bandwidth = (indexScale.bandwidth() - innerPadding * (keys.length - 1)) / keys.length\n    const params = [\n        { ...props, data, keys, innerPadding, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n        scale(0) ?? 0,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalGroupedBars(...params)\n                : generateHorizontalGroupedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { Series, SeriesPoint, stack, stackOffsetDiverging } from 'd3-shape'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype StackDatum<RawDatum> = SeriesPoint<RawDatum>\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    stackedData: Series<RawDatum, string>[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst flattenDeep = <T>(arr: T[]): T =>\n    arr.some(Array.isArray) ? flattenDeep(([] as T[]).concat(...arr)) : (arr as unknown as T)\n\nconst filterZerosIfLog = (array: number[], type: string) =>\n    type === 'log' ? array.filter(num => num !== 0) : array\n\n/**\n * Generates x/y scales & bars for vertical stacked bar chart.\n */\nconst generateVerticalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getY = (d: StackDatum<RawDatum>) => yScale(d[reverse ? 0 : 1])\n    const getHeight = (d: StackDatum<RawDatum>, y: number) => (yScale(d[reverse ? 1 : 0]) ?? 0) - y\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        xScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const x = xScale(getIndex(d.data)) ?? 0\n            const y = (getY(d) ?? 0) + innerPadding * 0.5\n            const barHeight = getHeight(d, y) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal stacked bar chart.\n */\nconst generateHorizontalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getX = (d: StackDatum<RawDatum>) => xScale(d[reverse ? 1 : 0])\n    const getWidth = (d: StackDatum<RawDatum>, x: number) => (xScale(d[reverse ? 0 : 1]) ?? 0) - x\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        yScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const y = yScale(getIndex(d.data)) ?? 0\n            const x = (getX(d) ?? 0) + innerPadding * 0.5\n            const barWidth = getWidth(d, x) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for stacked bar chart.\n */\nexport const generateStackedBars = <RawDatum extends BarDatum>({\n    data,\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: string[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const stackedData = stack<RawDatum, string>().keys(keys).offset(stackOffsetDiverging)(\n        normalizeData(data, keys)\n    )\n\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const values = filterZerosIfLog(\n        flattenDeep(stackedData as unknown as number[][]),\n        valueScale.type\n    )\n    const min = Math.min(...values)\n    const max = Math.max(...values)\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const innerPadding = props.innerPadding > 0 ? props.innerPadding : 0\n    const bandwidth = indexScale.bandwidth()\n    const params = [\n        { ...props, innerPadding, stackedData, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalStackedBars(...params)\n                : generateHorizontalStackedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import {\n    BarDatum,\n    BarLegendProps,\n    BarSvgProps,\n    BarsWithHidden,\n    LegendData,\n    LegendLabelDatum,\n} from '../types'\nimport { getPropertyAccessor } from '@nivo/core'\nimport { uniqBy } from 'lodash'\n\nexport const getLegendDataForKeys = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    direction: BarLegendProps['direction'],\n    groupMode: NonNullable<BarSvgProps<RawDatum>['groupMode']>,\n    reverse: boolean,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.id,\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (\n        (layout === 'vertical' &&\n            groupMode === 'stacked' &&\n            direction === 'column' &&\n            reverse !== true) ||\n        (layout === 'horizontal' && groupMode === 'stacked' && reverse === true)\n    ) {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendDataForIndexes = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.indexValue ?? '',\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (layout === 'horizontal') {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendData = <RawDatum extends BarDatum>({\n    bars,\n    direction,\n    from,\n    groupMode,\n    layout,\n    legendLabel,\n    reverse,\n}: Pick<Required<BarSvgProps<RawDatum>>, 'layout' | 'groupMode' | 'reverse'> & {\n    bars: BarsWithHidden<RawDatum>\n    direction: BarLegendProps['direction']\n    from: BarLegendProps['dataFrom']\n    legendLabel: BarSvgProps<RawDatum>['legendLabel']\n}) => {\n    const getLegendLabel = getPropertyAccessor(\n        legendLabel ?? (from === 'indexes' ? 'indexValue' : 'id')\n    )\n\n    if (from === 'indexes') {\n        return getLegendDataForIndexes(bars, layout, getLegendLabel)\n    }\n\n    return getLegendDataForKeys(bars, layout, direction, groupMode, reverse, getLegendLabel)\n}\n","import { useCallback, useMemo, useState } from 'react'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport { usePropertyAccessor, useTheme, useValueFormatter, Margin } from '@nivo/core'\nimport {\n    DataProps,\n    BarCommonProps,\n    BarDatum,\n    ComputedBarDatumWithValue,\n    LegendData,\n    BarLegendProps,\n} from './types'\nimport { defaultProps } from './props'\nimport { generateGroupedBars, generateStackedBars, getLegendData } from './compute'\n\nexport const useBar = <RawDatum extends BarDatum>({\n    indexBy = defaultProps.indexBy,\n    keys = defaultProps.keys,\n    label = defaultProps.label,\n    tooltipLabel = defaultProps.tooltipLabel,\n    valueFormat,\n    colors = defaultProps.colors,\n    colorBy = defaultProps.colorBy,\n    borderColor = defaultProps.borderColor,\n    labelTextColor = defaultProps.labelTextColor,\n    groupMode = defaultProps.groupMode,\n    layout = defaultProps.layout,\n    reverse = defaultProps.reverse,\n    data,\n    minValue = defaultProps.minValue,\n    maxValue = defaultProps.maxValue,\n    margin,\n    width,\n    height,\n    padding = defaultProps.padding,\n    innerPadding = defaultProps.innerPadding,\n    valueScale = defaultProps.valueScale,\n    indexScale = defaultProps.indexScale,\n    initialHiddenIds = defaultProps.initialHiddenIds,\n    enableLabel = defaultProps.enableLabel,\n    labelSkipWidth = defaultProps.labelSkipWidth,\n    labelSkipHeight = defaultProps.labelSkipHeight,\n    legends = defaultProps.legends,\n    legendLabel,\n}: {\n    indexBy?: BarCommonProps<RawDatum>['indexBy']\n    label?: BarCommonProps<RawDatum>['label']\n    tooltipLabel?: BarCommonProps<RawDatum>['tooltipLabel']\n    valueFormat?: BarCommonProps<RawDatum>['valueFormat']\n    colors?: BarCommonProps<RawDatum>['colors']\n    colorBy?: BarCommonProps<RawDatum>['colorBy']\n    borderColor?: BarCommonProps<RawDatum>['borderColor']\n    labelTextColor?: BarCommonProps<RawDatum>['labelTextColor']\n    groupMode?: BarCommonProps<RawDatum>['groupMode']\n    layout?: BarCommonProps<RawDatum>['layout']\n    reverse?: BarCommonProps<RawDatum>['reverse']\n    data: DataProps<RawDatum>['data']\n    keys?: BarCommonProps<RawDatum>['keys']\n    minValue?: BarCommonProps<RawDatum>['minValue']\n    maxValue?: BarCommonProps<RawDatum>['maxValue']\n    margin: Margin\n    width: number\n    height: number\n    padding?: BarCommonProps<RawDatum>['padding']\n    innerPadding?: BarCommonProps<RawDatum>['innerPadding']\n    valueScale?: BarCommonProps<RawDatum>['valueScale']\n    indexScale?: BarCommonProps<RawDatum>['indexScale']\n    initialHiddenIds?: BarCommonProps<RawDatum>['initialHiddenIds']\n    enableLabel?: BarCommonProps<RawDatum>['enableLabel']\n    labelSkipWidth?: BarCommonProps<RawDatum>['labelSkipWidth']\n    labelSkipHeight?: BarCommonProps<RawDatum>['labelSkipHeight']\n    legends?: BarCommonProps<RawDatum>['legends']\n    legendLabel?: BarCommonProps<RawDatum>['legendLabel']\n}) => {\n    const [hiddenIds, setHiddenIds] = useState(initialHiddenIds ?? [])\n    const toggleSerie = useCallback(id => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const getIndex = usePropertyAccessor(indexBy)\n    const getLabel = usePropertyAccessor(label)\n    const getTooltipLabel = usePropertyAccessor(tooltipLabel)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale(colors, colorBy)\n    const getBorderColor = useInheritedColor<ComputedBarDatumWithValue<RawDatum>>(\n        borderColor,\n        theme\n    )\n    const getLabelColor = useInheritedColor<ComputedBarDatumWithValue<RawDatum>>(\n        labelTextColor,\n        theme\n    )\n\n    const generateBars = groupMode === 'grouped' ? generateGroupedBars : generateStackedBars\n    const { bars, xScale, yScale } = generateBars({\n        layout,\n        reverse,\n        data,\n        getIndex,\n        keys,\n        minValue,\n        maxValue,\n        width,\n        height,\n        getColor,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        hiddenIds,\n        formatValue,\n        getTooltipLabel,\n        margin,\n    })\n\n    const barsWithValue = useMemo(\n        () =>\n            bars\n                .filter(\n                    (bar): bar is ComputedBarDatumWithValue<RawDatum> => bar.data.value !== null\n                )\n                .map((bar, index) => ({\n                    ...bar,\n                    index,\n                })),\n        [bars]\n    )\n\n    const shouldRenderBarLabel = useCallback(\n        ({ width, height }: { height: number; width: number }) => {\n            if (!enableLabel) return false\n            if (labelSkipWidth > 0 && width < labelSkipWidth) return false\n            if (labelSkipHeight > 0 && height < labelSkipHeight) return false\n            return true\n        },\n        [enableLabel, labelSkipWidth, labelSkipHeight]\n    )\n\n    const legendData = useMemo(\n        () =>\n            keys.map(key => {\n                const bar = bars.find(bar => bar.data.id === key)\n\n                return { ...bar, data: { id: key, ...bar?.data, hidden: hiddenIds.includes(key) } }\n            }),\n        [hiddenIds, keys, bars]\n    )\n\n    const legendsWithData: [BarLegendProps, LegendData[]][] = useMemo(\n        () =>\n            legends.map(legend => {\n                const data = getLegendData({\n                    bars: legend.dataFrom === 'keys' ? legendData : bars,\n                    direction: legend.direction,\n                    from: legend.dataFrom,\n                    groupMode,\n                    layout,\n                    legendLabel,\n                    reverse,\n                })\n\n                return [legend, data]\n            }),\n        [legends, legendData, bars, groupMode, layout, legendLabel, reverse]\n    )\n\n    return {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getIndex,\n        getLabel,\n        getTooltipLabel,\n        formatValue,\n        getColor,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        hiddenIds,\n        toggleSerie,\n        legendsWithData,\n    }\n}\n","import { Axes, Grid } from '@nivo/axes'\nimport { BarAnnotations } from './BarAnnotations'\nimport {\n    BarCustomLayerProps,\n    BarDatum,\n    BarLayer,\n    BarLayerId,\n    BarSvgProps,\n    ComputedBarDatumWithValue,\n} from './types'\nimport { BarLegends } from './BarLegends'\nimport {\n    CartesianMarkers,\n    Container,\n    SvgWrapper,\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    useMotionConfig,\n} from '@nivo/core'\nimport { Fragment, ReactNode, createElement, useMemo } from 'react'\nimport { svgDefaultProps } from './props'\nimport { useTransition } from '@react-spring/web'\nimport { useBar } from './hooks'\n\ntype InnerBarProps<RawDatum extends BarDatum> = Omit<\n    BarSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerBar = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = svgDefaultProps.layers as BarLayer<RawDatum>[],\n    barComponent = svgDefaultProps.barComponent,\n\n    enableLabel = svgDefaultProps.enableLabel,\n    label,\n    labelSkipWidth = svgDefaultProps.labelSkipWidth,\n    labelSkipHeight = svgDefaultProps.labelSkipHeight,\n    labelTextColor,\n\n    markers = svgDefaultProps.markers,\n\n    colorBy,\n    colors,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n    borderRadius = svgDefaultProps.borderRadius,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = svgDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    isFocusable = svgDefaultProps.isFocusable,\n    barAriaLabel,\n    barAriaLabelledBy,\n    barAriaDescribedBy,\n\n    initialHiddenIds,\n}: InnerBarProps<RawDatum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        toggleSerie,\n        legendsWithData,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n        initialHiddenIds,\n    })\n\n    const transition = useTransition<\n        ComputedBarDatumWithValue<RawDatum>,\n        {\n            borderColor: string\n            color: string\n            height: number\n            labelColor: string\n            labelOpacity: number\n            labelX: number\n            labelY: number\n            opacity: number\n            transform: string\n            width: number\n        }\n    >(barsWithValue, {\n        keys: bar => bar.key,\n        from: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        enter: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        update: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        leave: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            labelX: bar.width / 2,\n            labelY: 0,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      labelX: 0,\n                      labelY: bar.height / 2,\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const commonProps = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getTooltipLabel,\n            tooltip,\n            isFocusable,\n            ariaLabel: barAriaLabel,\n            ariaLabelledBy: barAriaLabelledBy,\n            ariaDescribedBy: barAriaDescribedBy,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            getTooltipLabel,\n            isInteractive,\n            labelSkipHeight,\n            labelSkipWidth,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            tooltip,\n            isFocusable,\n            barAriaLabel,\n            barAriaLabelledBy,\n            barAriaDescribedBy,\n        ]\n    )\n\n    const boundDefs = bindDefs(defs, bars, fill, {\n        dataKey: 'data',\n        targetKey: 'data.fill',\n    })\n\n    const layerById: Record<BarLayerId, ReactNode> = {\n        annotations: null,\n        axes: null,\n        bars: null,\n        grid: null,\n        legends: null,\n        markers: null,\n    }\n\n    if (layers.includes('annotations')) {\n        layerById.annotations = (\n            <BarAnnotations key=\"annotations\" bars={bars} annotations={annotations} />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (layers.includes('bars')) {\n        layerById.bars = (\n            <Fragment key=\"bars\">\n                {transition((style, bar) =>\n                    createElement(barComponent, {\n                        ...commonProps,\n                        bar,\n                        style,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                        label: getLabel(bar.data),\n                    })\n                )}\n            </Fragment>\n        )\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        )\n    }\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <BarLegends\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                legends={legendsWithData}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    if (layers.includes('markers')) {\n        layerById.markers = (\n            <CartesianMarkers<number | string, number>\n                key=\"markers\"\n                markers={markers as any[]}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale as (v: number | string) => number}\n                yScale={yScale as (v: number) => number}\n            />\n        )\n    }\n\n    const layerContext: BarCustomLayerProps<RawDatum> = useMemo(\n        () => ({\n            ...commonProps,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendData: legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        }),\n        [\n            commonProps,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        ]\n    )\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n            isFocusable={isFocusable}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Bar = <RawDatum extends BarDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: BarSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerBar<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import {\n    BarCanvasCustomLayerProps,\n    BarCanvasLayer,\n    BarCanvasProps,\n    BarDatum,\n    ComputedBarDatum,\n} from './types'\nimport {\n    Container,\n    Margin,\n    getRelativeCursor,\n    isCursorInRect,\n    useDimensions,\n    useTheme,\n} from '@nivo/core'\nimport {\n    ForwardedRef,\n    createElement,\n    forwardRef,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react'\nimport { canvasDefaultProps } from './props'\nimport {\n    renderAnnotationsToCanvas,\n    useAnnotations,\n    useComputedAnnotations,\n} from '@nivo/annotations'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useBar } from './hooks'\n\ntype InnerBarCanvasProps<RawDatum extends BarDatum> = Omit<\n    BarCanvasProps<RawDatum>,\n    'renderWrapper' | 'theme'\n> & {\n    canvasRef: ForwardedRef<HTMLCanvasElement>\n}\n\nconst findBarUnderCursor = <RawDatum,>(\n    nodes: ComputedBarDatum<RawDatum>[],\n    margin: Margin,\n    x: number,\n    y: number\n) =>\n    nodes.find(node =>\n        isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y)\n    )\n\nconst isNumber = (value: unknown): value is number => typeof value === 'number'\n\nconst InnerBarCanvas = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = canvasDefaultProps.axisBottom,\n    axisLeft = canvasDefaultProps.axisLeft,\n    enableGridX = canvasDefaultProps.enableGridX,\n    enableGridY = canvasDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = canvasDefaultProps.layers as BarCanvasLayer<RawDatum>[],\n    renderBar = (\n        ctx,\n        {\n            bar: { color, height, width, x, y },\n\n            borderColor,\n            borderRadius,\n            borderWidth,\n            label,\n            labelColor,\n            shouldRenderLabel,\n        }\n    ) => {\n        ctx.fillStyle = color\n\n        if (borderWidth > 0) {\n            ctx.strokeStyle = borderColor\n            ctx.lineWidth = borderWidth\n        }\n\n        ctx.beginPath()\n\n        if (borderRadius > 0) {\n            const radius = Math.min(borderRadius, height)\n\n            ctx.moveTo(x + radius, y)\n            ctx.lineTo(x + width - radius, y)\n            ctx.quadraticCurveTo(x + width, y, x + width, y + radius)\n            ctx.lineTo(x + width, y + height - radius)\n            ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height)\n            ctx.lineTo(x + radius, y + height)\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius)\n            ctx.lineTo(x, y + radius)\n            ctx.quadraticCurveTo(x, y, x + radius, y)\n            ctx.closePath()\n        } else {\n            ctx.rect(x, y, width, height)\n        }\n\n        ctx.fill()\n\n        if (borderWidth > 0) {\n            ctx.stroke()\n        }\n\n        if (shouldRenderLabel) {\n            ctx.textBaseline = 'middle'\n            ctx.textAlign = 'center'\n            ctx.fillStyle = labelColor\n            ctx.fillText(label, x + width / 2, y + height / 2)\n        }\n    },\n\n    enableLabel = canvasDefaultProps.enableLabel,\n    label,\n    labelSkipWidth = canvasDefaultProps.labelSkipWidth,\n    labelSkipHeight = canvasDefaultProps.labelSkipHeight,\n    labelTextColor,\n\n    colorBy,\n    colors,\n    borderRadius = canvasDefaultProps.borderRadius,\n    borderWidth = canvasDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = canvasDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = canvasDefaultProps.isInteractive,\n    tooltip = canvasDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    pixelRatio = canvasDefaultProps.pixelRatio,\n\n    canvasRef,\n}: InnerBarCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n\n    const theme = useTheme()\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        legendsWithData,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    // Using any because return type isn't correct\n    const boundAnnotations: any = useComputedAnnotations({\n        annotations: useAnnotations({\n            data: bars,\n            annotations,\n            getPosition: node => ({\n                x: node.x,\n                y: node.y,\n            }),\n            getDimensions: ({ width, height }) => ({\n                width,\n                height,\n                size: Math.max(width, height),\n            }),\n        }),\n    })\n\n    // We use `any` here until we can figure out the best way to type xScale/yScale\n    const layerContext: BarCanvasCustomLayerProps<RawDatum> = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            isInteractive,\n            isFocusable: false,\n            labelSkipWidth,\n            labelSkipHeight,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendData: legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        ]\n    )\n\n    useEffect(() => {\n        const ctx = canvasEl.current?.getContext('2d')\n\n        if (!canvasEl.current) return\n        if (!ctx) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'grid') {\n                if (isNumber(theme.grid.line.strokeWidth) && theme.grid.line.strokeWidth > 0) {\n                    ctx.lineWidth = theme.grid.line.strokeWidth\n                    ctx.strokeStyle = theme.grid.line.stroke as string\n\n                    if (enableGridX) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width,\n                            height,\n                            scale: xScale,\n                            axis: 'x',\n                            values: gridXValues,\n                        })\n                    }\n\n                    if (enableGridY) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width,\n                            height,\n                            scale: yScale,\n                            axis: 'y',\n                            values: gridYValues,\n                        })\n                    }\n                }\n            } else if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale: xScale,\n                    yScale: yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            } else if (layer === 'bars') {\n                barsWithValue.forEach(bar => {\n                    renderBar(ctx, {\n                        bar,\n                        borderColor: getBorderColor(bar) as string,\n                        borderRadius,\n                        borderWidth,\n                        label: getLabel(bar.data),\n                        labelColor: getLabelColor(bar) as string,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                    })\n                })\n            } else if (layer === 'legends') {\n                legendsWithData.forEach(([legend, data]) => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            } else if (layer === 'annotations') {\n                renderAnnotationsToCanvas(ctx, { annotations: boundAnnotations, theme })\n            } else if (typeof layer === 'function') {\n                layer(ctx, layerContext)\n            }\n        })\n\n        ctx.save()\n    }, [\n        axisBottom,\n        axisLeft,\n        axisRight,\n        axisTop,\n        barsWithValue,\n        borderRadius,\n        borderWidth,\n        boundAnnotations,\n        enableGridX,\n        enableGridY,\n        getBorderColor,\n        getLabel,\n        getLabelColor,\n        gridXValues,\n        gridYValues,\n        groupMode,\n        height,\n        innerHeight,\n        innerWidth,\n        layerContext,\n        layers,\n        layout,\n        legendsWithData,\n        margin.left,\n        margin.top,\n        outerHeight,\n        outerWidth,\n        pixelRatio,\n        renderBar,\n        xScale,\n        yScale,\n        reverse,\n        shouldRenderBarLabel,\n        theme,\n        width,\n    ])\n\n    const handleMouseHover = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                showTooltipFromEvent(\n                    createElement(tooltip, {\n                        ...bar.data,\n                        color: bar.color,\n                        label: bar.label,\n                        value: Number(bar.data.value),\n                    }),\n                    event\n                )\n\n                if (event.type === 'mouseenter') {\n                    onMouseEnter?.(bar.data, event)\n                }\n            } else {\n                hideTooltip()\n            }\n        },\n        [hideTooltip, margin, onMouseEnter, bars, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            hideTooltip()\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar) {\n                onMouseLeave?.(bar.data, event)\n            }\n        },\n        [hideTooltip, margin, onMouseLeave, bars]\n    )\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                onClick?.({ ...bar.data, color: bar.color }, event)\n            }\n        },\n        [margin, onClick, bars]\n    )\n\n    return (\n        <canvas\n            ref={canvas => {\n                canvasEl.current = canvas\n                if (canvasRef && 'current' in canvasRef) canvasRef.current = canvas\n            }}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const BarCanvas = forwardRef(\n    <RawDatum extends BarDatum>(\n        { isInteractive, renderWrapper, theme, ...props }: BarCanvasProps<RawDatum>,\n        ref: ForwardedRef<HTMLCanvasElement>\n    ) => (\n        <Container {...{ isInteractive, renderWrapper, theme }} animate={false}>\n            <InnerBarCanvas<RawDatum> {...props} canvasRef={ref} />\n        </Container>\n    )\n)\n","import { Bar } from './Bar'\nimport { BarDatum, BarSvgProps } from './types'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveBar = <RawDatum extends BarDatum>(\n    props: Omit<BarSvgProps<RawDatum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Bar<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { BarDatum, BarCanvasProps } from './types'\nimport { BarCanvas } from './BarCanvas'\nimport { ForwardedRef, forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveBarCanvas = forwardRef(function ResponsiveBarCanvas<\n    RawDatum extends BarDatum\n>(props: Omit<BarCanvasProps<RawDatum>, 'height' | 'width'>, ref: ForwardedRef<HTMLCanvasElement>) {\n    return (\n        <ResponsiveWrapper>\n            {({ width, height }) => (\n                <BarCanvas\n                    width={width}\n                    height={height}\n                    {...(props as Omit<BarCanvasProps<BarDatum>, 'height' | 'width'>)}\n                    ref={ref}\n                />\n            )}\n        </ResponsiveWrapper>\n    )\n})\n"]},"metadata":{},"sourceType":"module"}