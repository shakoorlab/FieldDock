{"ast":null,"code":"'use strict';\n\n/* replacement start */\nconst process = require('process/');\n\n/* replacement end */\n\nconst {\n  PromisePrototypeThen,\n  SymbolAsyncIterator,\n  SymbolIterator\n} = require('../../ours/primordials');\nconst {\n  Buffer\n} = require('buffer');\nconst {\n  ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_NULL_VALUES\n} = require('../../ours/errors').codes;\nfunction from(Readable, iterable, opts) {\n  let iterator;\n  if (typeof iterable === 'string' || iterable instanceof Buffer) {\n    return new Readable({\n      objectMode: true,\n      ...opts,\n      read() {\n        this.push(iterable);\n        this.push(null);\n      }\n    });\n  }\n  let isAsync;\n  if (iterable && iterable[SymbolAsyncIterator]) {\n    isAsync = true;\n    iterator = iterable[SymbolAsyncIterator]();\n  } else if (iterable && iterable[SymbolIterator]) {\n    isAsync = false;\n    iterator = iterable[SymbolIterator]();\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('iterable', ['Iterable'], iterable);\n  }\n  const readable = new Readable({\n    objectMode: true,\n    highWaterMark: 1,\n    // TODO(ronag): What options should be allowed?\n    ...opts\n  });\n\n  // Flag to protect against _read\n  // being called before last iteration completion.\n  let reading = false;\n  readable._read = function () {\n    if (!reading) {\n      reading = true;\n      next();\n    }\n  };\n  readable._destroy = function (error, cb) {\n    PromisePrototypeThen(close(error), () => process.nextTick(cb, error),\n    // nextTick is here in case cb throws\n    e => process.nextTick(cb, e || error));\n  };\n  async function close(error) {\n    const hadError = error !== undefined && error !== null;\n    const hasThrow = typeof iterator.throw === 'function';\n    if (hadError && hasThrow) {\n      const {\n        value,\n        done\n      } = await iterator.throw(error);\n      await value;\n      if (done) {\n        return;\n      }\n    }\n    if (typeof iterator.return === 'function') {\n      const {\n        value\n      } = await iterator.return();\n      await value;\n    }\n  }\n  async function next() {\n    for (;;) {\n      try {\n        const {\n          value,\n          done\n        } = isAsync ? await iterator.next() : iterator.next();\n        if (done) {\n          readable.push(null);\n        } else {\n          const res = value && typeof value.then === 'function' ? await value : value;\n          if (res === null) {\n            reading = false;\n            throw new ERR_STREAM_NULL_VALUES();\n          } else if (readable.push(res)) {\n            continue;\n          } else {\n            reading = false;\n          }\n        }\n      } catch (err) {\n        readable.destroy(err);\n      }\n      break;\n    }\n  }\n  return readable;\n}\nmodule.exports = from;","map":{"version":3,"names":["process","require","PromisePrototypeThen","SymbolAsyncIterator","SymbolIterator","Buffer","ERR_INVALID_ARG_TYPE","ERR_STREAM_NULL_VALUES","codes","from","Readable","iterable","opts","iterator","objectMode","read","push","isAsync","readable","highWaterMark","reading","_read","next","_destroy","error","cb","close","nextTick","e","hadError","undefined","hasThrow","throw","value","done","return","res","then","err","destroy","module","exports"],"sources":["/Users/jstanton/Coding/FieldDock/FieldDockMain/node_modules/mqtt/node_modules/readable-stream/lib/internal/streams/from.js"],"sourcesContent":["'use strict'\n\n/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n\nconst { PromisePrototypeThen, SymbolAsyncIterator, SymbolIterator } = require('../../ours/primordials')\nconst { Buffer } = require('buffer')\nconst { ERR_INVALID_ARG_TYPE, ERR_STREAM_NULL_VALUES } = require('../../ours/errors').codes\nfunction from(Readable, iterable, opts) {\n  let iterator\n  if (typeof iterable === 'string' || iterable instanceof Buffer) {\n    return new Readable({\n      objectMode: true,\n      ...opts,\n      read() {\n        this.push(iterable)\n        this.push(null)\n      }\n    })\n  }\n  let isAsync\n  if (iterable && iterable[SymbolAsyncIterator]) {\n    isAsync = true\n    iterator = iterable[SymbolAsyncIterator]()\n  } else if (iterable && iterable[SymbolIterator]) {\n    isAsync = false\n    iterator = iterable[SymbolIterator]()\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('iterable', ['Iterable'], iterable)\n  }\n  const readable = new Readable({\n    objectMode: true,\n    highWaterMark: 1,\n    // TODO(ronag): What options should be allowed?\n    ...opts\n  })\n\n  // Flag to protect against _read\n  // being called before last iteration completion.\n  let reading = false\n  readable._read = function () {\n    if (!reading) {\n      reading = true\n      next()\n    }\n  }\n  readable._destroy = function (error, cb) {\n    PromisePrototypeThen(\n      close(error),\n      () => process.nextTick(cb, error),\n      // nextTick is here in case cb throws\n      (e) => process.nextTick(cb, e || error)\n    )\n  }\n  async function close(error) {\n    const hadError = error !== undefined && error !== null\n    const hasThrow = typeof iterator.throw === 'function'\n    if (hadError && hasThrow) {\n      const { value, done } = await iterator.throw(error)\n      await value\n      if (done) {\n        return\n      }\n    }\n    if (typeof iterator.return === 'function') {\n      const { value } = await iterator.return()\n      await value\n    }\n  }\n  async function next() {\n    for (;;) {\n      try {\n        const { value, done } = isAsync ? await iterator.next() : iterator.next()\n        if (done) {\n          readable.push(null)\n        } else {\n          const res = value && typeof value.then === 'function' ? await value : value\n          if (res === null) {\n            reading = false\n            throw new ERR_STREAM_NULL_VALUES()\n          } else if (readable.push(res)) {\n            continue\n          } else {\n            reading = false\n          }\n        }\n      } catch (err) {\n        readable.destroy(err)\n      }\n      break\n    }\n  }\n  return readable\n}\nmodule.exports = from\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}