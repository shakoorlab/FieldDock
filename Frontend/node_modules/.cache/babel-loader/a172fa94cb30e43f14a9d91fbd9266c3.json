{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TypedEventEmitter = void 0;\nconst events_1 = __importDefault(require(\"events\"));\nconst shared_1 = require(\"./shared\");\nclass TypedEventEmitter {}\nexports.TypedEventEmitter = TypedEventEmitter;\n(0, shared_1.applyMixin)(TypedEventEmitter, events_1.default);","map":{"version":3,"names":["events_1","__importDefault","require","shared_1","TypedEventEmitter","exports","applyMixin","default"],"sources":["/Users/jstanton/Coding/FieldDock/FieldDockMain/node_modules/mqtt/src/lib/TypedEmitter.ts"],"sourcesContent":["import EventEmitter from 'events'\nimport { applyMixin } from './shared'\n\nexport type EventHandler =\n\t// Add more overloads as necessary\n\t| ((arg1: any, arg2: any, arg3: any, arg4: any) => void)\n\t| ((arg1: any, arg2: any, arg3: any) => void)\n\t| ((arg1: any, arg2: any) => void)\n\t| ((arg1: any) => void)\n\t| ((...args: any[]) => void)\n\nexport interface TypedEventEmitter<\n\tTEvents extends Record<keyof TEvents, EventHandler>,\n> {\n\ton<TEvent extends keyof TEvents>(\n\t\tevent: TEvent,\n\t\tcallback: TEvents[TEvent],\n\t): this\n\tonce<TEvent extends keyof TEvents>(\n\t\tevent: TEvent,\n\t\tcallback: TEvents[TEvent],\n\t): this\n\tremoveListener<TEvent extends keyof TEvents>(\n\t\tevent: TEvent,\n\t\tcallback: TEvents[TEvent],\n\t): this\n\toff<TEvent extends keyof TEvents>(\n\t\tevent: TEvent,\n\t\tcallback: TEvents[TEvent],\n\t): this\n\tremoveAllListeners(event?: keyof TEvents): this\n\n\temit<TEvent extends keyof TEvents>(\n\t\tevent: TEvent,\n\t\t...args: Parameters<TEvents[TEvent]>\n\t): boolean\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nexport class TypedEventEmitter<\n\tTEvents extends Record<keyof TEvents, EventHandler>,\n> {}\n\n// Make TypedEventEmitter inherit from EventEmitter without actually extending\napplyMixin(TypedEventEmitter, EventEmitter)\n"],"mappings":";;;;;;;;;;;AAAA,MAAAA,QAAA,GAAAC,eAAA,CAAAC,OAAA;AACA,MAAAC,QAAA,GAAAD,OAAA;AAsCA,MAAaE,iBAAiB;AAA9BC,OAAA,CAAAD,iBAAA,GAAAA,iBAAA;AAKA,IAAAD,QAAA,CAAAG,UAAU,EAACF,iBAAiB,EAAEJ,QAAA,CAAAO,OAAY,CAAC"},"metadata":{},"sourceType":"script"}